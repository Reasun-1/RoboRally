2021-07-26 09:45:38  [ Thread-84:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-84
2021-07-26 09:45:38  [ Thread-84:client.model.Client:715 ] - [ INFO ]  j2021-07-26 09:45:43  [ Thread-0:server.network.ServerThread:108 ] - [ INFO ]  welcome info printed
2021-07-26 09:47:57  [ Thread-1:server.network.ServerThread:66 ] - [ INFO ]  protocol to client: 
{"messageType":"HelloClient","messageBody":{"protocol":"Version 1.0"}}
2021-07-26 09:48:08  [ Thread-1:server.network.ServerThread:108 ] - [ INFO ]  welcome info printed
2021-07-26 09:48:18  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"PlayerValues","messageBody":{"name":"tina","figure":2}}
2021-07-26 09:48:18  [ Thread-0:protocol.ExecuteOrder:72 ] - [ INFO ]  check player figures
2021-07-26 09:48:18  [ Thread-0:protocol.ExecuteOrder:80 ] - [ INFO ]  addPlayer
2021-07-26 09:48:18  [ Thread-0:server.network.Server:247 ] - [ INFO ]  server added player
2021-07-26 09:49:09  [ Thread-1:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"PlayerValues","messageBody":{"name":"o","figure":5}}
2021-07-26 09:49:09  [ Thread-1:protocol.ExecuteOrder:72 ] - [ INFO ]  check player figures
2021-07-26 09:49:09  [ Thread-1:protocol.ExecuteOrder:80 ] - [ INFO ]  addPlayer
2021-07-26 09:49:09  [ Thread-1:server.network.Server:247 ] - [ INFO ]  server added player
2021-07-26 09:49:09  [ Thread-1:server.network.Server:265 ] - [ INFO ]  server added player
2021-07-26 09:49:09  [ Thread-1:server.network.Server:265 ] - [ INFO ]  server added player
2021-07-26 09:49:18  [ Thread-1:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"SetStatus","messageBody":{"ready":true}}
2021-07-26 09:49:18  [ Thread-1:protocol.ExecuteOrder:116 ] - [ INFO ]  set Status in ExecuteOrder
2021-07-26 09:49:18  [ Thread-1:server.network.Server:279 ] - [ INFO ]  server inform player status
2021-07-26 09:49:18  [ Thread-1:server.network.Server:313 ] - [ INFO ]  server informs first ready player to select a map
2021-07-26 09:49:18  [ Thread-1:protocol.ExecuteOrder:536 ] - [ INFO ]  number of ready clients: 1
2021-07-26 09:49:18  [ Thread-3:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-26 09:49:18  [ Thread-1:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 09:49:18  [ Thread-1:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-26 09:49:18  [ Thread-1:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-26 09:49:23  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-26 09:49:28  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-26 09:49:28  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-26 09:49:28  [ Thread-3:server2021-07-26 09:49:38  [ Thread-84:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-84
2021-07-26 09:49:38  [ Thread-84:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"MapSelected","messageBody":{"map":"Dizzy Highway"}}Thread-84
2021-07-26 09:49:43  [ JavaFX Application Thread:client.model.Client:1264 ] - [ INFO ]  {"messageType":"SetStatus","messageBody":{"ready":true}}
2021-07-26 09:49:43  [ Thread-84:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-84
2021-07-26 09:49:43  [ Thread-84:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"PlayerStatus","messageBody":{"clientID":33,"ready":true}}Thread-84
2021-07-26 09:49:43  [ JavaFX Application Thread:client.model.Client:844 ] - [ INFO ]  {"messageType":"PlayerStatus","messageBody":{"clientID":33,"ready":true}}
2021-07-26 09:49:44  [ Thread-84:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-84
2021-07-26 09:49:44  [ Thread-84:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"GameStarted","messageBody":{"gameMap":[[[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Antenna","isOnBoard":"Start A","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["top"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"ConveyorBelt","isOnBoard":"Start A","speed":1,"orientations":["right","left"],"registe2021-07-26 09:49:44  [ Thread-0:server.network.Server:359 ] - [ INFO ]  server sends phase info
2021-07-26 09:49:44  [ Thread-0:server.network.Server:372 ] - [ INFO ]  server informs current player id
2021-07-26 09:49:45  [ Thread-5:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 09:49:45  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 09:49:45  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 09:49:45  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 09:49:48  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-26 09:49:48  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-26 09:49:48  [ Thread-3:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-26 09:49:48  [ Thread-1:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 09:49:48  [ Thread-1:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-26 09:49:48  [ Thread-1:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-26 09:49:48  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-26 09:49:50  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 09:49:53  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-26 09:49:55  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 09:49:55  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 09:49:55  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 09:49:55  [ Thread-5:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 09:49:55  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 09:49:55  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 09:49:55  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 09:49:58  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-26 09:49:58  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-26 09:49:58  [ Thread-3:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-26 09:49:58  [ Thread-1:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 09:49:58  [ Thread-1:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-26 09:49:58  [ Thread-1:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-26 09:49:58  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-26 09:50:00  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 09:50:03  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-26 09:50:05  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 09:50:05  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 09:50:05  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 09:50:05  [ Thread-5:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 09:50:05  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 09:50:05  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 09:50:05  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 09:50:08  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-26 09:50:08  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-26 09:50:08  [ Thread-3:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-26 09:50:08  [ Thread-1:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 09:50:08  [ Thread-1:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-26 09:50:08  [ Thread-1:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-26 09:50:08  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-26 09:50:10  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 09:50:11  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"SetStartingPoint","messageBody":{"x":0,"y":3}}
2021-07-26 09:50:11  [ Thread-0:server.network.Server:387 ] - [ INFO ]  server informs set starting point
2021-07-26 09:50:11  [ Thread-0:server.network.Server:372 ] - [ INFO ]  server informs current player id
2021-07-26 09:50:13  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-26 09:50:15  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 09:50:15  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 09:50:15  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 09:50:15  [ Thread-5:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 09:50:15  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 09:50:15  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 09:50:15  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 09:50:15  [ Thread-4:server.network.Connected:73 ] - [ INFO ]  33 in first if print flagconnect: true
2021-07-26 09:50:18  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-26 09:50:18  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-26 09:50:18  [ Thread-3:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-26 09:50:18  [ Thread-1:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 09:50:18  [ Thread-1:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-26 09:50:18  [ Thread-1:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-26 09:50:18  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-26 09:50:19  [ Thread-1:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"SetStartingPoint","messageBody":{"x":0,"y":6}}
2021-07-26 09:50:19  [ Thread-1:server.network.Server:387 ] - [ INFO ]  server informs set starting point
2021-07-26 09:50:19  [ Thread-1:server.network.Server:359 ] - [ INFO ]  server sends phase info
2021-07-26 09:50:19  [ Thread-1:server.network.Server:752 ] - [ INFO ]  server informs Refill upgrade shop.
2021-07-26 09:50:19  [ Thread-1:protocol.ExecuteOrder:227 ] - [ INFO ]  after setting startPoint, priority list: [33, 100]
2021-07-26 09:50:19  [ Thread-1:server.network.Server:372 ] - [ INFO ]  server informs current player id
2021-07-26 09:50:22  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 09:50:23  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-26 09:50:26  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 09:50:26  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 09:50:26  [ Thread-5:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 09:50:26  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 09:50:26  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 09:50:26  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 09:50:27  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 09:50:28  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-26 09:50:28  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-26 09:50:28  [ Thread-3:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-26 09:50:28  [ Thread-1:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 09:50:28  [ Thread-1:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-26 09:50:28  [ Thread-1:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-26 09:50:28  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-26 09:50:31  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"BuyUpgrade","messageBody":{"card":"MemorySwap","isBuying":true}}
2021-07-26 09:50:31  [ Thread-0:server.network.Server:766 ] - [ INFO ]  server informs who bought which upgrade.
2021-07-26 09:50:31  [ Thread-0:server.network.Server:372 ] - [ INFO ]  server informs current player id
2021-07-26 09:50:32  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 09:50:33  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-26 09:50:36  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 09:50:36  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 09:50:36  [ Thread-5:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 09:50:36  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 09:50:36  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 09:50:36  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 09:50:37  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 09:50:38  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-26 09:50:38  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-26 09:50:38  [ Thread-3:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-26 09:50:38  [ Thread-1:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 09:50:38  [ Thread-1:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-26 09:50:38  [ Thread-1:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-26 09:50:38  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-26 09:50:42  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 09:50:43  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-26 09:50:46  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 09:50:46  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 09:50:46  [ Thread-5:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 09:50:46  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 09:50:47  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 09:50:47  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 09:50:47  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 09:50:48  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-26 09:50:48  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-26 09:50:48  [ Thread-3:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-26 09:50:48  [ Thread-1:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 09:50:48  [ Thread-1:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-26 09:50:48  [ Thread-1:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-26 09:50:48  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-26 09:50:49  [ Thread-1:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"BuyUpgrade","messageBody":{"card":null,"isBuying":false}}
2021-07-26 09:50:49  [ Thread-1:server.network.Server:359 ] - [ INFO ]  server sends phase info
2021-07-26 09:50:49  [ Thread-1:server.network.Server:401 ] - [ INFO ]  server informs your cards.
2021-07-26 09:50:49  [ Thread-1:server.network.Server:401 ] - [ INFO ]  server informs your cards.
2021-07-26 09:50:52  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 09:50:53  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-26 09:50:57  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 09:50:57  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 09:50:57  [ Thread-5:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 09:50:57  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 09:50:57  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 09:50:57  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 09:50:57  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 09:50:58  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-26 09:50:58  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-26 09:50:58  [ Thread-3:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-26 09:50:58  [ Thread-1:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 09:50:58  [ Thread-1:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-26 09:50:58  [ Thread-1:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-26 09:50:58  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-26 09:51:02  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 09:51:03  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-26 09:51:07  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 09:51:07  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 09:51:07  [ Thread-5:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 09:51:07  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 09:51:07  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 09:51:07  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 09:51:07  [ Thread-4:ser2021-07-26 09:51:17  [ Thread-84:client.model.Client:708 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-84
2021-07-26 09:51:17  [ Thread-84:client.model.Client:709 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-26 09:51:27  [ Thread-84:client.model.Client:708 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-84
2021-07-26 09:51:27  [ Thread-84:client.model.Client:709 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-26 09:51:33  [ JavaFX Application Thread:client.model.Client:1452 ] - [ INFO ]  {"messageType":"SelectedCard","messageBody":{"card":"MoveIII","register":1}}
2021-07-26 09:51:33  [ Thread-84:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-84
2021-07-26 09:51:33  [ Thread-84:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":33,"register":1,"filled":true}}Thread-84
2021-07-26 09:51:33  [ JavaFX Application Thread:client.model.Client:1011 ] - [ INFO ]  33 has for register 1true
2021-07-26 09:51:37  [ Thread-84:client.model.Client:708 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-84
2021-07-26 09:51:37  [ Thread-84:client.model.Client:709 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-26 09:51:47  [ Thread-84:client.model.Client:708 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-84
2021-07-26 09:51:47  [ Thread-84:client.model.Client:709 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-26 09:51:49  [ JavaFX Application Thread:client.model.Client:1452 ] - [ INFO ]  {"messageType":"SelectedCard","messageBody":{"card":"Again","register":2}}
2021-07-26 09:51:49  [ Thread-84:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-84
2021-07-26 09:51:49  [ Thread-84:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":33,"register":2,"filled":true}}Thread-84
2021-07-26 09:51:49  [ JavaFX Application Thread:client.model.Client:1011 ] - [ INFO ]  33 has for register 2true
2021-07-26 09:51:57  [ Thread-84:client.model.Client:708 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-84
2021-07-26 09:51:57  [ Thread-84:client.model.Client:709 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-26 09:51:59  [ JavaFX Application Thread:client.model.Client:1452 ] - [ INFO ]  {"messageType":"SelectedCard","messageBody":{"card":"TurnRight","register":3}}
2021-07-26 09:51:59  [ Thread-84:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-84
2021-07-26 09:51:59  [ Thread-84:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":33,"register":3,"filled":true}}Thread-84
2021-07-26 09:51:59  [ JavaFX Application Thread:client.model.Client:1011 ] - [ INFO ]  33 has for register 3true
2021-07-26 09:52:07  [ JavaFX Application Thread:client.model.Client:1452 ] - [ INFO ]  {"messageType":"SelectedCard","messageBody":{"card":"MoveI","register":4}}
2021-07-26 09:52:07  [ Thread-84:client.model.Client:708 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-84
2021-07-26 09:52:07  [ Thread-84:client.model.Client:709 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-26 09:52:07  [ Thread-84:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-84
2021-07-26 09:52:07  [ Thread-84:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":33,"register":4,"filled":true}}Thread-84
2021-07-26 09:52:07  [ JavaFX Application Thread:client.model.Client:1011 ] - [ INFO ]  33 has for register 4true
2021-07-26 09:52:09  [ JavaFX Application Thread:client.model.Client:1452 ] - [ INFO ]  {"messageType":"SelectedCard","messageBody":{"card":"TurnLeft","register":5}}
2021-07-26 09:52:09  [ Thread-84:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-84
2021-07-26 09:52:09  [ Thread-84:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":33,"register":5,"filled":true}}Thread-84
2021-07-26 09:52:09  [ JavaFX Application Thread:client.model.Client:1011 ] - [ INFO ]  33 has for register 5true
2021-07-26 09:52:12  [ JavaFX Application Thread:client.model.Client:1474 ] - [ INFO ]  {"messageType":"SelectionFinished","messageBody":{"clientID":33}}
2021-07-26 09:52:12  [ Thread-84:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-84
2021-07-26 09:52:12  [ Thread-84:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"TimerStarted","messageBody":null}Thread-84
2021-07-26 09:52:12  [ JavaFX Application Thread:client.model.Client:1015 ] - [ INFO ]  timer is on
2021-07-26 09:52:16  [ Thread-84:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-84
2021-07-26 09:52:16  [ Thread-84:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":100,"register":1,"filled":true}}Thread-84
2021-07-26 09:52:16  [ JavaFX Application Thread:client.model.Client:1011 ] - [ INFO ]  100 has for register 1true
2021-07-26 09:52:17  [ Thread-84:client.model.Client:708 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-84
2021-07-26 09:52:17  [ Thread-84:client.model.Client:709 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-26 09:52:18  [ Thread-84:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-84
2021-07-26 09:52:18  [ Thread-84:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":100,"register":2,"filled":true}}Thread-84
2021-07-26 09:52:18  [ JavaFX Application Thread:client.model.Client:1011 ] - [ INFO ]  100 has for register 2true
2021-07-26 09:52:19  [ Thread-84:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-84
2021-07-26 09:52:19  [ Thread-84:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":100,"register":3,"filled":true}}Thread-84
2021-07-26 09:52:19  [ JavaFX Application Thread:client.model.Client:1011 ] - [ INFO ]  100 has for register 3true
2021-07-26 09:52:21  [ Thread-84:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-84
2021-07-26 09:52:21  [ Thread-84:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":100,"register":4,"filled":true}}Thread-84
2021-07-26 09:52:21  [ JavaFX Application Thread:client.model.Client:1011 ] - [ INFO ]  100 has for register 4true
2021-07-26 09:52:22  [ Thread-84:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-84
2021-07-26 09:52:22  [ Thread-84:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":100,"register":5,"filled":true}}Thread-84
2021-07-26 09:52:22  [ JavaFX Application Thread:client.model.Client:1011 ] - [ INFO ]  100 has for register 5true
2021-07-26 09:52:23  [ Thread-84:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-84
2021-07-26 09:52:23  [ Thread-84:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"ActivePhase","messageBody":{"phase":3}}Thread-84
2021-07-26 09:52:23  [ Thread-84:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-84
2021-07-26 09:52:23  [ Thread-84:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CurrentCards","messageBody":{"currentRegistersAllClients":[{"clientID":33,"cardName":"MoveIII"},{"clientID":100,"cardName":"MoveII"}]}}Thread-84
2021-07-26 09:52:23  [ JavaFX Application Thread:client.model.Client:1042 ] - [ INFO ]  33 has for current register: MoveIII
2021-07-26 09:52:23  [ JavaFX Application Thread:client.model.Client:1042 ] - [ INFO ]  100 has for current register: MoveII
2021-07-26 09:52:23  [ Thread-84:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-84
2021-07-26 09:52:23  [ Thread-84:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-84
2021-07-26 09:52:27  [ Thread-84:client.model.Client:708 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-84
2021-07-26 09:52:27  [ Thread-84:client.model.Client:709 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-26 09:52:31  [ JavaFX Application Thread:client.model.Client:1489 ] - [ INFO ]  {"messageType":"PlayCard","messageBody":{"card":"MoveIII"}}
2021-07-26 09:52:31  [ Thread-84:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-84
2021-07-26 09:52:31  [ Thread-84:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":33,"card":"MoveIII"}}Thread-84
2021-07-26 09:52:31  [ JavaFX Application Thread:client.model.Client:1049 ] - [ INFO ]  client 33 has played MoveIII
2021-07-26 09:52:32  [ Thread-84:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-84
2021-07-26 09:52:32  [ Thread-84:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":33,"x":3,"y":3}}Thread-84
2021-07-26 09:52:32  [ Thread-84:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-84
2021-07-26 09:52:32  [ Thread-84:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":100}}Thread-84
2021-07-26 09:52:35  [ Thread-84:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-84
2021-07-26 09:52:35  [ Thread-84:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":100,"card":"MoveII"}}Thread-84
2021-07-26 09:52:35  [ Thread-84:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-84
2021-07-26 09:52:35  [ Thread-84:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":100,"x":2,"y":6}}Thread-84
2021-07-26 09:52:35  [ JavaFX Application Thread:client.model.Client:1049 ] - [ INFO ]  client 100 has played MoveII
2021-07-26 09:52:35  [ Thread-84:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-84
2021-07-26 09:52:35  [ Thread-84:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":100}}Thread-84
2021-07-26 09:52:37  [ Thread-84:client.model.Client:708 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-84
2021-07-26 09:52:37  [ Thread-84:client.model.Client:709 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-26 09:52:44  [ Thread-84:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-84
2021-07-26 09:52:44  [ Thread-84:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":100,"card":"MoveIII"}}Thread-84
2021-07-26 09:52:44  [ Thread-84:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-84
2021-07-26 09:52:44  [ Thread-84:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":100,"x":5,"y":6}}Thread-84
2021-07-26 09:52:44  [ Thread-84:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-84
2021-07-26 09:52:44  [ Thread-84:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-84
2021-07-26 09:52:44  [ JavaFX Application Thread:client.model.Client:1049 ] - [ INFO ]  client 100 has played MoveIII
2021-07-26 09:52:47  [ Thread-84:client.model.Client:708 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-84
2021-07-26 09:52:47  [ Thread-84:client.model.Client:709 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-26 09:52:48  [ JavaFX Application Thread:client.model.Client:1489 ] - [ INFO ]  {"messageType":"PlayCard","messageBody":{"card":"Again"}}
2021-07-26 09:52:48  [ Thread-84:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-84
2021-07-26 09:52:48  [ Thread-84:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":33,"card":"Again"}}Thread-84
2021-07-26 09:52:48  [ Thread-84:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-84
2021-07-26 09:52:48  [ Thread-84:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":33,"x":6,"y":3}}Thread-84
2021-07-26 09:52:48  [ Thread-84:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-84
2021-07-26 09:52:48  [ Thread-84:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":100}}Thread-84
2021-07-26 09:52:48  [ JavaFX Application Thread:client.model.Client:1049 ] - [ INFO ]  client 33 has played Again
2021-07-26 09:52:51  [ Thread-84:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-84
2021-07-26 09:52:51  [ Thread-84:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":100,"card":"MoveI"}}Thread-84
2021-07-26 09:52:51  [ JavaFX Application Thread:client.model.Client:1049 ] - [ INFO ]  client 100 has played MoveI
2021-07-26 09:52:51  [ Thread-84:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-84
2021-07-26 09:52:51  [ Thread-84:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":100,"x":5,"y":6}}Thread-84
2021-07-26 09:52:51  [ Thread-84:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-84
2021-07-26 09:52:51  [ Thread-84:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-84
2021-07-26 09:52:54  [ JavaFX Application Thread:client.model.Client:1489 ] - [ INFO ]  {"messageType":"PlayCard","messageBody":{"card":"TurnRight"}}
2021-07-26 09:52:54  [ Thread-84:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-84
2021-07-26 09:52:54  [ Thread-84:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":33,"card":"TurnRight"}}Thread-84
2021-07-26 09:52:54  [ JavaFX Application Thread:client.model.Client:1049 ] - [ INFO ]  client 33 has played TurnRight
2021-07-26 09:52:54  [ Thread-84:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-84
2021-07-26 09:52:54  [ Thread-84:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"PlayerTurning","messageBody":{"clientID":33,"rotation":"clockwise"}}Thread-84
2021-07-26 09:52:54  [ Thread-84:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-84
2021-07-26 09:52:54  [ Thread-84:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":100}}Thread-84
2021-07-26 09:52:57  [ Thread-84:client.model.Client:708 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-84
2021-07-26 09:52:57  [ Thread-84:client.model.Client:709 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-26 09:52:57  [ Thread-84:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-84
2021-07-26 09:52:57  [ Thread-84:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":100,"card":"MoveII"}}Thread-84
2021-07-26 09:52:57  [ Thread-84:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-84
2021-07-26 09:52:57  [ Thread-84:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":100,"x":5,"y":6}}Thread-84
2021-07-26 09:52:57  [ Thread-84:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-84
2021-07-26 09:52:57  [ Thread-84:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-84
2021-07-26 09:52:57  [ JavaFX Application Thread:client.model.Client:1049 ] - [ INFO ]  client 100 has played MoveII
2021-07-26 09:53:00  [ JavaFX Application Thread:client.model.Client:1489 ] - [ INFO ]  {"messageType":"PlayCard","messageBody":{"card":"MoveI"}}
2021-07-26 09:53:00  [ Thread-84:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-84
2021-07-26 09:53:00  [ Thread-84:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":33,"card":"MoveI"}}Thread-84
2021-07-26 09:53:00  [ JavaFX Application Thread:client.model.Client:1049 ] - [ INFO ]  client 33 has played MoveI
2021-07-26 09:53:00  [ Thread-84:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-84
2021-07-26 09:53:00  [ Thread-84:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":33,"x":6,"y":4}}Thread-84
2021-07-26 09:53:00  [ Thread-84:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-84
2021-07-26 09:53:00  [ Thread-84:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"DrawDamage","messageBody":{"clientID":33,"cards":["Spam"]}}Thread-84
2021-07-26 09:53:00  [ Thread-84:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-84
2021-07-26 09:53:00  [ Thread-84:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-84
2021-07-26 09:53:06  [ JavaFX Application Thread:client.model.Client:1489 ] - [ INFO ]  {"messageType":"PlayCard","messageBody":{"card":"TurnLeft"}}
2021-07-26 09:53:07  [ Thread-84:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-84
2021-07-26 09:53:07  [ Thread-84:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":33,"card":"TurnLeft"}}Thread-84
2021-07-26 09:53:07  [ Thread-84:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-84
2021-07-26 09:53:07  [ Thread-84:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"PlayerTurning","messageBody":{"clientID":33,"rotation":"counterclockwise"}}Thread-84
2021-07-26 09:53:07  [ Thread-84:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-84
2021-07-26 09:53:07  [ Thread-84:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":100}}Thread-84
2021-07-26 09:53:07  [ JavaFX Application Thread:client.model.Client:1049 ] - [ INFO ]  client 33 has played TurnLeft
2021-07-26 09:53:07  [ Thread-84:client.model.Client:708 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-84
2021-07-26 09:53:07  [ Thread-84:client.model.Client:709 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-26 09:53:10  [ Thread-84:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-84
2021-07-26 09:53:10  [ Thread-84:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":100,"card":"Again"}}Thread-84
2021-07-26 09:53:10  [ Thread-84:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-84
2021-07-26 09:53:10  [ Thread-84:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":100,"x":5,"y":6}}Thread-84
2021-07-26 09:53:10  [ Thread-84:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-84
2021-07-26 09:53:10  [ Thread-84:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"DrawDamage","messageBody":{"clientID":33,"cards":["Spam"]}}Thread-84
2021-07-26 09:53:10  [ Thread-84:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-84
2021-07-26 09:53:10  [ Thread-84:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"ActivePhase","messageBody":{"phase":1}}Thread-84
2021-07-26 09:53:10  [ Thread-84:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-84
2021-07-26 09:53:10  [ JavaFX Application Thread:client.model.Client:1049 ] - [ INFO ]  client 100 has played Again
2021-07-26 09:53:10  [ Thread-84:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"RefillShop","messageBody":{"cards":["RealLaser","MemorySwap"]}}Thread-84
2021-07-26 09:53:10  [ Thread-84:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-84
2021-07-26 09:53:10  [ Thread-84:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-84
2021-07-26 09:53:17  [ Thread-84:client.model.Client:708 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-84
2021-07-26 09:53:17  [ Thread-84:client.model.Client:709 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-26 09:53:25  [ JavaFX Application Thread:client.model.Client:1536 ] - [ INFO ]  {"messageType":"BuyUpgrade","messageBody":{"card":"RealLaser","isBuying":true}}
2021-07-26 09:53:25  [ Thread-84:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-84
2021-07-26 09:53:25  [ Thread-84:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"UpgradeBought","messageBody":{"clientID":33,"card":"RealLaser"}}Thread-84
2021-07-26 09:53:25  [ Thread-84:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-84
2021-07-26 09:53:25  [ Thread-84:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":100}}Thread-84
2021-07-26 09:53:27  [ Thread-84:client.model.Client:708 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-84
2021-07-26 09:53:27  [ Thread-84:client.model.Client:709 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-26 09:53:30  [ Thread-84:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-84
2021-07-26 09:53:30  [ Thread-84:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"ActivePhase","messageBody":{"phase":2}}Thread-84
2021-07-26 09:53:30  [ Thread-84:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-84
2021-07-26 09:53:30  [ Thread-84:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"NotYourCards","messageBody":{"clientID":100,"cardsInHand":9}}Thread-84
2021-07-26 09:53:30  [ Thread-84:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-84
2021-07-26 09:53:31  [ Thread-84:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"YourCards","messageBody":{"cardsInHand":["MoveII","MoveII","MoveI","TurnLeft","Again","MoveI","MoveI","TurnLeft","MoveI"]}}Thread-84
2021-07-26 09:53:31  [ JavaFX Application Thread:client.model.Client:998 ] - [ INFO ]  100have got 9 cards
2021-07-26 09:53:31  [ JavaFX Application Thread:client.model.Client:963 ] - [ INFO ]  clients your cards
2021-07-26 09:53:37  [ Thread-84:client.model.Client:708 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-84
2021-07-26 09:53:37  [ Thread-84:client.model.Client:709 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-26 09:53:47  [ Thread-84:client.model.Client:708 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-84
2021-07-26 09:53:47  [ Thread-84:client.model.Client:709 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-26 09:53:47  [ JavaFX Application Thread:client.model.Client:1452 ] - [ INFO ]  {"messageType":"SelectedCard","messageBody":{"card":"MoveII","register":1}}
2021-07-26 09:53:47  [ Thread-84:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-84
2021-07-26 09:53:47  [ Thread-84:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":33,"register":1,"filled":true}}Thread-84
2021-07-26 09:53:47  [ JavaFX Application Thread:client.model.Client:1011 ] - [ INFO ]  33 has for register 1true
2021-07-26 09:53:49  [ JavaFX Application Thread:client.model.Client:1452 ] - [ INFO ]  {"messageType":"SelectedCard","messageBody":{"card":"MoveII","register":2}}
2021-07-26 09:53:49  [ Thread-84:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-84
2021-07-26 09:53:49  [ Thread-84:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":33,"register":2,"filled":true}}Thread-84
2021-07-26 09:53:49  [ JavaFX Application Thread:client.model.Client:1011 ] - [ INFO ]  33 has for register 2true
2021-07-26 09:53:55  [ JavaFX Application Thread:client.model.Client:1452 ] - [ INFO ]  {"messageType":"SelectedCard","messageBody":{"card":"Again","register":3}}
2021-07-26 09:53:55  [ Thread-84:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-84
2021-07-26 09:53:55  [ Thread-84:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":33,"register":3,"filled":true}}Thread-84
2021-07-26 09:53:55  [ JavaFX Application Thread:client.model.Client:1011 ] - [ INFO ]  33 has for register 3true
2021-07-26 09:53:57  [ Thread-84:client.model.Client:708 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-84
2021-07-26 09:53:57  [ Thread-84:client.model.Client:709 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-26 09:53:57  [ JavaFX Application Thread:client.model.Client:1452 ] - [ INFO ]  {"messageType":"SelectedCard","messageBody":{"card":"TurnLeft","register":4}}
2021-07-26 09:53:57  [ Thread-84:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-84
2021-07-26 09:53:57  [ Thread-84:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":33,"register":4,"filled":true}}Thread-84
2021-07-26 09:53:57  [ JavaFX Application Thread:client.model.Client:1011 ] - [ INFO ]  33 has for register 4true
2021-07-26 09:53:59  [ JavaFX Application Thread:client.model.Client:1452 ] - [ INFO ]  {"messageType":"SelectedCard","messageBody":{"card":"MoveI","register":5}}
2021-07-26 09:53:59  [ Thread-84:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-84
2021-07-26 09:53:59  [ Thread-84:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":33,"register":5,"filled":true}}Thread-84
2021-07-26 09:53:59  [ JavaFX Application Thread:client.model.Client:1011 ] - [ INFO ]  33 has for register 5true
2021-07-26 09:54:07  [ Thread-84:client.model.Client:708 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-84
2021-07-26 09:54:07  [ Thread-84:client.model.Client:709 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-26 09:54:08  [ Thread-84:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-84
2021-07-26 09:54:08  [ Thread-84:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":100,"register":1,"filled":true}}Thread-84
2021-07-26 09:54:08  [ JavaFX Application Thread:client.model.Client:1011 ] - [ INFO ]  100 has for register 1true
2021-07-26 09:54:10  [ Thread-84:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-84
2021-07-26 09:54:10  [ Thread-84:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":100,"register":2,"filled":true}}Thread-84
2021-07-26 09:54:10  [ JavaFX Application Thread:client.model.Client:1011 ] - [ INFO ]  100 has for register 2true
2021-07-26 09:54:11  [ Thread-84:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-84
2021-07-26 09:54:11  [ Thread-84:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":100,"register":3,"filled":true}}Thread-84
2021-07-26 09:54:11  [ JavaFX Application Thread:client.model.Client:1011 ] - [ INFO ]  100 has for register 3true
2021-07-26 09:54:15  [ Thread-84:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-84
2021-07-26 09:54:15  [ Thread-84:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":100,"register":4,"filled":true}}Thread-84
2021-07-26 09:54:15  [ JavaFX Application Thread:client.model.Client:1011 ] - [ INFO ]  100 has for register 4true
2021-07-26 09:54:17  [ Thread-84:client.model.Client:708 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-84
2021-07-26 09:54:17  [ Thread-84:client.model.Client:709 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-26 09:54:17  [ Thread-84:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-84
2021-07-26 09:54:17  [ Thread-84:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":100,"register":5,"filled":true}}Thread-84
2021-07-26 09:54:17  [ JavaFX Application Thread:client.model.Client:1011 ] - [ INFO ]  100 has for register 5true
2021-07-26 09:54:18  [ Thread-84:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-84
2021-07-26 09:54:18  [ Thread-84:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"TimerStarted","messageBody":null}Thread-84
2021-07-26 09:54:18  [ JavaFX Application Thread:client.model.Client:1015 ] - [ INFO ]  timer is on
2021-07-26 09:54:21  [ JavaFX Application Thread:client.model.Client:1474 ] - [ INFO ]  {"messageType":"SelectionFinished","messageBody":{"clientID":33}}
2021-07-26 09:54:21  [ Thread-84:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-84
2021-07-26 09:54:21  [ Thread-84:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"ActivePhase","messageBody":{"phase":3}}Thread-84
2021-07-26 09:54:21  [ Thread-84:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-84
2021-07-26 09:54:21  [ Thread-84:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CurrentCards","messageBody":{"currentRegistersAllClients":[{"clientID":33,"cardName":"MoveII"},{"clientID":100,"cardName":"PowerUp"}]}}Thread-84
2021-07-26 09:54:21  [ Thread-84:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-84
2021-07-26 09:54:21  [ Thread-84:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-84
2021-07-26 09:54:21  [ JavaFX Application Thread:client.model.Client:1042 ] - [ INFO ]  33 has for current register: MoveII
2021-07-26 09:54:21  [ JavaFX Application Thread:client.model.Client:1042 ] - [ INFO ]  100 has for current register: PowerUp
2021-07-26 09:54:23  [ JavaFX Application Thread:client.model.Client:1489 ] - [ INFO ]  {"messageType":"PlayCard","messageBody":{"card":"MoveII"}}
2021-07-26 09:54:23  [ Thread-84:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-84
2021-07-26 09:54:23  [ Thread-84:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":33,"card":"MoveII"}}Thread-84
2021-07-26 09:54:23  [ JavaFX Application Thread:client.model.Client:1049 ] - [ INFO ]  client 33 has played MoveII
2021-07-26 09:54:23  [ Thread-84:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-84
2021-07-26 09:54:23  [ Thread-84:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":33,"x":8,"y":4}}Thread-84
2021-07-26 09:54:23  [ Thread-84:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-84
2021-07-26 09:54:23  [ Thread-84:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":100}}Thread-84
2021-07-26 09:54:25  [ Thread-84:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-84
2021-07-26 09:54:25  [ Thread-84:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":100,"card":"PowerUp"}}Thread-84
2021-07-26 09:54:26  [ Thread-84:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-84
2021-07-26 09:54:26  [ Thread-84:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"Energy","messageBody":{"clientID":100,"count":1,"source":"PowerUpCard"}}Thread-84
2021-07-26 09:54:26  [ Thread-84:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-84
2021-07-26 09:54:26  [ Thread-84:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"Energy","messageBody":{"clientID":33,"count":1,"source":"EnergySpace"}}Thread-84
2021-07-26 09:54:26  [ Thread-84:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-84
2021-07-26 09:54:26  [ Thread-84:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":100}}Thread-84
2021-07-26 09:54:26  [ JavaFX Application Thread:client.model.Client:1049 ] - [ INFO ]  client 100 has played PowerUp
2021-07-26 09:54:27  [ Thread-84:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-84
2021-07-26 09:54:27  [ Thread-84:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":100,"card":"TurnRight"}}Thread-84
2021-07-26 09:54:27  [ Thread-84:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-84
2021-07-26 09:54:27  [ Thread-84:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"PlayerTurning","messageBody":{"clientID":100,"rotation":"clockwise"}}Thread-84
2021-07-26 09:54:27  [ Thread-84:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-84
2021-07-26 09:54:27  [ Thread-84:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-84
2021-07-26 09:54:27  [ JavaFX Application Thread:client.model.Client:1049 ] - [ INFO ]  client 100 has played TurnRight
2021-07-26 09:54:27  [ Thread-84:client.model.Client:708 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-84
2021-07-26 09:54:27  [ Thread-84:client.model.Client:709 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-26 09:54:30  [ JavaFX Application Thread:client.model.Client:1489 ] - [ INFO ]  {"messageType":"PlayCard","messageBody":{"card":"MoveII"}}
2021-07-26 09:54:30  [ Thread-84:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-84
2021-07-26 09:54:30  [ Thread-84:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":33,"card":"MoveII"}}Thread-84
2021-07-26 09:54:30  [ JavaFX Application Thread:client.model.Client:1049 ] - [ INFO ]  client 33 has played MoveII
2021-07-26 09:54:30  [ Thread-84:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-84
2021-07-26 09:54:30  [ Thread-84:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":33,"x":10,"y":4}}Thread-84
2021-07-26 09:54:30  [ Thread-84:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-84
2021-07-26 09:54:30  [ Thread-84:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":100}}Thread-84
2021-07-26 09:54:32  [ Thread-84:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-84
2021-07-26 09:54:32  [ Thread-84:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":100,"card":"MoveI"}}Thread-84
2021-07-26 09:54:32  [ Thread-84:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-84
2021-07-26 09:54:32  [ Thread-84:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":100,"x":5,"y":7}}Thread-84
2021-07-26 09:54:32  [ Thread-84:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-84
2021-07-26 09:54:32  [ Thread-84:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-84
2021-07-26 09:54:32  [ JavaFX Application Thread:client.model.Client:1049 ] - [ INFO ]  client 100 has played MoveI
2021-07-26 09:54:36  [ JavaFX Application Thread:client.model.Client:1489 ] - [ INFO ]  {"messageType":"PlayCard","messageBody":{"card":"Again"}}
2021-07-26 09:54:36  [ Thread-84:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-84
2021-07-26 09:54:36  [ Thread-84:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":33,"card":"Again"}}Thread-84
2021-07-26 09:54:36  [ JavaFX Application Thread:client.model.Client:1049 ] - [ INFO ]  client 33 has played Again
2021-07-26 09:54:36  [ Thread-84:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-84
2021-07-26 09:54:36  [ Thread-84:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":33,"x":12,"y":4}}Thread-84
2021-07-26 09:54:36  [ Thread-84:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-84
2021-07-26 09:54:36  [ Thread-84:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":100}}Thread-84
2021-07-26 09:54:37  [ Thread-84:client.model.Client:708 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-84
2021-07-26 09:54:37  [ Thread-84:client.model.Client:709 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-26 09:54:39  [ Thread-84:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-84
2021-07-26 09:54:39  [ Thread-84:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":100,"card":"UTurn"}}Thread-84
2021-07-26 09:54:39  [ Thread-84:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-84
2021-07-26 09:54:39  [ Thread-84:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"PlayerTurning","messageBody":{"clientID":100,"rotation":"counterclockwise"}}Thread-84
2021-07-26 09:54:39  [ Thread-84:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-84
2021-07-26 09:54:39  [ Thread-84:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"PlayerTurning","messageBody":{"clientID":100,"rotation":"counterclockwise"}}Thread-84
2021-07-26 09:54:39  [ Thread-84:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-84
2021-07-26 09:54:39  [ Thread-84:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-84
2021-07-26 09:54:39  [ JavaFX Application Thread:client.model.Client:1049 ] - [ INFO ]  client 100 has played UTurn
2021-07-26 09:54:42  [ JavaFX Application Thread:client.model.Client:1489 ] - [ INFO ]  {"messageType":"PlayCard","messageBody":{"card":"TurnLeft"}}
2021-07-26 09:54:42  [ Thread-84:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-84
2021-07-26 09:54:42  [ Thread-84:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":33,"card":"TurnLeft"}}Thread-84
2021-07-26 09:54:42  [ JavaFX Application Thread:client.model.Client:1049 ] - [ INFO ]  client 33 has played TurnLeft
2021-07-26 09:54:42  [ Thread-84:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-84
2021-07-26 09:54:42  [ Thread-84:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"PlayerTurning","messageBody":{"clientID":33,"rotation":"counterclockwise"}}Thread-84
2021-07-26 09:54:42  [ Thread-84:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-84
2021-07-26 09:54:42  [ Thread-84:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":100}}Thread-84
2021-07-26 09:54:44  [ Thread-84:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-84
2021-07-26 09:54:44  [ Thread-84:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":100,"card":"MoveI"}}Thread-84
2021-07-26 09:54:44  [ Thread-84:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-84
2021-07-26 09:54:44  [ Thread-84:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":100,"x":5,"y":6}}Thread-84
2021-07-26 09:54:44  [ Thread-84:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-84
2021-07-26 09:54:44  [ Thread-84:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-84
2021-07-26 09:54:45  [ JavaFX Application Thread:client.model.Client:1049 ] - [ INFO ]  client 100 has played MoveI
2021-07-26 09:54:47  [ Thread-84:client.model.Client:708 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-84
2021-07-26 09:54:47  [ Thread-84:client.model.Client:709 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-26 09:54:48  [ JavaFX Application Thread:client.model.Client:1489 ] - [ INFO ]  {"messageType":"PlayCard","messageBody":{"card":"MoveI"}}
2021-07-26 09:54:48  [ Thread-84:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-84
2021-07-26 09:54:48  [ Thread-84:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":33,"card":"MoveI"}}Thread-84
2021-07-26 09:54:48  [ JavaFX Application Thread:client.model.Client:1049 ] - [ INFO ]  client 33 has played MoveI
2021-07-26 09:54:48  [ Thread-84:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-84
2021-07-26 09:54:48  [ Thread-84:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":33,"x":12,"y":3}}Thread-84
2021-07-26 09:54:48  [ Thread-84:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-84
2021-07-26 09:54:48  [ Thread-84:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"GameFinished","messageBody":{"clientID":33}}Thread-84
2021-07-26 09:54:48  [ Thread-84:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-84
2021-07-26 09:54:48  [ Thread-84:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"RefillShop","messageBody":{"cards":["AdminPrivilege","AdminPrivilege"]}}Thread-84
2021-07-26 09:54:48  [ Thread-84:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-84
2021-07-26 09:54:48  [ Thread-84:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":100}}Thread-84
2021-07-26 09:54:52  [ Thread-84:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-84
2021-07-26 09:54:52  [ Thread-84:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"TimerEnded","messageBody":{"clientIDs":[33,100]}}Thread-84
2021-07-26 09:54:52  [ Thread-84:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-84
2021-07-26 09:54:52  [ Thread-84:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CardsYouGotNow","messageBody":{"cards":["Again","MoveI","MoveI","TurnLeft","MoveI"]}}Thread-84
2021-07-26 09:54:52  [ Thread-84:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-84
2021-07-26 09:54:52  [ Thread-84:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"ActivePhase","messageBody":{"phase":3}}Thread-84
2021-07-26 09:54:52  [ Thread-84:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-84
2021-07-26 09:54:52  [ Thread-84:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CurrentCards","messageBody":{"currentRegistersAllClients":[{"clientID":33,"cardName":"PowerUp"},{"clientID":100,"cardName":"MoveI"}]}}Thread-84
2021-07-26 09:54:52  [ Thread-84:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-84
2021-07-26 09:54:52  [ Thread-84:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":100}}Thread-84
2021-07-26 09:54:57  [ Thread-84:client.model.Client:708 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-84
2021-07-26 09:54:57  [ Thread-84:client.model.Client:709 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
6 09:53:27  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 09:53:27  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 09:53:27  [ Thread-5:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 09:53:27  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 09:53:27  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 09:53:27  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 09:53:28  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 09:53:29  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-26 09:53:29  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-26 09:53:29  [ Thread-3:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-26 09:53:29  [ Thread-1:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 09:53:29  [ Thread-1:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-26 09:53:29  [ Thread-1:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-26 09:53:29  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-26 09:53:30  [ Thread-1:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"BuyUpgrade","messageBody":{"card":null,"isBuying":false}}
2021-07-26 09:53:30  [ Thread-1:server.network.Server:359 ] - [ INFO ]  server sends phase info
2021-07-26 09:53:30  [ Thread-1:server.network.Server:401 ] - [ INFO ]  server informs your cards.
2021-07-26 09:53:30  [ Thread-1:server.network.Server:401 ] - [ INFO ]  server informs your cards.
2021-07-26 09:53:33  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 09:53:34  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-26 09:53:37  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 09:53:37  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 09:53:37  [ Thread-5:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 09:53:37  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 09:53:37  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 09:53:37  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 09:53:38  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 09:53:39  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-26 09:53:39  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-26 09:53:39  [ Thread-3:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-26 09:53:39  [ Thread-1:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 09:53:39  [ Thread-1:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-26 09:53:39  [ Thread-1:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-26 09:53:39  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-26 09:53:43  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 09:53:44  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-26 09:53:47  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 09:53:47  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 09:53:47  [ Thread-5:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 09:53:47  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 09:53:47  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 09:53:47  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 09:53:47  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"SelectedCard","messageBody":{"card":"MoveII","register":1}}
2021-07-26 09:53:47  [ Thread-0:protocol.ExecuteOrder:244 ] - [ INFO ]  MoveII
2021-07-26 09:53:47  [ Thread-0:server.network.Server:490 ] - [ INFO ]  server informs card selected
2021-07-26 09:53:48  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 09:53:49  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-26 09:53:49  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-26 09:53:49  [ Thread-3:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-26 09:53:49  [ Thread-1:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 09:53:49  [ Thread-1:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-26 09:53:49  [ Thread-1:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-26 09:53:49  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-26 09:53:49  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"SelectedCard","messageBody":{"card":"MoveII","register":2}}
2021-07-26 09:53:49  [ Thread-0:protocol.ExecuteOrder:244 ] - [ INFO ]  MoveII
2021-07-26 09:53:49  [ Thread-0:server.network.Server:490 ] - [ INFO ]  server informs card selected
2021-07-26 09:53:53  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 09:53:54  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-26 09:53:55  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"SelectedCard","messageBody":{"card":"Again","register":3}}
2021-07-26 09:53:55  [ Thread-0:protocol.ExecuteOrder:244 ] - [ INFO ]  Again
2021-07-26 09:53:55  [ Thread-0:server.network.Server:490 ] - [ INFO ]  server informs card selected
2021-07-26 09:53:57  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 09:53:57  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 09:53:57  [ Thread-5:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 09:53:57  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 09:53:57  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 09:53:57  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 09:53:57  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"SelectedCard","messageBody":{"card":"TurnLeft","register":4}}
2021-07-26 09:53:57  [ Thread-0:protocol.ExecuteOrder:244 ] - [ INFO ]  TurnLeft
2021-07-26 09:53:57  [ Thread-0:server.network.Server:490 ] - [ INFO ]  server informs card selected
2021-07-26 09:53:58  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 09:53:59  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"SelectedCard","messageBody":{"card":"MoveI","register":5}}
2021-07-26 09:53:59  [ Thread-0:protocol.ExecuteOrder:244 ] - [ INFO ]  MoveI
2021-07-26 09:53:59  [ Thread-0:server.network.Server:490 ] - [ INFO ]  server informs card selected
2021-07-26 09:53:59  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-26 09:53:59  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-26 09:53:59  [ Thread-3:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-26 09:53:59  [ Thread-1:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 09:53:59  [ Thread-1:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-26 09:53:59  [ Thread-1:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-26 09:53:59  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-26 09:54:03  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 09:54:04  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-26 09:54:07  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 09:54:07  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 09:54:07  [ Thread-5:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 09:54:07  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 09:54:07  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 09:54:07  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 09:54:08  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 09:54:08  [ Thread-1:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"SelectedCard","messageBody":{"card":"PowerUp","register":1}}
2021-07-26 09:54:08  [ Thread-1:protocol.ExecuteOrder:244 ] - [ INFO ]  PowerUp
2021-07-26 09:54:08  [ Thread-1:server.network.Server:490 ] - [ INFO ]  server informs card selected
2021-07-26 09:54:09  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-26 09:54:09  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-26 09:54:09  [ Thread-3:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-26 09:54:09  [ Thread-1:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 09:54:09  [ Thread-1:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-26 09:54:09  [ Thread-1:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-26 09:54:09  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-26 09:54:10  [ Thread-1:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"SelectedCard","messageBody":{"card":"TurnRight","register":2}}
2021-07-26 09:54:10  [ Thread-1:protocol.ExecuteOrder:244 ] - [ INFO ]  TurnRight
2021-07-26 09:54:10  [ Thread-1:server.network.Server:490 ] - [ INFO ]  server informs card selected
2021-07-26 09:54:11  [ Thread-1:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"SelectedCard","messageBody":{"card":"MoveI","register":3}}
2021-07-26 09:54:11  [ Thread-1:protocol.ExecuteOrder:244 ] - [ INFO ]  MoveI
2021-07-26 09:54:11  [ Thread-1:server.network.Server:490 ] - [ INFO ]  server informs card selected
2021-07-26 09:54:13  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 09:54:14  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-26 09:54:15  [ Thread-1:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"SelectedCard","messageBody":{"card":"UTurn","register":4}}
2021-07-26 09:54:15  [ Thread-1:protocol.ExecuteOrder:244 ] - [ INFO ]  UTurn
2021-07-26 09:54:15  [ Thread-1:server.network.Server:490 ] - [ INFO ]  server informs card selected
2021-07-26 09:54:17  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 09:54:17  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 09:54:17  [ Thread-5:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 09:54:17  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 09:54:17  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 09:54:17  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 09:54:17  [ Thread-1:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"SelectedCard","messageBody":{"card":"MoveI","register":5}}
2021-07-26 09:54:17  [ Thread-1:protocol.ExecuteOrder:244 ] - [ INFO ]  MoveI
2021-07-26 09:54:17  [ Thread-1:server.network.Server:490 ] - [ INFO ]  server informs card selected
2021-07-26 09:54:18  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 09:54:18  [ Thread-1:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"SelectionFinished","messageBody":{"clientID":100}}
2021-07-26 09:54:18  [ Thread-1:protocol.ExecuteOrder:255 ] - [ INFO ]  executeOrder: selectionFinished : [100]
2021-07-26 09:54:18  [ Thread-1:server.game.Game:400 ] - [ INFO ]  game starts timer
2021-07-26 09:54:18  [ Thread-1:server.network.Server:502 ] - [ INFO ]  server starts timer
2021-07-26 09:54:19  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-26 09:54:19  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-26 09:54:19  [ Thread-3:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-26 09:54:19  [ Thread-1:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 09:54:19  [ Thread-1:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-26 09:54:19  [ Thread-1:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-26 09:54:19  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-26 09:54:21  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"SelectionFinished","messageBody":{"clientID":33}}
2021-07-26 09:54:21  [ Thread-0:protocol.ExecuteOrder:255 ] - [ INFO ]  executeOrder: selectionFinished : [100, 33]
2021-07-26 09:54:21  [ Thread-0:server.game.Game:408 ] - [ INFO ]  game stops timer
2021-07-26 09:54:21  [ Thread-0:protocol.ExecuteOrder:268 ] - [ INFO ]  executeOrder all clients finished programming in time
2021-07-26 09:54:21  [ Thread-0:server.network.Server:359 ] - [ INFO ]  server sends phase info
2021-07-26 09:54:21  [ Thread-0:server.network.Server:572 ] - [ INFO ]  Server checked registerPointer 0
2021-07-26 09:54:21  [ Thread-0:server.network.Server:576 ] - [ INFO ]  server inform cards of current register
2021-07-26 09:54:21  [ Thread-0:server.network.Server:372 ] - [ INFO ]  server informs current player id
2021-07-26 09:54:23  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"PlayCard","messageBody":{"card":"MoveII"}}
2021-07-26 09:54:23  [ Thread-0:protocol.ExecuteOrder:284 ] - [ INFO ]  executeOrder playCard
2021-07-26 09:54:23  [ Thread-0:server.network.Server:590 ] - [ INFO ]  server informs who played which card
2021-07-26 09:54:23  [ Thread-0:server.game.Game:864 ] - [ INFO ]  Game checks wall on board for move
2021-07-26 09:54:23  [ Thread-0:server.game.Game:864 ] - [ INFO ]  Game checks wall on board for move
2021-07-26 09:54:23  [ Thread-0:server.game.Game:864 ] - [ INFO ]  Game checks wall on board for move
2021-07-26 09:54:23  [ Thread-0:server.network.Server:634 ] - [ INFO ]  server informs positions
2021-07-26 09:54:23  [ Thread-0:server.network.Server:635 ] - [ INFO ]  {"messageType":"Movement","messageBody":{"clientID":33,"x":8,"y":4}}
2021-07-26 09:54:23  [ Thread-0:protocol.ExecuteOrder:320 ] - [ INFO ]  not damage card played [100]
2021-07-26 09:54:23  [ Thread-0:server.game.Game:732 ] - [ INFO ]  Game checks turn over
2021-07-26 09:54:23  [ Thread-0:server.network.Server:372 ] - [ INFO ]  server informs current player id
2021-07-26 09:54:23  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 09:54:24  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-26 09:54:25  [ Thread-1:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"PlayCard","messageBody":{"card":"PowerUp"}}
2021-07-26 09:54:25  [ Thread-1:protocol.ExecuteOrder:284 ] - [ INFO ]  executeOrder playCard
2021-07-26 09:54:25  [ Thread-1:server.network.Server:590 ] - [ INFO ]  server informs who played which card
2021-07-26 09:54:25  [ Thread-1:server.network.Server:721 ] - [ INFO ]  server informs energy got.
2021-07-26 09:54:25  [ Thread-1:protocol.ExecuteOrder:320 ] - [ INFO ]  not damage card played []
2021-07-26 09:54:25  [ Thread-1:server.game.Game:732 ] - [ INFO ]  Game checks turn over
2021-07-26 09:54:25  [ Thread-1:server.network.Server:721 ] - [ INFO ]  server informs energy got.
2021-07-26 09:54:25  [ Thread-1:protocol.ExecuteOrder:326 ] - [ INFO ]  ExecuteOrder: turn is over!
2021-07-26 09:54:25  [ Thread-1:server.game.Game:797 ] - [ INFO ]  Game checks round over1
2021-07-26 09:54:25  [ Thread-1:server.network.Server:372 ] - [ INFO ]  server informs current player id
2021-07-26 09:54:27  [ Thread-1:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"PlayCard","messageBody":{"card":"TurnRight"}}
2021-07-26 09:54:27  [ Thread-1:protocol.ExecuteOrder:284 ] - [ INFO ]  executeOrder playCard
2021-07-26 09:54:27  [ Thread-1:server.network.Server:590 ] - [ INFO ]  server informs who played which card
2021-07-26 09:54:27  [ Thread-1:server.network.Server:649 ] - [ INFO ]  server informs turnDirection
2021-07-26 09:54:27  [ Thread-1:protocol.ExecuteOrder:320 ] - [ INFO ]  not damage card played [33]
2021-07-26 09:54:27  [ Thread-1:server.game.Game:732 ] - [ INFO ]  Game checks turn over
2021-07-26 09:54:27  [ Thread-1:server.network.Server:372 ] - [ INFO ]  server informs current player id
2021-07-26 09:54:27  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 09:54:27  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 09:54:27  [ Thread-5:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 09:54:27  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 09:54:27  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 09:54:27  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 09:54:28  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 09:54:29  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-26 09:54:29  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-26 09:54:29  [ Thread-3:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-26 09:54:29  [ Thread-1:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 09:54:29  [ Thread-1:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-26 09:54:29  [ Thread-1:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-26 09:54:29  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-26 09:54:30  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"PlayCard","messageBody":{"card":"MoveII"}}
2021-07-26 09:54:30  [ Thread-0:protocol.ExecuteOrder:284 ] - [ INFO ]  executeOrder playCard
2021-07-26 09:54:30  [ Thread-0:server.network.Server:590 ] - [ INFO ]  server informs who played which card
2021-07-26 09:54:30  [ Thread-0:server.game.Game:864 ] - [ INFO ]  Game checks wall on board for move
2021-07-26 09:54:30  [ Thread-0:server.game.Game:864 ] - [ INFO ]  Game checks wall on board for move
2021-07-26 09:54:30  [ Thread-0:server.game.Game:864 ] - [ INFO ]  Game checks wall on board for move
2021-07-26 09:54:30  [ Thread-0:server.network.Server:634 ] - [ INFO ]  server informs positions
2021-07-26 09:54:30  [ Thread-0:server.network.Server:635 ] - [ INFO ]  {"messageType":"Movement","messageBody":{"clientID":33,"x":10,"y":4}}
2021-07-26 09:54:30  [ Thread-0:protocol.ExecuteOrder:320 ] - [ INFO ]  not damage card played []
2021-07-26 09:54:30  [ Thread-0:server.game.Game:732 ] - [ INFO ]  Game checks turn over
2021-07-26 09:54:30  [ Thread-0:protocol.ExecuteOrder:326 ] - [ INFO ]  ExecuteOrder: turn is over!
2021-07-26 09:54:30  [ Thread-0:server.game.Game:797 ] - [ INFO ]  Game checks round over2
2021-07-26 09:54:30  [ Thread-0:server.network.Server:372 ] - [ INFO ]  server informs current player id
2021-07-26 09:54:32  [ Thread-1:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"PlayCard","messageBody":{"card":"MoveI"}}
2021-07-26 09:54:32  [ Thread-1:protocol.ExecuteOrder:284 ] - [ INFO ]  executeOrder playCard
2021-07-26 09:54:32  [ Thread-1:server.network.Server:590 ] - [ INFO ]  server informs who played which card
2021-07-26 09:54:32  [ Thread-1:server.game.Game:864 ] - [ INFO ]  Game checks wall on board for move
2021-07-26 09:54:32  [ Thread-1:server.game.Game:864 ] - [ INFO ]  Game checks wall on board for move
2021-07-26 09:54:32  [ Thread-1:server.network.Server:634 ] - [ INFO ]  server informs positions
2021-07-26 09:54:32  [ Thread-1:server.network.Server:635 ] - [ INFO ]  {"messageType":"Movement","messageBody":{"clientID":100,"x":5,"y":7}}
2021-07-26 09:54:32  [ Thread-1:protocol.ExecuteOrder:320 ] - [ INFO ]  not damage card played [33]
2021-07-26 09:54:32  [ Thread-1:server.game.Game:732 ] - [ INFO ]  Game checks turn over
2021-07-26 09:54:32  [ Thread-1:server.network.Server:372 ] - [ INFO ]  server informs current player id
2021-07-26 09:54:33  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 09:54:34  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-26 09:54:36  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"PlayCard","messageBody":{"card":"Again"}}
2021-07-26 09:54:36  [ Thread-0:protocol.ExecuteOrder:284 ] - [ INFO ]  executeOrder playCard
2021-07-26 09:54:36  [ Thread-0:server.network.Server:590 ] - [ INFO ]  server informs who played which card
2021-07-26 09:54:36  [ Thread-0:server.game.Game:864 ] - [ INFO ]  Game checks wall on board for move
2021-07-26 09:54:36  [ Thread-0:server.game.Game:864 ] - [ INFO ]  Game checks wall on board for move
2021-07-26 09:54:36  [ Thread-0:server.game.Game:864 ] - [ INFO ]  Game checks wall on board for move
2021-07-26 09:54:36  [ Thread-0:server.network.Server:634 ] - [ INFO ]  server informs positions
2021-07-26 09:54:36  [ Thread-0:server.network.Server:635 ] - [ INFO ]  {"messageType":"Movement","messageBody":{"clientID":33,"x":12,"y":4}}
2021-07-26 09:54:36  [ Thread-0:protocol.ExecuteOrder:320 ] - [ INFO ]  not damage card played []
2021-07-26 09:54:36  [ Thread-0:server.game.Game:732 ] - [ INFO ]  Game checks turn over
2021-07-26 09:54:36  [ Thread-0:protocol.ExecuteOrder:326 ] - [ INFO ]  ExecuteOrder: turn is over!
2021-07-26 09:54:36  [ Thread-0:server.game.Game:797 ] - [ INFO ]  Game checks round over3
2021-07-26 09:54:36  [ Thread-0:server.network.Server:372 ] - [ INFO ]  server informs current player id
2021-07-26 09:54:37  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 09:54:37  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 09:54:37  [ Thread-5:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 09:54:37  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 09:54:37  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 09:54:37  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 09:54:38  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 09:54:39  [ Thread-1:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"PlayCard","messageBody":{"card":"UTurn"}}
2021-07-26 09:54:39  [ Thread-1:protocol.ExecuteOrder:284 ] - [ INFO ]  executeOrder playCard
2021-07-26 09:54:39  [ Thread-1:server.network.Server:590 ] - [ INFO ]  server informs who played which card
2021-07-26 09:54:39  [ Thread-1:server.network.Server:649 ] - [ INFO ]  server informs turnDirection
2021-07-26 09:54:39  [ Thread-1:server.network.Server:649 ] - [ INFO ]  server informs turnDirection
2021-07-26 09:54:39  [ Thread-1:protocol.ExecuteOrder:320 ] - [ INFO ]  not damage card played [33]
2021-07-26 09:54:39  [ Thread-1:server.game.Game:732 ] - [ INFO ]  Game checks turn over
2021-07-26 09:54:39  [ Thread-1:server.network.Server:372 ] - [ INFO ]  server informs current player id
2021-07-26 09:54:39  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-26 09:54:39  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-26 09:54:39  [ Thread-3:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-26 09:54:39  [ Thread-1:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 09:54:39  [ Thread-1:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-26 09:54:39  [ Thread-1:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-26 09:54:39  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-26 09:54:42  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"PlayCard","messageBody":{"card":"TurnLeft"}}
2021-07-26 09:54:42  [ Thread-0:protocol.ExecuteOrder:284 ] - [ INFO ]  executeOrder playCard
2021-07-26 09:54:42  [ Thread-0:server.network.Server:590 ] - [ INFO ]  server informs who played which card
2021-07-26 09:54:42  [ Thread-0:server.network.Server:649 ] - [ INFO ]  server informs turnDirection
2021-07-26 09:54:42  [ Thread-0:protocol.ExecuteOrder:320 ] - [ INFO ]  not damage card played []
2021-07-26 09:54:42  [ Thread-0:server.game.Game:732 ] - [ INFO ]  Game checks turn over
2021-07-26 09:54:42  [ Thread-0:protocol.ExecuteOrder:326 ] - [ INFO ]  ExecuteOrder: turn is over!
2021-07-26 09:54:42  [ Thread-0:server.game.Game:797 ] - [ INFO ]  Game checks round over4
2021-07-26 09:54:42  [ Thread-0:server.network.Server:372 ] - [ INFO ]  server informs current player id
2021-07-26 09:54:43  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 09:54:44  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-26 09:54:44  [ Thread-1:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"PlayCard","messageBody":{"card":"MoveI"}}
2021-07-26 09:54:44  [ Thread-1:protocol.ExecuteOrder:284 ] - [ INFO ]  executeOrder playCard
2021-07-26 09:54:44  [ Thread-1:server.network.Server:590 ] - [ INFO ]  server informs who played which card
2021-07-26 09:54:44  [ Thread-1:server.game.Game:864 ] - [ INFO ]  Game checks wall on board for move
2021-07-26 09:54:44  [ Thread-1:server.game.Game:864 ] - [ INFO ]  Game checks wall on board for move
2021-07-26 09:54:44  [ Thread-1:server.network.Server:634 ] - [ INFO ]  server informs positions
2021-07-26 09:54:44  [ Thread-1:server.network.Server:635 ] - [ INFO ]  {"messageType":"Movement","messageBody":{"clientID":100,"x":5,"y":6}}
2021-07-26 09:54:44  [ Thread-1:protocol.ExecuteOrder:320 ] - [ INFO ]  not damage card played [33]
2021-07-26 09:54:44  [ Thread-1:server.game.Game:732 ] - [ INFO ]  Game checks turn over
2021-07-26 09:54:44  [ Thread-1:server.network.Server:372 ] - [ INFO ]  server informs current player id
2021-07-26 09:54:47  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 09:54:47  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 09:54:47  [ Thread-5:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 09:54:47  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 09:54:47  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 09:54:47  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 09:54:48  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"PlayCard","messageBody":{"card":"MoveI"}}
2021-07-26 09:54:48  [ Thread-0:protocol.ExecuteOrder:284 ] - [ INFO ]  executeOrder playCard
2021-07-26 09:54:48  [ Thread-0:server.network.Server:590 ] - [ INFO ]  server informs who played which card
2021-07-26 09:54:48  [ Thread-0:server.game.Game:864 ] - [ INFO ]  Game checks wall on board for move
2021-07-26 09:54:48  [ Thread-0:server.game.Game:864 ] - [ INFO ]  Game checks wall on board for move
2021-07-26 09:54:48  [ Thread-0:server.network.Server:634 ] - [ INFO ]  server informs positions
2021-07-26 09:54:48  [ Thread-0:server.network.Server:635 ] - [ INFO ]  {"messageType":"Movement","messageBody":{"clientID":33,"x":12,"y":3}}
2021-07-26 09:54:48  [ Thread-0:protocol.ExecuteOrder:320 ] - [ INFO ]  not damage card played []
2021-07-26 09:54:48  [ Thread-0:server.game.Game:732 ] - [ INFO ]  Game checks turn over
2021-07-26 09:54:48  [ Thread-0:server.game.Game:843 ] - [ INFO ]  Game checks game over.
2021-07-26 09:54:48  [ Thread-0:server.game.Game:847 ] - [ INFO ]  print how many checkpoints: 1
2021-07-26 09:54:48  [ Thread-0:server.network.Server:618 ] - [ INFO ]  server informs game finished
2021-07-26 09:54:48  [ Thread-0:protocol.ExecuteOrder:326 ] - [ INFO ]  ExecuteOrder: turn is over!
2021-07-26 09:54:48  [ Thread-0:server.game.Game:797 ] - [ INFO ]  Game checks round over5
2021-07-26 09:54:48  [ Thread-0:protocol.ExecuteOrder:331 ] - [ INFO ]  ExecuteOrder: round is over!
2021-07-26 09:54:48  [ Thread-0:server.network.Server:752 ] - [ INFO ]  server informs Refill upgrade shop.
2021-07-26 09:54:48  [ Thread-0:server.network.Server:372 ] - [ INFO ]  server informs current player id
2021-07-26 09:54:48  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 09:54:49  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-26 09:54:49  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-26 09:54:50  [ Thread-3:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-26 09:54:50  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: true
2021-07-26 09:54:50  [ Thread-1:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 09:54:50  [ Thread-2:server.network.Connected:73 ] - [ INFO ]  100 in first if print flagconnect: true
2021-07-26 09:54:50  [ Thread-1:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-26 09:54:50  [ Thread-1:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-26 09:54:52  [ Thread-7:server.game.Timer:75 ] - [ INFO ]  Timer info: clientsFinished: []
2021-07-26 09:54:52  [ Thread-7:server.game.Timer:76 ] - [ INFO ]  Timer info: restClients: [33, 100]
2021-07-26 09:54:52  [ Thread-7:server.game.Timer:79 ] - [ INFO ]  Timer : time out, random cards
2021-07-26 09:54:52  [ Thread-7:server.network.Server:515 ] - [ INFO ]  server inform who did not finish in time
2021-07-26 09:54:52  [ Thread-7:server.network.Server:547 ] - [ INFO ]  server inform who got which random cards
2021-07-26 09:54:52  [ Thread-7:server.network.Server:547 ] - [ INFO ]  server inform who got which random cards
2021-07-26 09:54:52  [ Thread-7:server.network.Server:359 ] - [ INFO ]  server sends phase info
2021-07-26 09:54:52  [ Thread-7:server.network.Server:572 ] - [ INFO ]  Server checked registerPointer 0
2021-07-26 09:54:52  [ Thread-7:server.network.Server:576 ] - [ INFO ]  server inform cards of current register
2021-07-26 09:54:52  [ Thread-7:server.network.Server:372 ] - [ INFO ]  server informs current player id
2021-07-26 09:54:53  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 09:54:57  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-26 09:54:57  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 09:54:57  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 09:54:57  [ Thread-5:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 09:54:57  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 09:54:57  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 09:54:57  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 09:55:44  [ Thread-0:server.network.ServerThread:66 ] - [ INFO ]  protocol to client: 
{"messageType":"HelloClient","messageBody":{"protocol":"Version 1.0"}}
2021-07-26 09:55:46  [ Thread-105:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-105
2021-07-26 09:55:46  [ Thread-105:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"HelloClient","messageBody":{"protocol":"Version 1.0"}}Thread-105
2021-07-26 09:55:46  [ JavaFX Application Thread:client.model.Client:735 ] - [ INFO ]  gameOn check in client : false
2021-07-26 09:55:54  [ Thread-1:server.network.ServerThread:66 ] - [ INFO ]  protocol to client: 
{"messageType":"HelloClient","messageBody":{"protocol":"Version 1.0"}}
2021-07-26 09:55:56  [ JavaFX Application Thread:client.model.Client:797 ] - [ INFO ]  protocol from Server: 
{"messageType":"HelloServer","messageBody":{"group":"CC","protocol":"Version 1.0","isAI":false}}
2021-07-26 09:55:57  [ Thread-0:server.network.ServerThread:108 ] - [ INFO ]  welcome info printed
2021-07-26 09:55:57  [ Thread-105:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-105
2021-07-26 09:55:57  [ Thread-105:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"Welcome","messageBody":{"clientID":33}}Thread-105
2021-07-26 09:55:57  [ JavaFX Application Thread:client.model.Client:735 ] - [ INFO ]  gameOn check in client : false
2021-07-26 09:55:57  [ JavaFX Application Thread:client.model.Client:801 ] - [ INFO ]  {"messageType":"Welcome","messageBody":{"clientID":33}}JavaFX Application Thread
2021-07-26 09:55:57  [ JavaFX Application Thread:client.model.Client:805 ] - [ INFO ]  33
2021-07-26 09:55:57  [ JavaFX Application Thread:client.model.Client:806 ] - [ INFO ]  your clientID is: 33
2021-07-26 09:55:58  [ Thread-83:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-83
2021-07-26 09:55:58  [ Thread-83:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"HelloClient","messageBody":{"protocol":"Version 1.0"}}Thread-83
2021-07-26 09:56:02  [ JavaFX Application Thread:client.model.Client:1248 ] - [ INFO ]  {"messageType":"PlayerValues","messageBody":{"name":"w","figure":2}}
2021-07-26 09:56:02  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"PlayerValues","messageBody":{"name":"w","figure":2}}
2021-07-26 09:56:02  [ Thread-0:protocol.ExecuteOrder:72 ] - [ INFO ]  check player figures
2021-07-26 09:56:02  [ Thread-0:protocol.ExecuteOrder:80 ] - [ INFO ]  addPlayer
2021-07-26 09:56:02  [ Thread-0:server.network.Server:247 ] - [ INFO ]  server added player
2021-07-26 09:56:02  [ Thread-105:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-105
2021-07-26 09:56:02  [ Thread-105:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"PlayerAdded","messageBody":{"clientID":33,"name":"w","figure":2}}Thread-105
2021-07-26 09:56:02  [ JavaFX Application Thread:client.model.Client:812 ] - [ INFO ]  {"messageType":"PlayerAdded","messageBody":{"clientID":33,"name":"w","figure":2}}JavaFX Application Thread
2021-07-26 09:56:02  [ JavaFX Application Thread:client.model.Client:822 ] - [ INFO ]  null: null
2021-07-26 09:56:02  [ JavaFX Application Thread:client.model.Client:829 ] - [ INFO ]  flag launchen window
2021-07-26 09:56:06  [ JavaFX Application Thread:client.model.Client:797 ] - [ INFO ]  protocol from Server: 
{"messageType":"HelloServer","messageBody":{"group":"CC","protocol":"Version 1.0","isAI":false}}
2021-07-26 09:56:06  [ Thread-1:server.network.ServerThread:108 ] - [ INFO ]  welcome info printed
2021-07-26 09:56:06  [ Thread-83:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-83
2021-07-26 09:56:06  [ Thread-83:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"Welcome","messageBody":{"clientID":100}}Thread-83
2021-07-26 09:56:06  [ JavaFX Application Thread:client.model.Client:801 ] - [ INFO ]  {"messageType":"Welcome","messageBody":{"clientID":100}}JavaFX Application Thread
2021-07-26 09:56:06  [ JavaFX Application Thread:client.model.Client:805 ] - [ INFO ]  100
2021-07-26 09:56:06  [ JavaFX Application Thread:client.model.Client:806 ] - [ INFO ]  your clientID is: 100
2021-07-26 09:56:12  [ JavaFX Application Thread:client.model.Client:1248 ] - [ INFO ]  {"messageType":"PlayerValues","messageBody":{"name":"p","figure":5}}
2021-07-26 09:56:12  [ Thread-1:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"PlayerValues","messageBody":{"name":"p","figure":5}}
2021-07-26 09:56:12  [ Thread-1:protocol.ExecuteOrder:72 ] - [ INFO ]  check player figures
2021-07-26 09:56:12  [ Thread-1:protocol.ExecuteOrder:80 ] - [ INFO ]  addPlayer
2021-07-26 09:56:12  [ Thread-1:server.network.Server:247 ] - [ INFO ]  server added player
2021-07-26 09:56:12  [ Thread-105:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-105
2021-07-26 09:56:12  [ Thread-105:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"PlayerAdded","messageBody":{"clientID":100,"name":"p","figure":5}}Thread-105
2021-07-26 09:56:12  [ JavaFX Application Thread:client.model.Client:812 ] - [ INFO ]  {"messageType":"PlayerAdded","messageBody":{"clientID":100,"name":"p","figure":5}}JavaFX Application Thread
2021-07-26 09:56:12  [ JavaFX Application Thread:client.model.Client:822 ] - [ INFO ]  null: null
2021-07-26 09:56:12  [ Thread-1:server.network.Server:265 ] - [ INFO ]  server added player
2021-07-26 09:56:12  [ Thread-1:server.network.Server:265 ] - [ INFO ]  server added player
2021-07-26 09:56:12  [ Thread-83:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-83
2021-07-26 09:56:12  [ Thread-83:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"PlayerAdded","messageBody":{"clientID":100,"name":"p","figure":5}}Thread-83
2021-07-26 09:56:12  [ Thread-83:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-83
2021-07-26 09:56:13  [ JavaFX Application Thread:client.model.Client:812 ] - [ INFO ]  {"messageType":"PlayerAdded","messageBody":{"clientID":100,"name":"p","figure":5}}JavaFX Application Thread
2021-07-26 09:56:13  [ JavaFX Application Thread:client.model.Client:822 ] - [ INFO ]  null: null
2021-07-26 09:56:13  [ JavaFX Application Thread:client.model.Client:829 ] - [ INFO ]  flag launchen window
2021-07-26 09:56:13  [ Thread-83:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"PlayerAdded","messageBody":{"clientID":33,"name":"w","figure":2}}Thread-83
2021-07-26 09:56:13  [ Thread-83:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-83
2021-07-26 09:56:13  [ Thread-83:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"PlayerAdded","messageBody":{"clientID":100,"name":"p","figure":5}}Thread-83
2021-07-26 09:56:20  [ JavaFX Application Thread:client.model.Client:812 ] - [ INFO ]  {"messageType":"PlayerAdded","messageBody":{"clientID":33,"name":"w","figure":2}}JavaFX Application Thread
2021-07-26 09:56:20  [ JavaFX Application Thread:client.model.Client:822 ] - [ INFO ]  null: null
2021-07-26 09:56:20  [ JavaFX Application Thread:client.model.Client:812 ] - [ INFO ]  {"messageType":"PlayerAdded","messageBody":{"clientID":100,"name":"p","figure":5}}JavaFX Application Thread
2021-07-26 09:56:25  [ JavaFX Application Thread:client.model.Client:1264 ] - [ INFO ]  {"messageType":"SetStatus","messageBody":{"ready":true}}
2021-07-26 09:56:25  [ Thread-1:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"SetStatus","messageBody":{"ready":true}}
2021-07-26 09:56:25  [ Thread-1:protocol.ExecuteOrder:116 ] - [ INFO ]  set Status in ExecuteOrder
2021-07-26 09:56:25  [ Thread-1:server.network.Server:279 ] - [ INFO ]  server inform player status
2021-07-26 09:56:25  [ Thread-83:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-83
2021-07-26 09:56:25  [ Thread-83:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"PlayerStatus","messageBody":{"clientID":100,"ready":true}}Thread-83
2021-07-26 09:56:25  [ JavaFX Application Thread:client.model.Client:844 ] - [ INFO ]  {"messageType":"PlayerStatus","messageBody":{"clientID":100,"ready":true}}
2021-07-26 09:56:25  [ Thread-105:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-105
2021-07-26 09:56:25  [ Thread-105:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"PlayerStatus","messageBody":{"clientID":100,"ready":true}}Thread-105
2021-07-26 09:56:25  [ Thread-1:server.network.Server:313 ] - [ INFO ]  server informs first ready player to select a map
2021-07-26 09:56:25  [ Thread-83:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-83
2021-07-26 09:56:25  [ Thread-83:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"SelectMap","messageBody":{"availableMaps":["Dizzy Highway","Lost Bearings","Death Trap","Extra Crispy","Twister"]}}Thread-83
2021-07-26 09:56:25  [ JavaFX Application Thread:client.model.Client:852 ] - [ INFO ]  {"messageType":"SelectMap","messageBody":{"availableMaps":["Dizzy Highway","Lost Bearings","Death Trap","Extra Crispy","Twister"]}}
2021-07-26 09:56:25  [ JavaFX Application Thread:client.model.Client:859 ] - [ INFO ]  in client ListProperty [value: [Dizzy Highway, Lost Bearings, Death Trap, Extra Crispy, Twister]]
2021-07-26 09:56:25  [ Thread-1:protocol.ExecuteOrder:536 ] - [ INFO ]  number of ready clients: 1
2021-07-26 09:56:25  [ JavaFX Application Thread:client.model.Client:844 ] - [ INFO ]  {"messageType":"PlayerStatus","messageBody":{"clientID":100,"ready":true}}
2021-07-26 09:56:26  [ Thread-3:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-26 09:56:26  [ Thread-83:client.model.Client:708 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-83
2021-07-26 09:56:26  [ Thread-83:client.model.Client:709 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-26 09:56:26  [ Thread-1:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 09:56:26  [ Thread-1:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-26 09:56:26  [ Thread-1:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-26 09:56:29  [ JavaFX Application Thread:client.model.Client:1307 ] - [ INFO ]  {"messageType":"MapSelected","messageBody":{"map":"Dizzy Highway"}}
2021-07-26 09:56:29  [ Thread-1:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"MapSelected","messageBody":{"map":"Dizzy Highway"}}
2021-07-26 09:56:29  [ Thread-1:protocol.ExecuteOrder:150 ] - [ INFO ]  set Map in ExecuteOrder
2021-07-26 09:56:29  [ Thread-1:server.network.Server:734 ] - [ INFO ]  server informs which map selected
2021-07-26 09:56:29  [ Thread-83:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-83
2021-07-26 09:56:29  [ Thread-83:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"MapSelected","messageBody":{"map":"Dizzy Highway"}}Thread-83
2021-07-26 09:56:29  [ Thread-105:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-105
2021-07-26 09:56:29  [ Thread-1:server.game.Game:241 ] - [ INFO ]  Game sets map.
2021-07-26 09:56:29  [ Thread-105:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"MapSelected","messageBody":{"map":"Dizzy Highway"}}Thread-105
2021-07-26 09:56:30  [ Thread-1:server.maps.Board:19 ] - [ INFO ]  Board sets map of Dizzy Highway.
2021-07-26 09:56:30  [ Thread-1:protocol.ExecuteOrder:536 ] - [ INFO ]  number of ready clients: 1
2021-07-26 09:56:31  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-26 09:56:33  [ JavaFX Application Thread:client.model.Client:1264 ] - [ INFO ]  {"messageType":"SetStatus","messageBody":{"ready":true}}
2021-07-26 09:56:33  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"SetStatus","messageBody":{"ready":true}}
2021-07-26 09:56:33  [ Thread-0:protocol.ExecuteOrder:116 ] - [ INFO ]  set Status in ExecuteOrder
2021-07-26 09:56:33  [ Thread-0:server.network.Server:279 ] - [ INFO ]  server inform player status
2021-07-26 09:56:33  [ Thread-105:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-105
2021-07-26 09:56:33  [ Thread-0:server.network.Server:313 ] - [ INFO ]  server informs first ready player to select a map
2021-07-26 09:56:33  [ Thread-105:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"PlayerStatus","messageBody":{"clientID":33,"ready":true}}Thread-105
2021-07-26 09:56:33  [ Thread-0:protocol.ExecuteOrder:536 ] - [ INFO ]  number of ready clients: 2
2021-07-26 09:56:33  [ JavaFX Application Thread:client.model.Client:844 ] - [ INFO ]  {"messageType":"PlayerStatus","messageBody":{"clientID":33,"ready":true}}
2021-07-26 09:56:33  [ Thread-0:protocol.ExecuteOrder:538 ] - [ INFO ]  number enough, to play
2021-07-26 09:56:33  [ Thread-0:protocol.ExecuteOrder:539 ] - [ INFO ]  clientIds: [33, 100]
2021-07-26 09:56:33  [ Thread-83:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-83
2021-07-26 09:56:33  [ Thread-83:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"PlayerStatus","messageBody":{"clientID":33,"ready":true}}Thread-83
2021-07-26 09:56:33  [ Thread-83:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-83
2021-07-26 09:56:33  [ Thread-83:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"SelectMap","messageBody":{"availableMaps":["Dizzy Highway","Lost Bearings","Death Trap","Extra Crispy","Twister"]}}Thread-83
2021-07-26 09:56:33  [ JavaFX Application Thread:client.model.Client:844 ] - [ INFO ]  {"messageType":"PlayerStatus","messageBody":{"clientID":33,"ready":true}}
2021-07-26 09:56:33  [ JavaFX Application Thread:client.model.Client:852 ] - [ INFO ]  {"messageType":"SelectMap","messageBody":{"availableMaps":["Dizzy Highway","Lost Bearings","Death Trap","Extra Crispy","Twister"]}}
2021-07-26 09:56:33  [ JavaFX Application Thread:client.model.Client:859 ] - [ INFO ]  in client ListProperty [value: [Dizzy Highway, Lost Bearings, Death Trap, Extra Crispy, Twister, Dizzy Highway, Lost Bearings, Death Trap, Extra Crispy, Twister]]
2021-07-26 09:56:33  [ Thread-0:server.network.Server:328 ] - [ INFO ]  server sends map
2021-07-26 09:56:33  [ Thread-105:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-105
2021-07-26 09:56:33  [ Thread-105:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"GameStarted","messageBody":{"gameMap":[[[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Antenna","isOnBoard":"Start A","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["top"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"ConveyorBelt","isOnBoard":"Start A","speed":1,"orientations":["right","left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"Start A","speed":1,"orientations":["right","left"],"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}]],[[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom","top","right"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom","left","top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right","left","top"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left","top","right"],"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["top"],"registers":null,"count":0}],[{"type":"Laser","isOnBoard":"5B","speed":0,"orientations":["top"],"registers":null,"count":1},{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0},{"type":"RestartPoint","isOnBoard":"DizzyHighway","speed":0,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"Laser","isOnBoard":"5B","speed":0,"orientations":["left"],"registers":null,"count":1},{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Laser","isOnBoard":"5B","speed":0,"orientations":["right"],"registers":null,"count":1},{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["left"],"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Laser","isOnBoard":"5B","speed":0,"orientations":["bottom"],"registers":null,"count":1},{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["top"],"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right","bottom","left"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left","right","bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top","right","bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top","bottom","left"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}]],[[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0},{"type":"CheckPoint","isOnBoard":"DizzyHighway","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]]]}}Thread-105
2021-07-26 09:56:34  [ Thread-83:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-83
2021-07-26 09:56:34  [ Thread-83:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"GameStarted","messageBody":{"gameMap":[[[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Antenna","isOnBoard":"Start A","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["top"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"ConveyorBelt","isOnBoard":"Start A","speed":1,"orientations":["right","left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"Start A","speed":1,"orientations":["right","left"],"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}]],[[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom","top","right"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom","left","top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right","left","top"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left","top","right"],"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["top"],"registers":null,"count":0}],[{"type":"Laser","isOnBoard":"5B","speed":0,"orientations":["top"],"registers":null,"count":1},{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0},{"type":"RestartPoint","isOnBoard":"DizzyHighway","speed":0,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"Laser","isOnBoard":"5B","speed":0,"orientations":["left"],"registers":null,"count":1},{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Laser","isOnBoard":"5B","speed":0,"orientations":["right"],"registers":null,"count":1},{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["left"],"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Laser","isOnBoard":"5B","speed":0,"orientations":["bottom"],"registers":null,"count":1},{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["top"],"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right","bottom","left"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left","right","bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top","right","bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top","bottom","left"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}]],[[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0},{"type":"CheckPoint","isOnBoard":"DizzyHighway","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]]]}}Thread-83
2021-07-26 09:56:34  [ Thread-0:server.network.Server:359 ] - [ INFO ]  server sends phase info
2021-07-26 09:56:34  [ Thread-105:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-105
2021-07-26 09:56:34  [ Thread-105:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"ActivePhase","messageBody":{"phase":0}}Thread-105
2021-07-26 09:56:34  [ Thread-83:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-83
2021-07-26 09:56:34  [ Thread-83:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"ActivePhase","messageBody":{"phase":0}}Thread-83
2021-07-26 09:56:34  [ Thread-0:server.network.Server:372 ] - [ INFO ]  server informs current player id
2021-07-26 09:56:34  [ Thread-105:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-105
2021-07-26 09:56:34  [ Thread-105:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-105
2021-07-26 09:56:34  [ Thread-83:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-83
2021-07-26 09:56:34  [ Thread-83:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-83
2021-07-26 09:56:35  [ Thread-5:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 09:56:35  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 09:56:35  [ Thread-105:client.model.Client:708 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-105
2021-07-26 09:56:35  [ Thread-105:client.model.Client:709 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-26 09:56:35  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 09:56:35  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 09:56:36  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-26 09:56:36  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-26 09:56:36  [ Thread-3:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-26 09:56:36  [ Thread-83:client.model.Client:708 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-83
2021-07-26 09:56:36  [ Thread-83:client.model.Client:709 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-26 09:56:36  [ Thread-1:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 09:56:36  [ Thread-1:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-26 09:56:36  [ Thread-1:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-26 09:56:36  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-26 09:56:37  [ JavaFX Application Thread:client.model.Client:1373 ] - [ INFO ]  {"messageType":"SetStartingPoint","messageBody":{"x":0,"y":3}}
2021-07-26 09:56:37  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"SetStartingPoint","messageBody":{"x":0,"y":3}}
2021-07-26 09:56:37  [ Thread-0:server.network.Server:387 ] - [ INFO ]  server informs set starting point
2021-07-26 09:56:37  [ Thread-0:server.network.Server:372 ] - [ INFO ]  server informs current player id
2021-07-26 09:56:37  [ Thread-105:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-105
2021-07-26 09:56:37  [ Thread-105:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"StartingPointTaken","messageBody":{"x":0,"y":3,"clientID":33}}Thread-105
2021-07-26 09:56:37  [ Thread-105:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-105
2021-07-26 09:56:37  [ Thread-105:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":100}}Thread-105
2021-07-26 09:56:37  [ JavaFX Application Thread:client.model.Client:960 ] - [ INFO ]  0
2021-07-26 09:56:37  [ Thread-83:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-83
2021-07-26 09:56:37  [ Thread-83:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"StartingPointTaken","messageBody":{"x":0,"y":3,"clientID":33}}Thread-83
2021-07-26 09:56:37  [ Thread-83:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-83
2021-07-26 09:56:37  [ Thread-83:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":100}}Thread-83
2021-07-26 09:56:37  [ JavaFX Application Thread:client.model.Client:960 ] - [ INFO ]  0
2021-07-26 09:56:40  [ JavaFX Application Thread:client.model.Client:1373 ] - [ INFO ]  {"messageType":"SetStartingPoint","messageBody":{"x":0,"y":6}}
2021-07-26 09:56:40  [ Thread-1:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"SetStartingPoint","messageBody":{"x":0,"y":6}}
2021-07-26 09:56:40  [ Thread-1:server.network.Server:387 ] - [ INFO ]  server informs set starting point
2021-07-26 09:56:40  [ Thread-83:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-83
2021-07-26 09:56:40  [ Thread-83:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"StartingPointTaken","messageBody":{"x":0,"y":6,"clientID":100}}Thread-83
2021-07-26 09:56:40  [ JavaFX Application Thread:client.model.Client:960 ] - [ INFO ]  0
2021-07-26 09:56:40  [ Thread-1:server.network.Server:359 ] - [ INFO ]  server sends phase info
2021-07-26 09:56:40  [ Thread-83:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-83
2021-07-26 09:56:40  [ Thread-83:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"ActivePhase","messageBody":{"phase":1}}Thread-83
2021-07-26 09:56:40  [ Thread-105:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-105
2021-07-26 09:56:40  [ Thread-105:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"StartingPointTaken","messageBody":{"x":0,"y":6,"clientID":100}}Thread-105
2021-07-26 09:56:40  [ Thread-1:server.network.Server:752 ] - [ INFO ]  server informs Refill upgrade shop.
2021-07-26 09:56:40  [ Thread-83:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-83
2021-07-26 09:56:40  [ Thread-1:protocol.ExecuteOrder:227 ] - [ INFO ]  after setting startPoint, priority list: [33, 100]
2021-07-26 09:56:40  [ Thread-83:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"RefillShop","messageBody":{"cards":["MemorySwap","SpamBlocker"]}}Thread-83
2021-07-26 09:56:40  [ Thread-105:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-105
2021-07-26 09:56:40  [ Thread-105:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"ActivePhase","messageBody":{"phase":1}}Thread-105
2021-07-26 09:56:40  [ JavaFX Application Thread:client.model.Client:960 ] - [ INFO ]  0
2021-07-26 09:56:40  [ Thread-1:server.network.Server:372 ] - [ INFO ]  server informs current player id
2021-07-26 09:56:40  [ Thread-83:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-83
2021-07-26 09:56:40  [ Thread-83:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-83
2021-07-26 09:56:40  [ Thread-105:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-105
2021-07-26 09:56:40  [ Thread-105:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"RefillShop","messageBody":{"cards":["MemorySwap","SpamBlocker"]}}Thread-105
2021-07-26 09:56:40  [ Thread-105:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-105
2021-07-26 09:56:40  [ Thread-105:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-105
2021-07-26 09:56:40  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 09:56:41  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-26 09:56:45  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 09:56:45  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 09:56:45  [ Thread-5:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 09:56:45  [ Thread-105:client.model.Client:708 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-105
2021-07-26 09:56:45  [ Thread-105:client.model.Client:709 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-26 09:56:45  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 09:56:45  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 09:56:45  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 09:56:46  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 09:56:46  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-26 09:56:46  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-26 09:56:46  [ Thread-3:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-26 09:56:46  [ Thread-83:client.model.Client:708 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-83
2021-07-26 09:56:46  [ Thread-83:client.model.Client:709 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-26 09:56:46  [ Thread-1:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 09:56:46  [ Thread-1:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-26 09:56:46  [ Thread-1:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-26 09:56:46  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-26 09:56:51  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 09:56:52  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-26 09:56:55  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 09:56:55  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 09:56:55  [ Thread-5:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 09:56:55  [ Thread-105:client.model.Client:708 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-105
2021-07-26 09:56:55  [ Thread-105:client.model.Client:709 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-26 09:56:55  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 09:56:55  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 09:56:55  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 09:56:56  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 09:56:56  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-26 09:56:56  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-26 09:56:56  [ Thread-3:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-26 09:56:56  [ Thread-83:client.model.Client:708 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-83
2021-07-26 09:56:56  [ Thread-83:client.model.Client:709 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-26 09:56:56  [ Thread-1:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 09:56:56  [ Thread-1:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-26 09:56:56  [ Thread-1:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-26 09:56:57  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-26 09:57:00  [ JavaFX Application Thread:client.model.Client:1536 ] - [ INFO ]  {"messageType":"BuyUpgrade","messageBody":{"card":"MemorySwap","isBuying":true}}
2021-07-26 09:57:00  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"BuyUpgrade","messageBody":{"card":"MemorySwap","isBuying":true}}
2021-07-26 09:57:00  [ Thread-0:server.network.Server:766 ] - [ INFO ]  server informs who bought which upgrade.
2021-07-26 09:57:00  [ Thread-83:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-83
2021-07-26 09:57:00  [ Thread-83:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"UpgradeBought","messageBody":{"clientID":33,"card":"MemorySwap"}}Thread-83
2021-07-26 09:57:00  [ Thread-0:server.network.Server:372 ] - [ INFO ]  server informs current player id
2021-07-26 09:57:00  [ Thread-83:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-83
2021-07-26 09:57:00  [ Thread-83:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":100}}Thread-83
2021-07-26 09:57:00  [ Thread-105:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-105
2021-07-26 09:57:00  [ Thread-105:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"UpgradeBought","messageBody":{"clientID":33,"card":"MemorySwap"}}Thread-105
2021-07-26 09:57:00  [ Thread-105:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-105
2021-07-26 09:57:00  [ Thread-105:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":100}}Thread-105
2021-07-26 09:57:01  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 09:57:02  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-26 09:57:05  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 09:57:05  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 09:57:06  [ Thread-5:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 09:57:06  [ Thread-105:client.model.Client:708 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-105
2021-07-26 09:57:06  [ Thread-105:client.model.Client:709 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-26 09:57:06  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 09:57:06  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 09:57:06  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 09:57:07  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 09:57:07  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-26 09:57:07  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-26 09:57:07  [ Thread-3:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-26 09:57:07  [ Thread-83:client.model.Client:708 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-83
2021-07-26 09:57:07  [ Thread-1:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 09:57:07  [ Thread-83:client.model.Client:709 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-26 09:57:07  [ Thread-1:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-26 09:57:07  [ Thread-1:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-26 09:57:08  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-26 09:57:08  [ JavaFX Application Thread:client.model.Client:1530 ] - [ INFO ]  {"messageType":"BuyUpgrade","messageBody":{"card":null,"isBuying":false}}
2021-07-26 09:57:08  [ Thread-1:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"BuyUpgrade","messageBody":{"card":null,"isBuying":false}}
2021-07-26 09:57:08  [ Thread-1:server.network.Server:359 ] - [ INFO ]  server sends phase info
2021-07-26 09:57:08  [ Thread-105:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-105
2021-07-26 09:57:08  [ Thread-105:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"ActivePhase","messageBody":{"phase":2}}Thread-105
2021-07-26 09:57:08  [ Thread-105:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-105
2021-07-26 09:57:08  [ Thread-105:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"NotYourCards","messageBody":{"clientID":100,"cardsInHand":9}}Thread-105
2021-07-26 09:57:08  [ JavaFX Application Thread:client.model.Client:998 ] - [ INFO ]  100have got 9 cards
2021-07-26 09:57:08  [ Thread-83:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-83
2021-07-26 09:57:08  [ Thread-83:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"ActivePhase","messageBody":{"phase":2}}Thread-83
2021-07-26 09:57:08  [ Thread-83:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-83
2021-07-26 09:57:08  [ Thread-83:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"NotYourCards","messageBody":{"clientID":33,"cardsInHand":9}}Thread-83
2021-07-26 09:57:08  [ Thread-1:server.network.Server:401 ] - [ INFO ]  server informs your cards.
2021-07-26 09:57:08  [ Thread-105:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-105
2021-07-26 09:57:08  [ Thread-105:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"YourCards","messageBody":{"cardsInHand":["TurnLeft","TurnRight","MoveI","MoveI","MoveI","TurnLeft","TurnRight","MoveIII","Again"]}}Thread-105
2021-07-26 09:57:08  [ JavaFX Application Thread:client.model.Client:963 ] - [ INFO ]  clients your cards
2021-07-26 09:57:08  [ Thread-1:server.network.Server:401 ] - [ INFO ]  server informs your cards.
2021-07-26 09:57:08  [ Thread-83:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-83
2021-07-26 09:57:08  [ Thread-83:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"YourCards","messageBody":{"cardsInHand":["MoveI","MoveII","PowerUp","MoveI","MoveIII","MoveI","TurnLeft","BackUp","TurnRight"]}}Thread-83
2021-07-26 09:57:08  [ JavaFX Application Thread:client.model.Client:998 ] - [ INFO ]  33have got 9 cards
2021-07-26 09:57:08  [ JavaFX Application Thread:client.model.Client:963 ] - [ INFO ]  clients your cards
2021-07-26 09:57:12  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 09:57:13  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-26 09:57:16  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 09:57:16  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 09:57:16  [ Thread-5:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 09:57:16  [ Thread-105:client.model.Client:708 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-105
2021-07-26 09:57:16  [ Thread-105:client.model.Client:709 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-26 09:57:16  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 09:57:16  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 09:57:16  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 09:57:16  [ JavaFX Application Thread:client.model.Client:1503 ] - [ INFO ]  {"messageType":"PlayCard","messageBody":{"card":"MemorySwap"}}
2021-07-26 09:57:16  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"PlayCard","messageBody":{"card":"MemorySwap"}}
2021-07-26 09:57:16  [ Thread-0:protocol.ExecuteOrder:284 ] - [ INFO ]  executeOrder playCard
2021-07-26 09:57:16  [ Thread-0:server.network.Server:590 ] - [ INFO ]  server informs who played which card
2021-07-26 09:57:16  [ Thread-105:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-105
2021-07-26 09:57:16  [ Thread-105:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":33,"card":"MemorySwap"}}Thread-105
2021-07-26 09:57:16  [ Thread-0:server.network.Server:430 ] - [ INFO ]  server sends new cards for spam blocker.
2021-07-26 09:57:16  [ Thread-83:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-83
2021-07-26 09:57:16  [ Thread-105:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-105
2021-07-26 09:57:16  [ Thread-105:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"YourCards","messageBody":{"cardsInHand":["MoveII","PowerUp","TurnRight"]}}Thread-105
2021-07-26 09:57:16  [ Thread-83:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":33,"card":"MemorySwap"}}Thread-83
2021-07-26 09:57:16  [ JavaFX Application Thread:client.model.Client:1049 ] - [ INFO ]  client 33 has played MemorySwap
2021-07-26 09:57:17  [ JavaFX Application Thread:client.model.Client:1049 ] - [ INFO ]  client 33 has played MemorySwap
2021-07-26 09:57:17  [ JavaFX Application Thread:client.model.Client:963 ] - [ INFO ]  clients your cards
2021-07-26 09:57:17  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 09:57:17  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-26 09:57:17  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-26 09:57:17  [ Thread-3:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-26 09:57:17  [ Thread-83:client.model.Client:708 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-83
2021-07-26 09:57:17  [ Thread-83:client.model.Client:709 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-26 09:57:17  [ Thread-1:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 09:57:17  [ Thread-1:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-26 09:57:17  [ Thread-1:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-26 09:57:18  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-26 09:57:22  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 09:57:23  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-26 09:57:26  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 09:57:26  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 09:57:26  [ Thread-5:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 09:57:26  [ Thread-105:client.model.Client:708 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-105
2021-07-26 09:57:26  [ Thread-105:client.model.Client:709 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-26 09:57:26  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 09:57:26  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 09:57:26  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 09:57:27  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 09:57:27  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-26 09:57:27  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-26 09:57:27  [ Thread-3:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-26 09:57:28  [ Thread-1:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 09:57:28  [ Thread-1:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-26 09:57:28  [ Thread-1:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-26 09:57:28  [ Thread-83:client.model.Client:708 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-83
2021-07-26 09:57:28  [ Thread-83:client.model.Client:709 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-26 09:57:28  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-26 09:57:32  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 09:57:33  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-26 09:57:36  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 09:57:36  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 09:57:36  [ Thread-5:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 09:57:36  [ Thread-105:client.model.Client:708 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-105
2021-07-26 09:57:36  [ Thread-105:client.model.Client:709 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-26 09:57:36  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 09:57:36  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 09:57:36  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 09:57:37  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 09:57:38  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-26 09:57:38  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-26 09:57:38  [ Thread-3:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-26 09:57:38  [ Thread-1:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 09:57:38  [ Thread-83:client.model.Client:708 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-83
2021-07-26 09:57:38  [ Thread-83:client.model.Client:709 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-26 09:57:38  [ Thread-1:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-26 09:57:38  [ Thread-1:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-26 09:57:38  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-26 09:57:42  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 09:57:43  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-26 09:57:46  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 09:57:46  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 09:57:46  [ Thread-5:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 09:57:46  [ Thread-105:client.model.Client:708 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-105
2021-07-26 09:57:46  [ Thread-105:client.model.Client:709 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-26 09:57:46  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 09:57:46  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 09:57:46  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 09:57:47  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 09:57:48  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-26 09:57:48  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-26 09:57:48  [ Thread-3:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-26 09:57:48  [ Thread-1:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 09:57:48  [ Thread-83:client.model.Client:708 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-83
2021-07-26 09:57:48  [ Thread-83:client.model.Client:709 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-26 09:57:48  [ Thread-1:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-26 09:57:48  [ Thread-1:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-26 09:57:48  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-26 09:57:52  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 09:57:53  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-26 09:57:56  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 09:57:56  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 09:57:56  [ Thread-5:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 09:57:56  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 09:57:56  [ Thread-105:client.model.Client:708 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-105
2021-07-26 09:57:56  [ Thread-105:client.model.Client:709 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-26 09:57:56  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 09:57:56  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 09:57:57  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 09:57:58  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-26 09:57:58  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-26 09:57:58  [ Thread-3:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-26 09:57:58  [ Thread-83:client.model.Client:708 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-83
2021-07-26 09:57:58  [ Thread-1:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 09:57:58  [ Thread-83:client.model.Client:709 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-26 09:57:58  [ Thread-1:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-26 09:57:58  [ Thread-1:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-26 09:57:58  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-26 09:58:02  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 09:58:03  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-26 09:58:06  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 09:58:06  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 09:58:06  [ Thread-5:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 09:58:06  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 09:58:06  [ Thread-105:client.model.Client:708 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-105
2021-07-26 09:58:06  [ Thread-105:client.model.Client:709 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-26 09:58:06  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 09:58:06  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 09:58:07  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 09:58:08  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-26 09:58:08  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-26 09:58:08  [ Thread-3:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-26 09:58:08  [ Thread-1:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 09:58:08  [ Thread-83:client.model.Client:708 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-83
2021-07-26 09:58:08  [ Thread-83:client.model.Client:709 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-26 09:58:08  [ Thread-1:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-26 09:58:08  [ Thread-1:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-26 09:58:08  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-26 09:58:12  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 09:58:13  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-26 09:58:16  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 09:58:16  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 09:58:16  [ Thread-5:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 09:58:16  [ Thread-105:client.model.Client:708 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-105
2021-07-26 09:58:16  [ Thread-105:client.model.Client:709 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-26 09:58:16  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 09:58:16  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 09:58:16  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 09:58:17  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 09:58:18  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-26 09:58:18  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-26 09:58:18  [ Thread-3:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-26 09:58:18  [ Thread-83:client.model.Client:708 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-83
2021-07-26 09:58:18  [ Thread-1:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 09:58:18  [ Thread-83:client.model.Client:709 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-26 09:58:18  [ Thread-1:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-26 09:58:18  [ Thread-1:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-26 09:58:18  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-26 09:58:22  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 09:58:23  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-26 09:58:26  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 09:58:26  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 09:58:26  [ Thread-5:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 09:58:26  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 09:58:26  [ Thread-105:client.model.Client:708 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-105
2021-07-26 09:58:26  [ Thread-105:client.model.Client:709 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-26 09:58:26  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 09:58:26  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 09:58:27  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 09:58:28  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-26 09:58:28  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-26 09:58:28  [ Thread-3:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-26 09:58:28  [ Thread-1:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 09:58:28  [ Thread-83:client.model.Client:708 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-83
2021-07-26 09:58:28  [ Thread-83:client.model.Client:709 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-26 09:58:28  [ Thread-1:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-26 09:58:28  [ Thread-1:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-26 09:58:28  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-26 09:58:32  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 09:58:33  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-26 09:58:36  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 09:58:36  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 09:58:36  [ Thread-5:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 09:58:36  [ Thread-105:client.model.Client:708 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-105
2021-07-26 09:58:36  [ Thread-105:client.model.Client:709 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-26 09:58:36  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 09:58:36  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 09:58:36  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 09:58:37  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 09:58:38  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-26 09:58:38  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-26 09:58:38  [ Thread-3:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-26 09:58:38  [ Thread-1:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 09:58:38  [ Thread-83:client.model.Client:708 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-83
2021-07-26 09:58:38  [ Thread-83:client.model.Client:709 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-26 09:58:38  [ Thread-1:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-26 09:58:38  [ Thread-1:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-26 09:58:38  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-26 09:58:42  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 09:58:43  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-26 09:58:46  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 09:58:46  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 09:58:46  [ Thread-5:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 10:59:27  [ Thread-0:server.network.ServerThread:66 ] - [ INFO ]  protocol to client: 
{"messageType":"HelloClient","messageBody":{"protocol":"Version 1.0"}}
2021-07-26 10:59:29  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 10:59:29  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"HelloClient","messageBody":{"protocol":"Version 1.0"}}Thread-98
2021-07-26 10:59:29  [ JavaFX Application Thread:client.model.Client:735 ] - [ INFO ]  gameOn check in client : false
2021-07-26 10:59:30  [ Thread-1:server.network.ServerThread:66 ] - [ INFO ]  protocol to client: 
{"messageType":"HelloClient","messageBody":{"protocol":"Version 1.0"}}
2021-07-26 10:59:32  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 10:59:32  [ Thread-0:ai.AILow:193 ] - [ INFO ]  protocol from Server: 
{"messageType":"HelloServer","messageBody":{"group":"CC","protocol":"Version 1.0","isAI":true}}
2021-07-26 10:59:32  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"HelloClient","messageBody":{"protocol":"Version 1.0"}}Thread-0
2021-07-26 10:59:32  [ Thread-1:server.network.ServerThread:108 ] - [ INFO ]  welcome info printed
2021-07-26 10:59:32  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 10:59:32  [ Thread-0:ai.AILow:199 ] - [ INFO ]  {"messageType":"Welcome","messageBody":{"clientID":33}}Thread-0
2021-07-26 10:59:32  [ Thread-0:ai.AILow:533 ] - [ INFO ]  {"messageType":"PlayerValues","messageBody":{"name":"AI","figure":1}}
2021-07-26 10:59:32  [ Thread-1:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"PlayerValues","messageBody":{"name":"AI","figure":1}}
2021-07-26 10:59:32  [ Thread-1:protocol.ExecuteOrder:72 ] - [ INFO ]  check player figures
2021-07-26 10:59:32  [ Thread-1:protocol.ExecuteOrder:80 ] - [ INFO ]  addPlayer
2021-07-26 10:59:32  [ Thread-1:server.network.Server:247 ] - [ INFO ]  server added player
2021-07-26 10:59:32  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Welcome","messageBody":{"clientID":33}}Thread-0
2021-07-26 10:59:32  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 10:59:32  [ Thread-0:ai.AILow:212 ] - [ INFO ]  {"messageType":"PlayerAdded","messageBody":{"clientID":33,"name":"AI","figure":1}}Thread-0
2021-07-26 10:59:32  [ Thread-0:ai.AILow:221 ] - [ INFO ]  null: null
2021-07-26 10:59:32  [ Thread-0:ai.AILow:546 ] - [ INFO ]  {"messageType":"SetStatus","messageBody":{"ready":true}}
2021-07-26 10:59:32  [ Thread-1:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"SetStatus","messageBody":{"ready":true}}
2021-07-26 10:59:32  [ Thread-1:protocol.ExecuteOrder:116 ] - [ INFO ]  set Status in ExecuteOrder
2021-07-26 10:59:32  [ Thread-1:server.network.Server:279 ] - [ INFO ]  server inform player status
2021-07-26 10:59:32  [ Thread-1:protocol.ExecuteOrder:536 ] - [ INFO ]  number of ready clients: 1
2021-07-26 10:59:32  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"PlayerAdded","messageBody":{"clientID":33,"name":"AI","figure":1}}Thread-0
2021-07-26 10:59:32  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 10:59:32  [ Thread-0:ai.AILow:234 ] - [ INFO ]  {"messageType":"PlayerStatus","messageBody":{"clientID":33,"ready":true}}
2021-07-26 10:59:32  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"PlayerStatus","messageBody":{"clientID":33,"ready":true}}Thread-0
2021-07-26 10:59:32  [ Thread-3:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 10:59:33  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 10:59:33  [ Thread-1:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 10:59:33  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 10:59:33  [ Thread-1:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 10:59:33  [ Thread-1:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 10:59:35  [ JavaFX Application Thread:client.model.Client:797 ] - [ INFO ]  protocol from Server: 
{"messageType":"HelloServer","messageBody":{"group":"CC","protocol":"Version 1.0","isAI":false}}
2021-07-26 10:59:35  [ Thread-0:server.network.ServerThread:108 ] - [ INFO ]  welcome info printed
2021-07-26 10:59:35  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 10:59:35  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"Welcome","messageBody":{"clientID":100}}Thread-98
2021-07-26 10:59:35  [ JavaFX Application Thread:client.model.Client:801 ] - [ INFO ]  {"messageType":"Welcome","messageBody":{"clientID":100}}JavaFX Application Thread
2021-07-26 10:59:35  [ JavaFX Application Thread:client.model.Client:805 ] - [ INFO ]  100
2021-07-26 10:59:35  [ JavaFX Application Thread:client.model.Client:806 ] - [ INFO ]  your clientID is: 100
2021-07-26 10:59:38  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 10:59:43  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 10:59:43  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 10:59:43  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 10:59:43  [ Thread-3:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 10:59:43  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 10:59:43  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 10:59:43  [ Thread-1:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 10:59:43  [ Thread-1:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 10:59:43  [ Thread-1:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 10:59:44  [ JavaFX Application Thread:client.model.Client:1248 ] - [ INFO ]  {"messageType":"PlayerValues","messageBody":{"name":"l","figure":1}}
2021-07-26 10:59:44  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"PlayerValues","messageBody":{"name":"l","figure":1}}
2021-07-26 10:59:44  [ Thread-0:protocol.ExecuteOrder:72 ] - [ INFO ]  check player figures
2021-07-26 10:59:44  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 10:59:44  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"Error","messageBody":{"error":"This figure exists already, choose again."}}Thread-98
2021-07-26 10:59:44  [ JavaFX Application Thread:client.model.Client:783 ] - [ INFO ]  error printed
2021-07-26 10:59:48  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 10:59:53  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 10:59:53  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 10:59:53  [ Thread-3:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 10:59:53  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 10:59:53  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 10:59:53  [ Thread-1:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 10:59:53  [ Thread-1:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 10:59:53  [ Thread-1:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 10:59:53  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 10:59:58  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 11:00:03  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 11:00:03  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 11:00:03  [ Thread-3:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 11:00:03  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:00:03  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 11:00:03  [ Thread-1:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 11:00:03  [ Thread-1:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 11:00:03  [ Thread-1:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 11:00:03  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 11:00:08  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 11:00:13  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 11:00:13  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 11:00:13  [ Thread-3:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 11:00:13  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:00:13  [ Thread-1:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 11:00:13  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 11:00:13  [ Thread-1:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 11:00:13  [ Thread-1:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 11:00:13  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 11:00:18  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 11:00:23  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 11:00:23  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 11:00:23  [ Thread-3:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 11:00:23  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:00:23  [ Thread-1:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 11:00:23  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 11:00:23  [ Thread-1:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 11:00:23  [ Thread-1:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 11:00:23  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 11:00:28  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 11:00:33  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 11:00:33  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 11:00:33  [ Thread-3:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 11:00:33  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:00:33  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 11:00:33  [ Thread-1:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 11:00:33  [ Thread-1:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 11:00:33  [ Thread-1:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 11:00:33  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 11:00:38  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 11:00:43  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 11:00:43  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 11:00:43  [ Thread-3:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 11:00:43  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:00:43  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 11:00:43  [ Thread-1:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 11:00:43  [ Thread-1:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 11:00:43  [ Thread-1:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 11:00:43  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 11:00:48  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 11:00:53  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 11:00:53  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 11:00:53  [ Thread-3:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 11:00:53  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:00:53  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 11:00:53  [ Thread-1:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 11:00:53  [ Thread-1:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 11:00:53  [ Thread-1:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 11:00:53  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 11:00:58  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 11:01:03  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 11:01:03  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 11:01:03  [ Thread-3:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 11:01:03  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:01:03  [ Thread-1:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 11:01:03  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 11:01:03  [ Thread-1:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 11:01:03  [ Thread-1:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 11:01:03  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 11:01:08  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 11:01:13  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 11:01:13  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 11:01:13  [ Thread-3:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 11:01:13  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:01:13  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 11:01:13  [ Thread-1:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 11:01:13  [ Thread-1:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 11:01:13  [ Thread-1:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 11:01:13  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 11:01:18  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 11:01:23  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 11:01:23  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 11:01:23  [ Thread-3:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 11:01:23  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:01:23  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 11:01:23  [ Thread-1:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 11:01:23  [ Thread-1:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 11:01:23  [ Thread-1:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 11:01:23  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 11:01:28  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 11:01:33  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 11:01:33  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 11:01:33  [ Thread-3:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 11:01:33  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:01:33  [ Thread-1:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 11:01:33  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 11:01:33  [ Thread-1:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 11:01:33  [ Thread-1:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 11:01:33  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 11:01:38  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 11:01:43  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 11:01:43  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 11:01:43  [ Thread-3:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 11:01:43  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:01:43  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 11:01:43  [ Thread-1:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 11:01:43  [ Thread-1:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 11:01:43  [ Thread-1:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 11:01:43  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 11:01:48  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 11:01:53  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 11:01:53  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 11:01:53  [ Thread-3:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 11:01:53  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:01:53  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 11:01:53  [ Thread-1:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 11:01:53  [ Thread-1:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 11:01:53  [ Thread-1:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 11:01:53  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 11:01:58  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 11:02:03  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 11:02:03  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 11:02:03  [ Thread-3:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 11:02:03  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:02:03  [ Thread-1:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 11:02:03  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 11:02:03  [ Thread-1:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 11:02:03  [ Thread-1:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 11:02:03  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 11:02:08  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 11:02:13  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 11:02:13  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 11:02:13  [ Thread-3:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 11:02:13  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:02:13  [ Thread-1:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 11:02:13  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 11:02:13  [ Thread-1:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 11:02:13  [ Thread-1:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 11:02:13  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 11:02:18  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 11:02:23  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 11:02:23  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 11:02:23  [ Thread-3:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 11:02:23  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:02:23  [ Thread-1:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 11:02:23  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 11:02:23  [ Thread-1:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 11:02:23  [ Thread-1:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 11:02:23  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 11:02:28  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 11:02:33  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 11:02:33  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 11:02:33  [ Thread-3:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 11:02:33  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:02:33  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 11:02:33  [ Thread-1:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 11:02:33  [ Thread-1:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 11:02:33  [ Thread-1:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 11:02:33  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 11:02:38  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 11:02:43  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 11:02:43  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 11:02:43  [ Thread-3:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 11:02:43  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:02:43  [ Thread-1:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 11:02:43  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 11:02:43  [ Thread-1:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 11:02:43  [ Thread-1:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 11:02:43  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 11:02:48  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 11:02:53  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 11:02:53  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 11:02:53  [ Thread-3:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 11:02:53  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:02:53  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 11:02:53  [ Thread-1:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 11:02:53  [ Thread-1:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 11:02:53  [ Thread-1:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 11:02:53  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 11:02:58  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 11:03:03  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 11:03:03  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 11:03:03  [ Thread-3:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 11:03:03  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:03:03  [ Thread-1:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 11:03:03  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 11:03:03  [ Thread-1:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 11:03:03  [ Thread-1:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 11:03:03  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 11:03:08  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 11:03:13  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 11:03:13  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 11:03:13  [ Thread-3:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 11:03:13  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:03:13  [ Thread-1:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 11:03:13  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 11:03:13  [ Thread-1:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 11:03:13  [ Thread-1:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 11:03:13  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 11:03:18  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 11:03:23  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 11:03:23  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 11:03:23  [ Thread-3:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 11:03:23  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:03:23  [ Thread-1:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 11:03:23  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 11:03:23  [ Thread-1:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 11:03:23  [ Thread-1:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 11:03:23  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 11:03:23  [ JavaFX Application Thread:client.model.Client:1248 ] - [ INFO ]  {"messageType":"PlayerValues","messageBody":{"name":"oi","figure":5}}
2021-07-26 11:03:23  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"PlayerValues","messageBody":{"name":"oi","figure":5}}
2021-07-26 11:03:23  [ Thread-0:protocol.ExecuteOrder:72 ] - [ INFO ]  check player figures
2021-07-26 11:03:23  [ Thread-0:protocol.ExecuteOrder:80 ] - [ INFO ]  addPlayer
2021-07-26 11:03:23  [ Thread-0:server.network.Server:247 ] - [ INFO ]  server added player
2021-07-26 11:03:23  [ Thread-0:server.network.Server:265 ] - [ INFO ]  server added player
2021-07-26 11:03:23  [ Thread-0:server.network.Server:265 ] - [ INFO ]  server added player
2021-07-26 11:03:23  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:03:23  [ Thread-0:ai.AILow:212 ] - [ INFO ]  {"messageType":"PlayerAdded","messageBody":{"clientID":100,"name":"oi","figure":5}}Thread-0
2021-07-26 11:03:23  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:03:23  [ Thread-0:ai.AILow:221 ] - [ INFO ]  null: null
2021-07-26 11:03:23  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"PlayerAdded","messageBody":{"clientID":100,"name":"oi","figure":5}}Thread-0
2021-07-26 11:03:23  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"PlayerAdded","messageBody":{"clientID":100,"name":"oi","figure":5}}Thread-98
2021-07-26 11:03:24  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:03:24  [ Thread-0:server.network.Server:294 ] - [ INFO ]  server inform status of previous players
2021-07-26 11:03:24  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"PlayerAdded","messageBody":{"clientID":33,"name":"AI","figure":1}}Thread-98
2021-07-26 11:03:24  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:03:24  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"PlayerAdded","messageBody":{"clientID":100,"name":"oi","figure":5}}Thread-98
2021-07-26 11:03:24  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:03:24  [ JavaFX Application Thread:client.model.Client:812 ] - [ INFO ]  {"messageType":"PlayerAdded","messageBody":{"clientID":100,"name":"oi","figure":5}}JavaFX Application Thread
2021-07-26 11:03:24  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"PlayerStatus","messageBody":{"clientID":33,"ready":true}}Thread-98
2021-07-26 11:03:24  [ JavaFX Application Thread:client.model.Client:822 ] - [ INFO ]  null: null
2021-07-26 11:03:24  [ JavaFX Application Thread:client.model.Client:829 ] - [ INFO ]  flag launchen window
2021-07-26 11:03:28  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 11:03:30  [ JavaFX Application Thread:client.model.Client:812 ] - [ INFO ]  {"messageType":"PlayerAdded","messageBody":{"clientID":33,"name":"AI","figure":1}}JavaFX Application Thread
2021-07-26 11:03:30  [ JavaFX Application Thread:client.model.Client:822 ] - [ INFO ]  null: null
2021-07-26 11:03:30  [ JavaFX Application Thread:client.model.Client:812 ] - [ INFO ]  {"messageType":"PlayerAdded","messageBody":{"clientID":100,"name":"oi","figure":5}}JavaFX Application Thread
2021-07-26 11:03:30  [ JavaFX Application Thread:client.model.Client:844 ] - [ INFO ]  {"messageType":"PlayerStatus","messageBody":{"clientID":33,"ready":true}}
2021-07-26 11:03:33  [ JavaFX Application Thread:client.model.Client:1264 ] - [ INFO ]  {"messageType":"SetStatus","messageBody":{"ready":true}}
2021-07-26 11:03:33  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"SetStatus","messageBody":{"ready":true}}
2021-07-26 11:03:33  [ Thread-0:protocol.ExecuteOrder:116 ] - [ INFO ]  set Status in ExecuteOrder
2021-07-26 11:03:33  [ Thread-0:server.network.Server:279 ] - [ INFO ]  server inform player status
2021-07-26 11:03:33  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:03:33  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"PlayerStatus","messageBody":{"clientID":100,"ready":true}}Thread-98
2021-07-26 11:03:33  [ JavaFX Application Thread:client.model.Client:844 ] - [ INFO ]  {"messageType":"PlayerStatus","messageBody":{"clientID":100,"ready":true}}
2021-07-26 11:03:33  [ Thread-0:server.network.Server:313 ] - [ INFO ]  server informs first ready player to select a map
2021-07-26 11:03:33  [ Thread-0:protocol.ExecuteOrder:536 ] - [ INFO ]  number of ready clients: 2
2021-07-26 11:03:33  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:03:33  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:03:33  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"SelectMap","messageBody":{"availableMaps":["Dizzy Highway","Lost Bearings","Death Trap","Extra Crispy","Twister"]}}Thread-98
2021-07-26 11:03:33  [ Thread-0:ai.AILow:234 ] - [ INFO ]  {"messageType":"PlayerStatus","messageBody":{"clientID":100,"ready":true}}
2021-07-26 11:03:33  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"PlayerStatus","messageBody":{"clientID":100,"ready":true}}Thread-0
2021-07-26 11:03:33  [ JavaFX Application Thread:client.model.Client:852 ] - [ INFO ]  {"messageType":"SelectMap","messageBody":{"availableMaps":["Dizzy Highway","Lost Bearings","Death Trap","Extra Crispy","Twister"]}}
2021-07-26 11:03:33  [ JavaFX Application Thread:client.model.Client:859 ] - [ INFO ]  in client ListProperty [value: [Dizzy Highway, Lost Bearings, Death Trap, Extra Crispy, Twister]]
2021-07-26 11:03:33  [ Thread-5:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-26 11:03:33  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 11:03:33  [ Thread-98:client.model.Client:708 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-98
2021-07-26 11:03:33  [ Thread-98:client.model.Client:709 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-26 11:03:33  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-26 11:03:33  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-26 11:03:33  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 11:03:33  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 11:03:33  [ Thread-3:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 11:03:33  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:03:33  [ Thread-1:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 11:03:33  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 11:03:33  [ Thread-1:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 11:03:33  [ Thread-1:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 11:03:33  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 11:03:38  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-26 11:03:38  [ JavaFX Application Thread:client.model.Client:1307 ] - [ INFO ]  {"messageType":"MapSelected","messageBody":{"map":"Dizzy Highway"}}
2021-07-26 11:03:38  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"MapSelected","messageBody":{"map":"Dizzy Highway"}}
2021-07-26 11:03:38  [ Thread-0:protocol.ExecuteOrder:150 ] - [ INFO ]  set Map in ExecuteOrder
2021-07-26 11:03:38  [ Thread-0:server.network.Server:734 ] - [ INFO ]  server informs which map selected
2021-07-26 11:03:38  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:03:38  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:03:38  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"MapSelected","messageBody":{"map":"Dizzy Highway"}}Thread-98
2021-07-26 11:03:38  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"MapSelected","messageBody":{"map":"Dizzy Highway"}}Thread-0
2021-07-26 11:03:38  [ Thread-0:server.game.Game:241 ] - [ INFO ]  Game sets map.
2021-07-26 11:03:38  [ Thread-0:server.maps.Board:19 ] - [ INFO ]  Board sets map of Dizzy Highway.
2021-07-26 11:03:38  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 11:03:39  [ Thread-0:protocol.ExecuteOrder:536 ] - [ INFO ]  number of ready clients: 2
2021-07-26 11:03:39  [ Thread-0:protocol.ExecuteOrder:538 ] - [ INFO ]  number enough, to play
2021-07-26 11:03:39  [ Thread-0:protocol.ExecuteOrder:539 ] - [ INFO ]  clientIds: [33, 100]
2021-07-26 11:03:39  [ Thread-0:server.network.Server:328 ] - [ INFO ]  server sends map
2021-07-26 11:03:39  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:03:39  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:03:39  [ Thread-0:server.network.Server:359 ] - [ INFO ]  server sends phase info
2021-07-26 11:03:39  [ Thread-0:server.network.Server:372 ] - [ INFO ]  server informs current player id
2021-07-26 11:03:39  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"GameStarted","messageBody":{"gameMap":[[[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Antenna","isOnBoard":"Start A","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["top"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"ConveyorBelt","isOnBoard":"Start A","speed":1,"orientations":["right","left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"Start A","speed":1,"orientations":["right","left"],"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}]],[[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom","top","right"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom","left","top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right","left","top"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left","top","right"],"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["top"],"registers":null,"count":0}],[{"type":"Laser","isOnBoard":"5B","speed":0,"orientations":["top"],"registers":null,"count":1},{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0},{"type":"RestartPoint","isOnBoard":"DizzyHighway","speed":0,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"Laser","isOnBoard":"5B","speed":0,"orientations":["left"],"registers":null,"count":1},{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Laser","isOnBoard":"5B","speed":0,"orientations":["right"],"registers":null,"count":1},{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["left"],"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Laser","isOnBoard":"5B","speed":0,"orientations":["bottom"],"registers":null,"count":1},{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["top"],"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right","bottom","left"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left","right","bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top","right","bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top","bottom","left"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}]],[[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0},{"type":"CheckPoint","isOnBoard":"DizzyHighway","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]]]}}Thread-98
2021-07-26 11:03:39  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:03:39  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"ActivePhase","messageBody":{"phase":0}}Thread-98
2021-07-26 11:03:39  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:03:39  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-98
2021-07-26 11:03:39  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"GameStarted","messageBody":{"gameMap":[[[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Antenna","isOnBoard":"Start A","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["top"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"ConveyorBelt","isOnBoard":"Start A","speed":1,"orientations":["right","left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"Start A","speed":1,"orientations":["right","left"],"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}]],[[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom","top","right"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom","left","top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right","left","top"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left","top","right"],"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["top"],"registers":null,"count":0}],[{"type":"Laser","isOnBoard":"5B","speed":0,"orientations":["top"],"registers":null,"count":1},{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0},{"type":"RestartPoint","isOnBoard":"DizzyHighway","speed":0,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"Laser","isOnBoard":"5B","speed":0,"orientations":["left"],"registers":null,"count":1},{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Laser","isOnBoard":"5B","speed":0,"orientations":["right"],"registers":null,"count":1},{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["left"],"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Laser","isOnBoard":"5B","speed":0,"orientations":["bottom"],"registers":null,"count":1},{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["top"],"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right","bottom","left"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left","right","bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top","right","bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top","bottom","left"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}]],[[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0},{"type":"CheckPoint","isOnBoard":"DizzyHighway","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]]]}}Thread-0
2021-07-26 11:03:39  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:03:40  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"ActivePhase","messageBody":{"phase":0}}Thread-0
2021-07-26 11:03:40  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:03:40  [ Thread-0:ai.AILow:654 ] - [ INFO ]  {"messageType":"SetStartingPoint","messageBody":{"x":1,"y":8}}
2021-07-26 11:03:40  [ Thread-1:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"SetStartingPoint","messageBody":{"x":1,"y":8}}
2021-07-26 11:03:40  [ Thread-1:server.network.Server:387 ] - [ INFO ]  server informs set starting point
2021-07-26 11:03:40  [ Thread-1:server.network.Server:372 ] - [ INFO ]  server informs current player id
2021-07-26 11:03:40  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:03:40  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"StartingPointTaken","messageBody":{"x":1,"y":8,"clientID":33}}Thread-98
2021-07-26 11:03:40  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:03:40  [ JavaFX Application Thread:client.model.Client:960 ] - [ INFO ]  1
2021-07-26 11:03:40  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":100}}Thread-98
2021-07-26 11:03:40  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-0
2021-07-26 11:03:40  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:03:40  [ Thread-0:ai.AILow:323 ] - [ INFO ]  1
2021-07-26 11:03:40  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"StartingPointTaken","messageBody":{"x":1,"y":8,"clientID":33}}Thread-0
2021-07-26 11:03:40  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:03:40  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":100}}Thread-0
2021-07-26 11:03:41  [ JavaFX Application Thread:client.model.Client:1373 ] - [ INFO ]  {"messageType":"SetStartingPoint","messageBody":{"x":0,"y":3}}
2021-07-26 11:03:41  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"SetStartingPoint","messageBody":{"x":0,"y":3}}
2021-07-26 11:03:41  [ Thread-0:server.network.Server:387 ] - [ INFO ]  server informs set starting point
2021-07-26 11:03:41  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:03:41  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"StartingPointTaken","messageBody":{"x":0,"y":3,"clientID":100}}Thread-98
2021-07-26 11:03:41  [ Thread-0:server.network.Server:359 ] - [ INFO ]  server sends phase info
2021-07-26 11:03:41  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:03:41  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"ActivePhase","messageBody":{"phase":1}}Thread-98
2021-07-26 11:03:41  [ Thread-0:server.network.Server:752 ] - [ INFO ]  server informs Refill upgrade shop.
2021-07-26 11:03:41  [ Thread-0:protocol.ExecuteOrder:227 ] - [ INFO ]  after setting startPoint, priority list: [100, 33]
2021-07-26 11:03:41  [ Thread-0:server.network.Server:372 ] - [ INFO ]  server informs current player id
2021-07-26 11:03:41  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:03:41  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"RefillShop","messageBody":{"cards":["RealLaser","MemorySwap"]}}Thread-98
2021-07-26 11:03:41  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:03:41  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":100}}Thread-98
2021-07-26 11:03:41  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:03:41  [ Thread-0:ai.AILow:323 ] - [ INFO ]  0
2021-07-26 11:03:41  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"StartingPointTaken","messageBody":{"x":0,"y":3,"clientID":100}}Thread-0
2021-07-26 11:03:41  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:03:41  [ JavaFX Application Thread:client.model.Client:960 ] - [ INFO ]  0
2021-07-26 11:03:41  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"ActivePhase","messageBody":{"phase":1}}Thread-0
2021-07-26 11:03:41  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:03:41  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"RefillShop","messageBody":{"cards":["RealLaser","MemorySwap"]}}Thread-0
2021-07-26 11:03:41  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:03:41  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":100}}Thread-0
2021-07-26 11:03:43  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-26 11:03:43  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-26 11:03:43  [ Thread-5:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-26 11:03:43  [ Thread-98:client.model.Client:708 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-98
2021-07-26 11:03:43  [ Thread-98:client.model.Client:709 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-26 11:03:43  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 11:03:43  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-26 11:03:43  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-26 11:03:43  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-26 11:03:43  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 11:03:43  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 11:03:43  [ Thread-3:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 11:03:43  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:03:43  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 11:03:43  [ Thread-1:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 11:03:43  [ Thread-1:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 11:03:43  [ Thread-1:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 11:03:43  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 11:03:48  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-26 11:03:48  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 11:03:50  [ JavaFX Application Thread:client.model.Client:1536 ] - [ INFO ]  {"messageType":"BuyUpgrade","messageBody":{"card":"MemorySwap","isBuying":true}}
2021-07-26 11:03:50  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"BuyUpgrade","messageBody":{"card":"MemorySwap","isBuying":true}}
2021-07-26 11:03:50  [ Thread-0:server.network.Server:766 ] - [ INFO ]  server informs who bought which upgrade.
2021-07-26 11:03:50  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:03:50  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"UpgradeBought","messageBody":{"clientID":100,"card":"MemorySwap"}}Thread-98
2021-07-26 11:03:50  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:03:50  [ Thread-0:server.network.Server:372 ] - [ INFO ]  server informs current player id
2021-07-26 11:03:50  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:03:50  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-98
2021-07-26 11:03:50  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"UpgradeBought","messageBody":{"clientID":100,"card":"MemorySwap"}}Thread-0
2021-07-26 11:03:50  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:03:50  [ Thread-0:ai.AILow:781 ] - [ INFO ]  {"messageType":"BuyUpgrade","messageBody":{"card":null,"isBuying":false}}
2021-07-26 11:03:50  [ Thread-1:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"BuyUpgrade","messageBody":{"card":null,"isBuying":false}}
2021-07-26 11:03:50  [ Thread-1:server.network.Server:359 ] - [ INFO ]  server sends phase info
2021-07-26 11:03:50  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:03:50  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"ActivePhase","messageBody":{"phase":2}}Thread-98
2021-07-26 11:03:50  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:03:50  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"NotYourCards","messageBody":{"clientID":33,"cardsInHand":9}}Thread-98
2021-07-26 11:03:50  [ Thread-1:server.network.Server:401 ] - [ INFO ]  server informs your cards.
2021-07-26 11:03:50  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-0
2021-07-26 11:03:50  [ JavaFX Application Thread:client.model.Client:998 ] - [ INFO ]  33have got 9 cards
2021-07-26 11:03:50  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:03:50  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"ActivePhase","messageBody":{"phase":2}}Thread-0
2021-07-26 11:03:50  [ Thread-1:server.network.Server:401 ] - [ INFO ]  server informs your cards.
2021-07-26 11:03:50  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:03:50  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"YourCards","messageBody":{"cardsInHand":["Again","UTurn","PowerUp","TurnRight","MoveI","TurnLeft","MoveIII","MoveI","Again"]}}Thread-98
2021-07-26 11:03:50  [ JavaFX Application Thread:client.model.Client:963 ] - [ INFO ]  clients your cards
2021-07-26 11:03:50  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:03:50  [ Thread-0:ai.AILow:339 ] - [ INFO ]  100have got 9 cards
2021-07-26 11:03:50  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"NotYourCards","messageBody":{"clientID":100,"cardsInHand":9}}Thread-0
2021-07-26 11:03:50  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:03:50  [ Thread-0:ai.AILow:326 ] - [ INFO ]  clients your cards
2021-07-26 11:03:50  [ Thread-0:ai.AILow:721 ] - [ INFO ]  {"messageType":"SelectedCard","messageBody":{"card":"TurnLeft","register":1}}
2021-07-26 11:03:50  [ Thread-1:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"SelectedCard","messageBody":{"card":"TurnLeft","register":1}}
2021-07-26 11:03:50  [ Thread-1:protocol.ExecuteOrder:244 ] - [ INFO ]  TurnLeft
2021-07-26 11:03:50  [ Thread-1:server.network.Server:490 ] - [ INFO ]  server informs card selected
2021-07-26 11:03:50  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:03:50  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":33,"register":1,"filled":true}}Thread-98
2021-07-26 11:03:50  [ Thread-0:ai.AILow:721 ] - [ INFO ]  {"messageType":"SelectedCard","messageBody":{"card":"MoveI","register":2}}
2021-07-26 11:03:50  [ Thread-1:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"SelectedCard","messageBody":{"card":"MoveI","register":2}}
2021-07-26 11:03:50  [ JavaFX Application Thread:client.model.Client:1011 ] - [ INFO ]  33 has for register 1true
2021-07-26 11:03:50  [ Thread-1:protocol.ExecuteOrder:244 ] - [ INFO ]  MoveI
2021-07-26 11:03:50  [ Thread-0:ai.AILow:721 ] - [ INFO ]  {"messageType":"SelectedCard","messageBody":{"card":"MoveIII","register":3}}
2021-07-26 11:03:50  [ Thread-1:server.network.Server:490 ] - [ INFO ]  server informs card selected
2021-07-26 11:03:50  [ Thread-1:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"SelectedCard","messageBody":{"card":"MoveIII","register":3}}
2021-07-26 11:03:50  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:03:50  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":33,"register":2,"filled":true}}Thread-98
2021-07-26 11:03:50  [ JavaFX Application Thread:client.model.Client:1011 ] - [ INFO ]  33 has for register 2true
2021-07-26 11:03:50  [ Thread-0:ai.AILow:721 ] - [ INFO ]  {"messageType":"SelectedCard","messageBody":{"card":"MoveI","register":4}}
2021-07-26 11:03:50  [ Thread-1:protocol.ExecuteOrder:244 ] - [ INFO ]  MoveIII
2021-07-26 11:03:50  [ Thread-1:server.network.Server:490 ] - [ INFO ]  server informs card selected
2021-07-26 11:03:50  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:03:50  [ Thread-0:ai.AILow:721 ] - [ INFO ]  {"messageType":"SelectedCard","messageBody":{"card":"MoveI","register":5}}
2021-07-26 11:03:50  [ Thread-1:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"SelectedCard","messageBody":{"card":"MoveI","register":4}}
2021-07-26 11:03:51  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":33,"register":3,"filled":true}}Thread-98
2021-07-26 11:03:51  [ JavaFX Application Thread:client.model.Client:1011 ] - [ INFO ]  33 has for register 3true
2021-07-26 11:03:51  [ Thread-1:protocol.ExecuteOrder:244 ] - [ INFO ]  MoveI
2021-07-26 11:03:51  [ Thread-1:server.network.Server:490 ] - [ INFO ]  server informs card selected
2021-07-26 11:03:51  [ Thread-1:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"SelectedCard","messageBody":{"card":"MoveI","register":5}}
2021-07-26 11:03:51  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:03:51  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":33,"register":4,"filled":true}}Thread-98
2021-07-26 11:03:51  [ JavaFX Application Thread:client.model.Client:1011 ] - [ INFO ]  33 has for register 4true
2021-07-26 11:03:51  [ Thread-0:ai.AILow:742 ] - [ INFO ]  {"messageType":"SelectionFinished","messageBody":{"clientID":33}}
2021-07-26 11:03:51  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"YourCards","messageBody":{"cardsInHand":["TurnLeft","MoveI","MoveIII","MoveI","MoveI","TurnRight","TurnRight","MoveII","TurnLeft"]}}Thread-0
2021-07-26 11:03:51  [ Thread-1:protocol.ExecuteOrder:244 ] - [ INFO ]  MoveI
2021-07-26 11:03:51  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:03:51  [ Thread-1:server.network.Server:490 ] - [ INFO ]  server informs card selected
2021-07-26 11:03:51  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:03:51  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":33,"register":5,"filled":true}}Thread-98
2021-07-26 11:03:51  [ JavaFX Application Thread:client.model.Client:1011 ] - [ INFO ]  33 has for register 5true
2021-07-26 11:03:51  [ Thread-1:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"SelectionFinished","messageBody":{"clientID":33}}
2021-07-26 11:03:51  [ Thread-1:protocol.ExecuteOrder:255 ] - [ INFO ]  executeOrder: selectionFinished : [33]
2021-07-26 11:03:51  [ Thread-0:ai.AILow:352 ] - [ INFO ]  33 has for register 1true
2021-07-26 11:03:51  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":33,"register":1,"filled":true}}Thread-0
2021-07-26 11:03:51  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:03:51  [ Thread-0:ai.AILow:352 ] - [ INFO ]  33 has for register 2true
2021-07-26 11:03:51  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":33,"register":2,"filled":true}}Thread-0
2021-07-26 11:03:51  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:03:51  [ Thread-0:ai.AILow:352 ] - [ INFO ]  33 has for register 3true
2021-07-26 11:03:51  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":33,"register":3,"filled":true}}Thread-0
2021-07-26 11:03:51  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:03:51  [ Thread-0:ai.AILow:352 ] - [ INFO ]  33 has for register 4true
2021-07-26 11:03:51  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":33,"register":4,"filled":true}}Thread-0
2021-07-26 11:03:51  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:03:51  [ Thread-0:ai.AILow:352 ] - [ INFO ]  33 has for register 5true
2021-07-26 11:03:51  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":33,"register":5,"filled":true}}Thread-0
2021-07-26 11:03:53  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-26 11:03:53  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-26 11:03:53  [ Thread-5:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-26 11:03:53  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 11:03:53  [ Thread-98:client.model.Client:708 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-98
2021-07-26 11:03:53  [ Thread-98:client.model.Client:709 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-26 11:03:53  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-26 11:03:53  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-26 11:03:53  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 11:03:53  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-26 11:03:53  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 11:03:53  [ Thread-3:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 11:03:53  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:03:53  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 11:03:53  [ Thread-1:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 11:03:53  [ Thread-1:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 11:03:53  [ Thread-1:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 11:03:53  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 11:03:55  [ JavaFX Application Thread:client.model.Client:1503 ] - [ INFO ]  {"messageType":"PlayCard","messageBody":{"card":"MemorySwap"}}
2021-07-26 11:03:55  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"PlayCard","messageBody":{"card":"MemorySwap"}}
2021-07-26 11:03:55  [ Thread-0:protocol.ExecuteOrder:284 ] - [ INFO ]  executeOrder playCard
2021-07-26 11:03:55  [ Thread-0:server.network.Server:590 ] - [ INFO ]  server informs who played which card
2021-07-26 11:03:55  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:03:55  [ Thread-0:server.network.Server:430 ] - [ INFO ]  server sends new cards for spam blocker.
2021-07-26 11:03:55  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":100,"card":"MemorySwap"}}Thread-98
2021-07-26 11:03:55  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:03:55  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"YourCards","messageBody":{"cardsInHand":["MoveII","PowerUp","TurnRight"]}}Thread-98
2021-07-26 11:03:55  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:03:55  [ Thread-0:ai.AILow:380 ] - [ INFO ]  client 100 has played MemorySwap
2021-07-26 11:03:55  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":100,"card":"MemorySwap"}}Thread-0
2021-07-26 11:03:56  [ JavaFX Application Thread:client.model.Client:1049 ] - [ INFO ]  client 100 has played MemorySwap
2021-07-26 11:03:56  [ JavaFX Application Thread:client.model.Client:963 ] - [ INFO ]  clients your cards
2021-07-26 11:03:58  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-26 11:03:58  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 11:04:03  [ JavaFX Application Thread:client.model.Client:1452 ] - [ INFO ]  {"messageType":"SelectedCard","messageBody":{"card":"MoveIII","register":1}}
2021-07-26 11:04:03  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"SelectedCard","messageBody":{"card":"MoveIII","register":1}}
2021-07-26 11:04:03  [ Thread-0:protocol.ExecuteOrder:244 ] - [ INFO ]  MoveIII
2021-07-26 11:04:03  [ Thread-0:server.network.Server:490 ] - [ INFO ]  server informs card selected
2021-07-26 11:04:03  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:04:03  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:04:03  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":100,"register":1,"filled":true}}Thread-98
2021-07-26 11:04:03  [ Thread-0:ai.AILow:352 ] - [ INFO ]  100 has for register 1true
2021-07-26 11:04:03  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":100,"register":1,"filled":true}}Thread-0
2021-07-26 11:04:03  [ JavaFX Application Thread:client.model.Client:1011 ] - [ INFO ]  100 has for register 1true
2021-07-26 11:04:03  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-26 11:04:03  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-26 11:04:03  [ Thread-5:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-26 11:04:03  [ Thread-98:client.model.Client:708 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-98
2021-07-26 11:04:03  [ Thread-98:client.model.Client:709 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-26 11:04:03  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 11:04:03  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-26 11:04:03  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-26 11:04:03  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 11:04:03  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 11:04:03  [ Thread-3:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 11:04:03  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:04:03  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 11:04:03  [ Thread-1:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 11:04:03  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-26 11:04:03  [ Thread-1:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 11:04:03  [ Thread-1:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 11:04:03  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 11:04:06  [ JavaFX Application Thread:client.model.Client:1452 ] - [ INFO ]  {"messageType":"SelectedCard","messageBody":{"card":"Again","register":2}}
2021-07-26 11:04:06  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"SelectedCard","messageBody":{"card":"Again","register":2}}
2021-07-26 11:04:06  [ Thread-0:protocol.ExecuteOrder:244 ] - [ INFO ]  Again
2021-07-26 11:04:06  [ Thread-0:server.network.Server:490 ] - [ INFO ]  server informs card selected
2021-07-26 11:04:06  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:04:06  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:04:06  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":100,"register":2,"filled":true}}Thread-98
2021-07-26 11:04:06  [ JavaFX Application Thread:client.model.Client:1011 ] - [ INFO ]  100 has for register 2true
2021-07-26 11:04:06  [ Thread-0:ai.AILow:352 ] - [ INFO ]  100 has for register 2true
2021-07-26 11:04:06  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":100,"register":2,"filled":true}}Thread-0
2021-07-26 11:04:08  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-26 11:04:08  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 11:04:09  [ JavaFX Application Thread:client.model.Client:1452 ] - [ INFO ]  {"messageType":"SelectedCard","messageBody":{"card":"TurnRight","register":3}}
2021-07-26 11:04:09  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"SelectedCard","messageBody":{"card":"TurnRight","register":3}}
2021-07-26 11:04:09  [ Thread-0:protocol.ExecuteOrder:244 ] - [ INFO ]  TurnRight
2021-07-26 11:04:09  [ Thread-0:server.network.Server:490 ] - [ INFO ]  server informs card selected
2021-07-26 11:04:09  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:04:09  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:04:09  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":100,"register":3,"filled":true}}Thread-98
2021-07-26 11:04:09  [ JavaFX Application Thread:client.model.Client:1011 ] - [ INFO ]  100 has for register 3true
2021-07-26 11:04:09  [ Thread-0:ai.AILow:352 ] - [ INFO ]  100 has for register 3true
2021-07-26 11:04:09  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":100,"register":3,"filled":true}}Thread-0
2021-07-26 11:04:11  [ JavaFX Application Thread:client.model.Client:1452 ] - [ INFO ]  {"messageType":"SelectedCard","messageBody":{"card":"MoveI","register":4}}
2021-07-26 11:04:11  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"SelectedCard","messageBody":{"card":"MoveI","register":4}}
2021-07-26 11:04:11  [ Thread-0:protocol.ExecuteOrder:244 ] - [ INFO ]  MoveI
2021-07-26 11:04:11  [ Thread-0:server.network.Server:490 ] - [ INFO ]  server informs card selected
2021-07-26 11:04:11  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:04:11  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:04:11  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":100,"register":4,"filled":true}}Thread-98
2021-07-26 11:04:11  [ Thread-0:ai.AILow:352 ] - [ INFO ]  100 has for register 4true
2021-07-26 11:04:11  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":100,"register":4,"filled":true}}Thread-0
2021-07-26 11:04:11  [ JavaFX Application Thread:client.model.Client:1011 ] - [ INFO ]  100 has for register 4true
2021-07-26 11:04:12  [ JavaFX Application Thread:client.model.Client:1452 ] - [ INFO ]  {"messageType":"SelectedCard","messageBody":{"card":"TurnLeft","register":5}}
2021-07-26 11:04:12  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"SelectedCard","messageBody":{"card":"TurnLeft","register":5}}
2021-07-26 11:04:12  [ Thread-0:protocol.ExecuteOrder:244 ] - [ INFO ]  TurnLeft
2021-07-26 11:04:12  [ Thread-0:server.network.Server:490 ] - [ INFO ]  server informs card selected
2021-07-26 11:04:12  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:04:12  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":100,"register":5,"filled":true}}Thread-98
2021-07-26 11:04:12  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:04:12  [ JavaFX Application Thread:client.model.Client:1011 ] - [ INFO ]  100 has for register 5true
2021-07-26 11:04:12  [ Thread-0:ai.AILow:352 ] - [ INFO ]  100 has for register 5true
2021-07-26 11:04:12  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":100,"register":5,"filled":true}}Thread-0
2021-07-26 11:04:13  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-26 11:04:13  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-26 11:04:13  [ Thread-5:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-26 11:04:13  [ Thread-98:client.model.Client:708 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-98
2021-07-26 11:04:13  [ Thread-98:client.model.Client:709 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-26 11:04:13  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 11:04:13  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-26 11:04:13  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-26 11:04:13  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 11:04:13  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 11:04:13  [ Thread-3:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 11:04:13  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:04:13  [ Thread-1:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 11:04:13  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 11:04:13  [ Thread-1:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 11:04:13  [ Thread-1:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 11:04:13  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-26 11:04:13  [ JavaFX Application Thread:client.model.Client:1474 ] - [ INFO ]  {"messageType":"SelectionFinished","messageBody":{"clientID":100}}
2021-07-26 11:04:13  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"SelectionFinished","messageBody":{"clientID":100}}
2021-07-26 11:04:13  [ Thread-0:protocol.ExecuteOrder:255 ] - [ INFO ]  executeOrder: selectionFinished : [33, 100]
2021-07-26 11:04:13  [ Thread-0:server.game.Game:408 ] - [ INFO ]  game stops timer
2021-07-26 11:04:13  [ Thread-0:protocol.ExecuteOrder:268 ] - [ INFO ]  executeOrder all clients finished programming in time
2021-07-26 11:04:13  [ Thread-0:server.network.Server:359 ] - [ INFO ]  server sends phase info
2021-07-26 11:04:13  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:04:13  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:04:13  [ Thread-0:server.network.Server:572 ] - [ INFO ]  Server checked registerPointer 0
2021-07-26 11:04:13  [ Thread-0:server.network.Server:576 ] - [ INFO ]  server inform cards of current register
2021-07-26 11:04:13  [ Thread-0:server.network.Server:372 ] - [ INFO ]  server informs current player id
2021-07-26 11:04:13  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"ActivePhase","messageBody":{"phase":3}}Thread-98
2021-07-26 11:04:13  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"ActivePhase","messageBody":{"phase":3}}Thread-0
2021-07-26 11:04:13  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:04:13  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:04:13  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CurrentCards","messageBody":{"currentRegistersAllClients":[{"clientID":33,"cardName":"TurnLeft"},{"clientID":100,"cardName":"MoveIII"}]}}Thread-98
2021-07-26 11:04:13  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:04:13  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":100}}Thread-98
2021-07-26 11:04:13  [ Thread-0:ai.AILow:373 ] - [ INFO ]  33 has for current register: TurnLeft
2021-07-26 11:04:13  [ Thread-0:ai.AILow:373 ] - [ INFO ]  100 has for current register: MoveIII
2021-07-26 11:04:13  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"CurrentCards","messageBody":{"currentRegistersAllClients":[{"clientID":33,"cardName":"TurnLeft"},{"clientID":100,"cardName":"MoveIII"}]}}Thread-0
2021-07-26 11:04:13  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:04:13  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":100}}Thread-0
2021-07-26 11:04:13  [ JavaFX Application Thread:client.model.Client:1042 ] - [ INFO ]  33 has for current register: TurnLeft
2021-07-26 11:04:13  [ JavaFX Application Thread:client.model.Client:1042 ] - [ INFO ]  100 has for current register: MoveIII
2021-07-26 11:04:13  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 11:04:14  [ JavaFX Application Thread:client.model.Client:1489 ] - [ INFO ]  {"messageType":"PlayCard","messageBody":{"card":"MoveIII"}}
2021-07-26 11:04:14  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"PlayCard","messageBody":{"card":"MoveIII"}}
2021-07-26 11:04:14  [ Thread-0:protocol.ExecuteOrder:284 ] - [ INFO ]  executeOrder playCard
2021-07-26 11:04:14  [ Thread-0:server.network.Server:590 ] - [ INFO ]  server informs who played which card
2021-07-26 11:04:14  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:04:14  [ Thread-0:server.game.Game:864 ] - [ INFO ]  Game checks wall on board for move
2021-07-26 11:04:14  [ Thread-0:server.game.Game:864 ] - [ INFO ]  Game checks wall on board for move
2021-07-26 11:04:14  [ Thread-0:server.game.Game:864 ] - [ INFO ]  Game checks wall on board for move
2021-07-26 11:04:14  [ Thread-0:server.game.Game:864 ] - [ INFO ]  Game checks wall on board for move
2021-07-26 11:04:14  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":100,"card":"MoveIII"}}Thread-98
2021-07-26 11:04:14  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:04:14  [ Thread-0:ai.AILow:380 ] - [ INFO ]  client 100 has played MoveIII
2021-07-26 11:04:14  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":100,"card":"MoveIII"}}Thread-0
2021-07-26 11:04:14  [ Thread-0:server.network.Server:634 ] - [ INFO ]  server informs positions
2021-07-26 11:04:14  [ Thread-0:server.network.Server:635 ] - [ INFO ]  {"messageType":"Movement","messageBody":{"clientID":100,"x":3,"y":3}}
2021-07-26 11:04:14  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:04:14  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":100,"x":3,"y":3}}Thread-98
2021-07-26 11:04:14  [ Thread-0:protocol.ExecuteOrder:320 ] - [ INFO ]  not damage card played [33]
2021-07-26 11:04:14  [ Thread-0:server.game.Game:732 ] - [ INFO ]  Game checks turn over
2021-07-26 11:04:14  [ JavaFX Application Thread:client.model.Client:1049 ] - [ INFO ]  client 100 has played MoveIII
2021-07-26 11:04:14  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:04:14  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":100,"x":3,"y":3}}Thread-0
2021-07-26 11:04:14  [ Thread-0:server.network.Server:372 ] - [ INFO ]  server informs current player id
2021-07-26 11:04:14  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:04:14  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:04:14  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-98
2021-07-26 11:04:14  [ Thread-0:ai.AILow:755 ] - [ INFO ]  {"messageType":"PlayCard","messageBody":{"card":"TurnLeft"}}
2021-07-26 11:04:14  [ Thread-1:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"PlayCard","messageBody":{"card":"TurnLeft"}}
2021-07-26 11:04:14  [ Thread-1:protocol.ExecuteOrder:284 ] - [ INFO ]  executeOrder playCard
2021-07-26 11:04:14  [ Thread-1:server.network.Server:590 ] - [ INFO ]  server informs who played which card
2021-07-26 11:04:14  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:04:14  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":33,"card":"TurnLeft"}}Thread-98
2021-07-26 11:04:14  [ JavaFX Application Thread:client.model.Client:1049 ] - [ INFO ]  client 33 has played TurnLeft
2021-07-26 11:04:14  [ Thread-1:server.network.Server:649 ] - [ INFO ]  server informs turnDirection
2021-07-26 11:04:14  [ Thread-1:protocol.ExecuteOrder:320 ] - [ INFO ]  not damage card played []
2021-07-26 11:04:14  [ Thread-1:server.game.Game:732 ] - [ INFO ]  Game checks turn over
2021-07-26 11:04:14  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:04:14  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"PlayerTurning","messageBody":{"clientID":33,"rotation":"counterclockwise"}}Thread-98
2021-07-26 11:04:14  [ Thread-1:protocol.ExecuteOrder:326 ] - [ INFO ]  ExecuteOrder: turn is over!
2021-07-26 11:04:14  [ Thread-1:server.game.Game:797 ] - [ INFO ]  Game checks round over1
2021-07-26 11:04:14  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-0
2021-07-26 11:04:14  [ Thread-1:server.network.Server:372 ] - [ INFO ]  server informs current player id
2021-07-26 11:04:14  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:04:14  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:04:14  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":100}}Thread-98
2021-07-26 11:04:14  [ Thread-0:ai.AILow:380 ] - [ INFO ]  client 33 has played TurnLeft
2021-07-26 11:04:14  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":33,"card":"TurnLeft"}}Thread-0
2021-07-26 11:04:14  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:04:14  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"PlayerTurning","messageBody":{"clientID":33,"rotation":"counterclockwise"}}Thread-0
2021-07-26 11:04:14  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:04:14  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":100}}Thread-0
2021-07-26 11:04:15  [ JavaFX Application Thread:client.model.Client:1489 ] - [ INFO ]  {"messageType":"PlayCard","messageBody":{"card":"Again"}}
2021-07-26 11:04:15  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"PlayCard","messageBody":{"card":"Again"}}
2021-07-26 11:04:15  [ Thread-0:protocol.ExecuteOrder:284 ] - [ INFO ]  executeOrder playCard
2021-07-26 11:04:15  [ Thread-0:server.network.Server:590 ] - [ INFO ]  server informs who played which card
2021-07-26 11:04:15  [ Thread-0:server.game.Game:864 ] - [ INFO ]  Game checks wall on board for move
2021-07-26 11:04:15  [ Thread-0:server.game.Game:864 ] - [ INFO ]  Game checks wall on board for move
2021-07-26 11:04:15  [ Thread-0:server.game.Game:864 ] - [ INFO ]  Game checks wall on board for move
2021-07-26 11:04:15  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:04:15  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:04:15  [ Thread-0:server.game.Game:864 ] - [ INFO ]  Game checks wall on board for move
2021-07-26 11:04:15  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":100,"card":"Again"}}Thread-98
2021-07-26 11:04:15  [ Thread-0:server.network.Server:634 ] - [ INFO ]  server informs positions
2021-07-26 11:04:15  [ Thread-0:server.network.Server:635 ] - [ INFO ]  {"messageType":"Movement","messageBody":{"clientID":100,"x":6,"y":3}}
2021-07-26 11:04:15  [ JavaFX Application Thread:client.model.Client:1049 ] - [ INFO ]  client 100 has played Again
2021-07-26 11:04:15  [ Thread-0:protocol.ExecuteOrder:320 ] - [ INFO ]  not damage card played [33]
2021-07-26 11:04:15  [ Thread-0:server.game.Game:732 ] - [ INFO ]  Game checks turn over
2021-07-26 11:04:15  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:04:15  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":100,"x":6,"y":3}}Thread-98
2021-07-26 11:04:15  [ Thread-0:ai.AILow:380 ] - [ INFO ]  client 100 has played Again
2021-07-26 11:04:15  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":100,"card":"Again"}}Thread-0
2021-07-26 11:04:15  [ Thread-0:server.network.Server:372 ] - [ INFO ]  server informs current player id
2021-07-26 11:04:15  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:04:15  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:04:15  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":100,"x":6,"y":3}}Thread-0
2021-07-26 11:04:15  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:04:15  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-98
2021-07-26 11:04:15  [ Thread-0:ai.AILow:755 ] - [ INFO ]  {"messageType":"PlayCard","messageBody":{"card":"MoveI"}}
2021-07-26 11:04:15  [ Thread-1:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"PlayCard","messageBody":{"card":"MoveI"}}
2021-07-26 11:04:15  [ Thread-1:protocol.ExecuteOrder:284 ] - [ INFO ]  executeOrder playCard
2021-07-26 11:04:15  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-0
2021-07-26 11:04:15  [ Thread-1:server.network.Server:590 ] - [ INFO ]  server informs who played which card
2021-07-26 11:04:15  [ Thread-1:server.game.Game:864 ] - [ INFO ]  Game checks wall on board for move
2021-07-26 11:04:15  [ Thread-1:server.game.Game:864 ] - [ INFO ]  Game checks wall on board for move
2021-07-26 11:04:15  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:04:15  [ Thread-1:server.network.Server:634 ] - [ INFO ]  server informs positions
2021-07-26 11:04:15  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":33,"card":"MoveI"}}Thread-98
2021-07-26 11:04:15  [ Thread-1:server.network.Server:635 ] - [ INFO ]  {"messageType":"Movement","messageBody":{"clientID":33,"x":1,"y":8}}
2021-07-26 11:04:15  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:04:15  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":33,"x":1,"y":8}}Thread-98
2021-07-26 11:04:15  [ Thread-1:protocol.ExecuteOrder:320 ] - [ INFO ]  not damage card played []
2021-07-26 11:04:15  [ Thread-1:server.game.Game:732 ] - [ INFO ]  Game checks turn over
2021-07-26 11:04:15  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:04:15  [ Thread-0:ai.AILow:380 ] - [ INFO ]  client 33 has played MoveI
2021-07-26 11:04:15  [ Thread-1:protocol.ExecuteOrder:326 ] - [ INFO ]  ExecuteOrder: turn is over!
2021-07-26 11:04:15  [ Thread-1:server.game.Game:797 ] - [ INFO ]  Game checks round over2
2021-07-26 11:04:15  [ Thread-1:server.network.Server:372 ] - [ INFO ]  server informs current player id
2021-07-26 11:04:15  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:04:15  [ JavaFX Application Thread:client.model.Client:1049 ] - [ INFO ]  client 33 has played MoveI
2021-07-26 11:04:15  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-98
2021-07-26 11:04:15  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":33,"card":"MoveI"}}Thread-0
2021-07-26 11:04:15  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:04:15  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":33,"x":1,"y":8}}Thread-0
2021-07-26 11:04:15  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:04:15  [ Thread-0:ai.AILow:755 ] - [ INFO ]  {"messageType":"PlayCard","messageBody":{"card":"MoveIII"}}
2021-07-26 11:04:15  [ Thread-1:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"PlayCard","messageBody":{"card":"MoveIII"}}
2021-07-26 11:04:15  [ Thread-1:protocol.ExecuteOrder:284 ] - [ INFO ]  executeOrder playCard
2021-07-26 11:04:15  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-0
2021-07-26 11:04:15  [ Thread-1:server.network.Server:590 ] - [ INFO ]  server informs who played which card
2021-07-26 11:04:15  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:04:15  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":33,"card":"MoveIII"}}Thread-98
2021-07-26 11:04:15  [ JavaFX Application Thread:client.model.Client:1049 ] - [ INFO ]  client 33 has played MoveIII
2021-07-26 11:04:15  [ Thread-1:server.game.Game:864 ] - [ INFO ]  Game checks wall on board for move
2021-07-26 11:04:15  [ Thread-1:server.game.Game:864 ] - [ INFO ]  Game checks wall on board for move
2021-07-26 11:04:15  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:04:15  [ Thread-1:server.network.Server:634 ] - [ INFO ]  server informs positions
2021-07-26 11:04:15  [ Thread-1:server.network.Server:635 ] - [ INFO ]  {"messageType":"Movement","messageBody":{"clientID":33,"x":1,"y":8}}
2021-07-26 11:04:15  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:04:15  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":33,"x":1,"y":8}}Thread-98
2021-07-26 11:04:15  [ Thread-1:protocol.ExecuteOrder:320 ] - [ INFO ]  not damage card played [100]
2021-07-26 11:04:15  [ Thread-1:server.game.Game:732 ] - [ INFO ]  Game checks turn over
2021-07-26 11:04:15  [ Thread-1:server.network.Server:372 ] - [ INFO ]  server informs current player id
2021-07-26 11:04:15  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:04:15  [ Thread-0:ai.AILow:380 ] - [ INFO ]  client 33 has played MoveIII
2021-07-26 11:04:15  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":33,"card":"MoveIII"}}Thread-0
2021-07-26 11:04:15  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:04:15  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":33,"x":1,"y":8}}Thread-0
2021-07-26 11:04:15  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":100}}Thread-98
2021-07-26 11:04:15  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:04:15  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":100}}Thread-0
2021-07-26 11:04:16  [ JavaFX Application Thread:client.model.Client:1489 ] - [ INFO ]  {"messageType":"PlayCard","messageBody":{"card":"TurnRight"}}
2021-07-26 11:04:16  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"PlayCard","messageBody":{"card":"TurnRight"}}
2021-07-26 11:04:16  [ Thread-0:protocol.ExecuteOrder:284 ] - [ INFO ]  executeOrder playCard
2021-07-26 11:04:16  [ Thread-0:server.network.Server:590 ] - [ INFO ]  server informs who played which card
2021-07-26 11:04:16  [ Thread-0:server.network.Server:649 ] - [ INFO ]  server informs turnDirection
2021-07-26 11:04:16  [ Thread-0:protocol.ExecuteOrder:320 ] - [ INFO ]  not damage card played []
2021-07-26 11:04:16  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:04:16  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":100,"card":"TurnRight"}}Thread-98
2021-07-26 11:04:16  [ JavaFX Application Thread:client.model.Client:1049 ] - [ INFO ]  client 100 has played TurnRight
2021-07-26 11:04:16  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:04:16  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"PlayerTurning","messageBody":{"clientID":100,"rotation":"clockwise"}}Thread-98
2021-07-26 11:04:16  [ Thread-0:server.game.Game:732 ] - [ INFO ]  Game checks turn over
2021-07-26 11:04:16  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:04:16  [ Thread-0:protocol.ExecuteOrder:326 ] - [ INFO ]  ExecuteOrder: turn is over!
2021-07-26 11:04:16  [ Thread-0:ai.AILow:380 ] - [ INFO ]  client 100 has played TurnRight
2021-07-26 11:04:16  [ Thread-0:server.game.Game:797 ] - [ INFO ]  Game checks round over3
2021-07-26 11:04:16  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":100,"card":"TurnRight"}}Thread-0
2021-07-26 11:04:16  [ Thread-0:server.network.Server:372 ] - [ INFO ]  server informs current player id
2021-07-26 11:04:16  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:04:16  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:04:16  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-98
2021-07-26 11:04:16  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"PlayerTurning","messageBody":{"clientID":100,"rotation":"clockwise"}}Thread-0
2021-07-26 11:04:16  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:04:16  [ Thread-0:ai.AILow:755 ] - [ INFO ]  {"messageType":"PlayCard","messageBody":{"card":"MoveI"}}
2021-07-26 11:04:16  [ Thread-1:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"PlayCard","messageBody":{"card":"MoveI"}}
2021-07-26 11:04:16  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-0
2021-07-26 11:04:16  [ Thread-1:protocol.ExecuteOrder:284 ] - [ INFO ]  executeOrder playCard
2021-07-26 11:04:16  [ Thread-1:server.network.Server:590 ] - [ INFO ]  server informs who played which card
2021-07-26 11:04:16  [ Thread-1:server.game.Game:864 ] - [ INFO ]  Game checks wall on board for move
2021-07-26 11:04:16  [ Thread-1:server.game.Game:864 ] - [ INFO ]  Game checks wall on board for move
2021-07-26 11:04:16  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:04:16  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":33,"card":"MoveI"}}Thread-98
2021-07-26 11:04:16  [ Thread-1:server.network.Server:634 ] - [ INFO ]  server informs positions
2021-07-26 11:04:16  [ Thread-1:server.network.Server:635 ] - [ INFO ]  {"messageType":"Movement","messageBody":{"clientID":33,"x":1,"y":8}}
2021-07-26 11:04:16  [ JavaFX Application Thread:client.model.Client:1049 ] - [ INFO ]  client 33 has played MoveI
2021-07-26 11:04:16  [ Thread-1:protocol.ExecuteOrder:320 ] - [ INFO ]  not damage card played [100]
2021-07-26 11:04:16  [ Thread-1:server.game.Game:732 ] - [ INFO ]  Game checks turn over
2021-07-26 11:04:16  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:04:16  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":33,"x":1,"y":8}}Thread-98
2021-07-26 11:04:16  [ Thread-1:server.network.Server:372 ] - [ INFO ]  server informs current player id
2021-07-26 11:04:16  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:04:16  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:04:16  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":100}}Thread-98
2021-07-26 11:04:16  [ Thread-0:ai.AILow:380 ] - [ INFO ]  client 33 has played MoveI
2021-07-26 11:04:16  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":33,"card":"MoveI"}}Thread-0
2021-07-26 11:04:16  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:04:16  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":33,"x":1,"y":8}}Thread-0
2021-07-26 11:04:16  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:04:16  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":100}}Thread-0
2021-07-26 11:04:16  [ JavaFX Application Thread:client.model.Client:1489 ] - [ INFO ]  {"messageType":"PlayCard","messageBody":{"card":"MoveI"}}
2021-07-26 11:04:16  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"PlayCard","messageBody":{"card":"MoveI"}}
2021-07-26 11:04:16  [ Thread-0:protocol.ExecuteOrder:284 ] - [ INFO ]  executeOrder playCard
2021-07-26 11:04:16  [ Thread-0:server.network.Server:590 ] - [ INFO ]  server informs who played which card
2021-07-26 11:04:16  [ Thread-0:server.game.Game:864 ] - [ INFO ]  Game checks wall on board for move
2021-07-26 11:04:16  [ Thread-0:server.game.Game:864 ] - [ INFO ]  Game checks wall on board for move
2021-07-26 11:04:16  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:04:16  [ Thread-0:server.network.Server:634 ] - [ INFO ]  server informs positions
2021-07-26 11:04:16  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:04:16  [ Thread-0:server.network.Server:635 ] - [ INFO ]  {"messageType":"Movement","messageBody":{"clientID":100,"x":6,"y":4}}
2021-07-26 11:04:16  [ Thread-0:protocol.ExecuteOrder:320 ] - [ INFO ]  not damage card played []
2021-07-26 11:04:16  [ Thread-0:server.game.Game:732 ] - [ INFO ]  Game checks turn over
2021-07-26 11:04:16  [ JavaFX Application Thread:client.model.Client:1049 ] - [ INFO ]  client 100 has played MoveI
2021-07-26 11:04:16  [ Thread-0:server.network.Server:664 ] - [ INFO ]  server informs drawn damage cards
2021-07-26 11:04:16  [ Thread-0:ai.AILow:380 ] - [ INFO ]  client 100 has played MoveI
2021-07-26 11:04:16  [ Thread-0:protocol.ExecuteOrder:326 ] - [ INFO ]  ExecuteOrder: turn is over!
2021-07-26 11:04:16  [ Thread-0:server.game.Game:797 ] - [ INFO ]  Game checks round over4
2021-07-26 11:04:16  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":100,"card":"MoveI"}}Thread-0
2021-07-26 11:04:16  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:04:16  [ Thread-0:server.network.Server:372 ] - [ INFO ]  server informs current player id
2021-07-26 11:04:16  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":100,"card":"MoveI"}}Thread-98
2021-07-26 11:04:17  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:04:17  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":100,"x":6,"y":4}}Thread-0
2021-07-26 11:04:17  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":100,"x":6,"y":4}}Thread-98
2021-07-26 11:04:17  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:04:17  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:04:17  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"DrawDamage","messageBody":{"clientID":100,"cards":["Spam"]}}Thread-0
2021-07-26 11:04:17  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"DrawDamage","messageBody":{"clientID":100,"cards":["Spam"]}}Thread-98
2021-07-26 11:04:17  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:04:17  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-98
2021-07-26 11:04:17  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:04:17  [ Thread-0:ai.AILow:755 ] - [ INFO ]  {"messageType":"PlayCard","messageBody":{"card":"MoveI"}}
2021-07-26 11:04:17  [ Thread-1:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"PlayCard","messageBody":{"card":"MoveI"}}
2021-07-26 11:04:17  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-0
2021-07-26 11:04:17  [ Thread-1:protocol.ExecuteOrder:284 ] - [ INFO ]  executeOrder playCard
2021-07-26 11:04:17  [ Thread-1:server.network.Server:590 ] - [ INFO ]  server informs who played which card
2021-07-26 11:04:17  [ Thread-1:server.game.Game:864 ] - [ INFO ]  Game checks wall on board for move
2021-07-26 11:04:17  [ Thread-1:server.game.Game:864 ] - [ INFO ]  Game checks wall on board for move
2021-07-26 11:04:17  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:04:17  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":33,"card":"MoveI"}}Thread-98
2021-07-26 11:04:17  [ JavaFX Application Thread:client.model.Client:1049 ] - [ INFO ]  client 33 has played MoveI
2021-07-26 11:04:17  [ Thread-1:server.network.Server:634 ] - [ INFO ]  server informs positions
2021-07-26 11:04:17  [ Thread-1:server.network.Server:635 ] - [ INFO ]  {"messageType":"Movement","messageBody":{"clientID":33,"x":1,"y":8}}
2021-07-26 11:04:17  [ Thread-1:protocol.ExecuteOrder:320 ] - [ INFO ]  not damage card played [100]
2021-07-26 11:04:17  [ Thread-1:server.game.Game:732 ] - [ INFO ]  Game checks turn over
2021-07-26 11:04:17  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:04:17  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":33,"x":1,"y":8}}Thread-98
2021-07-26 11:04:17  [ Thread-1:server.network.Server:372 ] - [ INFO ]  server informs current player id
2021-07-26 11:04:17  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:04:17  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":100}}Thread-98
2021-07-26 11:04:17  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:04:17  [ Thread-0:ai.AILow:380 ] - [ INFO ]  client 33 has played MoveI
2021-07-26 11:04:17  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":33,"card":"MoveI"}}Thread-0
2021-07-26 11:04:17  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:04:17  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":33,"x":1,"y":8}}Thread-0
2021-07-26 11:04:17  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:04:17  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":100}}Thread-0
2021-07-26 11:04:17  [ JavaFX Application Thread:client.model.Client:1489 ] - [ INFO ]  {"messageType":"PlayCard","messageBody":{"card":"TurnLeft"}}
2021-07-26 11:04:17  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"PlayCard","messageBody":{"card":"TurnLeft"}}
2021-07-26 11:04:17  [ Thread-0:protocol.ExecuteOrder:284 ] - [ INFO ]  executeOrder playCard
2021-07-26 11:04:17  [ Thread-0:server.network.Server:590 ] - [ INFO ]  server informs who played which card
2021-07-26 11:04:17  [ Thread-0:server.network.Server:649 ] - [ INFO ]  server informs turnDirection
2021-07-26 11:04:17  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:04:17  [ Thread-0:protocol.ExecuteOrder:320 ] - [ INFO ]  not damage card played []
2021-07-26 11:04:17  [ Thread-0:server.game.Game:732 ] - [ INFO ]  Game checks turn over
2021-07-26 11:04:17  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:04:17  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":100,"card":"TurnLeft"}}Thread-98
2021-07-26 11:04:17  [ Thread-0:server.network.Server:664 ] - [ INFO ]  server informs drawn damage cards
2021-07-26 11:04:17  [ Thread-0:protocol.ExecuteOrder:326 ] - [ INFO ]  ExecuteOrder: turn is over!
2021-07-26 11:04:17  [ Thread-0:server.game.Game:797 ] - [ INFO ]  Game checks round over5
2021-07-26 11:04:17  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:04:17  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"PlayerTurning","messageBody":{"clientID":100,"rotation":"counterclockwise"}}Thread-98
2021-07-26 11:04:17  [ Thread-0:protocol.ExecuteOrder:331 ] - [ INFO ]  ExecuteOrder: round is over!
2021-07-26 11:04:17  [ Thread-0:server.network.Server:359 ] - [ INFO ]  server sends phase info
2021-07-26 11:04:17  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:04:17  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"DrawDamage","messageBody":{"clientID":100,"cards":["Spam"]}}Thread-98
2021-07-26 11:04:17  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:04:17  [ Thread-0:server.network.Server:752 ] - [ INFO ]  server informs Refill upgrade shop.
2021-07-26 11:04:17  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"ActivePhase","messageBody":{"phase":1}}Thread-98
2021-07-26 11:04:17  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:04:17  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"RefillShop","messageBody":{"cards":["MemorySwap","AdminPrivilege"]}}Thread-98
2021-07-26 11:04:17  [ Thread-0:ai.AILow:380 ] - [ INFO ]  client 100 has played TurnLeft
2021-07-26 11:04:17  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":100,"card":"TurnLeft"}}Thread-0
2021-07-26 11:04:17  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:04:17  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"PlayerTurning","messageBody":{"clientID":100,"rotation":"counterclockwise"}}Thread-0
2021-07-26 11:04:17  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:04:17  [ JavaFX Application Thread:client.model.Client:1049 ] - [ INFO ]  client 100 has played TurnLeft
2021-07-26 11:04:17  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"DrawDamage","messageBody":{"clientID":100,"cards":["Spam"]}}Thread-0
2021-07-26 11:04:17  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:04:17  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"ActivePhase","messageBody":{"phase":1}}Thread-0
2021-07-26 11:04:17  [ Thread-0:server.network.Server:372 ] - [ INFO ]  server informs current player id
2021-07-26 11:04:17  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:04:17  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:04:17  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-98
2021-07-26 11:04:17  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"RefillShop","messageBody":{"cards":["MemorySwap","AdminPrivilege"]}}Thread-0
2021-07-26 11:04:17  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:04:17  [ Thread-0:ai.AILow:781 ] - [ INFO ]  {"messageType":"BuyUpgrade","messageBody":{"card":null,"isBuying":false}}
2021-07-26 11:04:17  [ Thread-1:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"BuyUpgrade","messageBody":{"card":null,"isBuying":false}}
2021-07-26 11:04:17  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-0
2021-07-26 11:04:17  [ Thread-1:server.network.Server:372 ] - [ INFO ]  server informs current player id
2021-07-26 11:04:17  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:04:17  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:04:17  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":100}}Thread-0
2021-07-26 11:04:17  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":100}}Thread-98
2021-07-26 11:04:18  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-26 11:04:18  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 11:04:23  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-26 11:04:23  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-26 11:04:23  [ Thread-5:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-26 11:04:23  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 11:04:23  [ Thread-98:client.model.Client:708 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-98
2021-07-26 11:04:23  [ Thread-98:client.model.Client:709 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-26 11:04:23  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-26 11:04:23  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-26 11:04:23  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 11:04:23  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 11:04:23  [ Thread-3:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 11:04:23  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:04:23  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 11:04:23  [ Thread-1:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 11:04:23  [ Thread-1:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 11:04:23  [ Thread-1:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 11:04:23  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-26 11:04:23  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 11:04:24  [ JavaFX Application Thread:client.model.Client:1536 ] - [ INFO ]  {"messageType":"BuyUpgrade","messageBody":{"card":"MemorySwap","isBuying":true}}
2021-07-26 11:04:24  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"BuyUpgrade","messageBody":{"card":"MemorySwap","isBuying":true}}
2021-07-26 11:04:24  [ Thread-0:server.network.Server:766 ] - [ INFO ]  server informs who bought which upgrade.
2021-07-26 11:04:24  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:04:24  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"UpgradeBought","messageBody":{"clientID":100,"card":"MemorySwap"}}Thread-98
2021-07-26 11:04:24  [ Thread-0:server.network.Server:359 ] - [ INFO ]  server sends phase info
2021-07-26 11:04:24  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:04:24  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"ActivePhase","messageBody":{"phase":2}}Thread-98
2021-07-26 11:04:24  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:04:24  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:04:24  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"NotYourCards","messageBody":{"clientID":33,"cardsInHand":9}}Thread-98
2021-07-26 11:04:24  [ JavaFX Application Thread:client.model.Client:998 ] - [ INFO ]  33have got 9 cards
2021-07-26 11:04:24  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"UpgradeBought","messageBody":{"clientID":100,"card":"MemorySwap"}}Thread-0
2021-07-26 11:04:24  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:04:24  [ Thread-0:server.network.Server:401 ] - [ INFO ]  server informs your cards.
2021-07-26 11:04:24  [ Thread-0:server.network.Server:401 ] - [ INFO ]  server informs your cards.
2021-07-26 11:04:24  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:04:24  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"YourCards","messageBody":{"cardsInHand":["TurnRight","TurnLeft","MoveI","MoveII","MoveII","MoveI","BackUp","MoveI","TurnLeft"]}}Thread-98
2021-07-26 11:04:24  [ JavaFX Application Thread:client.model.Client:963 ] - [ INFO ]  clients your cards
2021-07-26 11:04:24  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"ActivePhase","messageBody":{"phase":2}}Thread-0
2021-07-26 11:04:24  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:04:24  [ Thread-0:ai.AILow:339 ] - [ INFO ]  100have got 9 cards
2021-07-26 11:04:24  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"NotYourCards","messageBody":{"clientID":100,"cardsInHand":9}}Thread-0
2021-07-26 11:04:24  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:04:24  [ Thread-0:ai.AILow:326 ] - [ INFO ]  clients your cards
2021-07-26 11:04:24  [ Thread-0:ai.AILow:721 ] - [ INFO ]  {"messageType":"SelectedCard","messageBody":{"card":"BackUp","register":1}}
2021-07-26 11:04:24  [ Thread-1:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"SelectedCard","messageBody":{"card":"BackUp","register":1}}
2021-07-26 11:04:24  [ Thread-1:protocol.ExecuteOrder:244 ] - [ INFO ]  BackUp
2021-07-26 11:04:24  [ Thread-1:server.network.Server:490 ] - [ INFO ]  server informs card selected
2021-07-26 11:04:24  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:04:24  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":33,"register":1,"filled":true}}Thread-98
2021-07-26 11:04:24  [ JavaFX Application Thread:client.model.Client:1011 ] - [ INFO ]  33 has for register 1true
2021-07-26 11:04:24  [ Thread-0:ai.AILow:721 ] - [ INFO ]  {"messageType":"SelectedCard","messageBody":{"card":"TurnRight","register":2}}
2021-07-26 11:04:24  [ Thread-1:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"SelectedCard","messageBody":{"card":"TurnRight","register":2}}
2021-07-26 11:04:24  [ Thread-1:protocol.ExecuteOrder:244 ] - [ INFO ]  TurnRight
2021-07-26 11:04:24  [ Thread-1:server.network.Server:490 ] - [ INFO ]  server informs card selected
2021-07-26 11:04:24  [ Thread-0:ai.AILow:721 ] - [ INFO ]  {"messageType":"SelectedCard","messageBody":{"card":"Again","register":3}}
2021-07-26 11:04:24  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:04:24  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":33,"register":2,"filled":true}}Thread-98
2021-07-26 11:04:24  [ Thread-1:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"SelectedCard","messageBody":{"card":"Again","register":3}}
2021-07-26 11:04:24  [ JavaFX Application Thread:client.model.Client:1011 ] - [ INFO ]  33 has for register 2true
2021-07-26 11:04:24  [ Thread-1:protocol.ExecuteOrder:244 ] - [ INFO ]  Again
2021-07-26 11:04:24  [ Thread-0:ai.AILow:721 ] - [ INFO ]  {"messageType":"SelectedCard","messageBody":{"card":"Again","register":4}}
2021-07-26 11:04:24  [ Thread-1:server.network.Server:490 ] - [ INFO ]  server informs card selected
2021-07-26 11:04:24  [ Thread-1:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"SelectedCard","messageBody":{"card":"Again","register":4}}
2021-07-26 11:04:24  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:04:24  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":33,"register":3,"filled":true}}Thread-98
2021-07-26 11:04:24  [ Thread-0:ai.AILow:721 ] - [ INFO ]  {"messageType":"SelectedCard","messageBody":{"card":"MoveII","register":5}}
2021-07-26 11:04:24  [ Thread-0:ai.AILow:742 ] - [ INFO ]  {"messageType":"SelectionFinished","messageBody":{"clientID":33}}
2021-07-26 11:04:24  [ JavaFX Application Thread:client.model.Client:1011 ] - [ INFO ]  33 has for register 3true
2021-07-26 11:04:24  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"YourCards","messageBody":{"cardsInHand":["BackUp","TurnRight","Again","Again","MoveII","TurnLeft","MoveI","MoveI","UTurn"]}}Thread-0
2021-07-26 11:04:24  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:04:24  [ Thread-0:ai.AILow:352 ] - [ INFO ]  33 has for register 1true
2021-07-26 11:04:24  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":33,"register":1,"filled":true}}Thread-0
2021-07-26 11:04:24  [ Thread-1:protocol.ExecuteOrder:244 ] - [ INFO ]  Again
2021-07-26 11:04:24  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:04:24  [ Thread-1:server.network.Server:490 ] - [ INFO ]  server informs card selected
2021-07-26 11:04:24  [ Thread-1:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"SelectedCard","messageBody":{"card":"MoveII","register":5}}
2021-07-26 11:04:24  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:04:24  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":33,"register":4,"filled":true}}Thread-98
2021-07-26 11:04:24  [ JavaFX Application Thread:client.model.Client:1011 ] - [ INFO ]  33 has for register 4true
2021-07-26 11:04:24  [ Thread-1:protocol.ExecuteOrder:244 ] - [ INFO ]  MoveII
2021-07-26 11:04:24  [ Thread-1:server.network.Server:490 ] - [ INFO ]  server informs card selected
2021-07-26 11:04:24  [ Thread-1:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"SelectionFinished","messageBody":{"clientID":33}}
2021-07-26 11:04:24  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:04:24  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":33,"register":5,"filled":true}}Thread-98
2021-07-26 11:04:24  [ JavaFX Application Thread:client.model.Client:1011 ] - [ INFO ]  33 has for register 5true
2021-07-26 11:04:24  [ Thread-1:protocol.ExecuteOrder:255 ] - [ INFO ]  executeOrder: selectionFinished : [33]
2021-07-26 11:04:24  [ Thread-0:ai.AILow:352 ] - [ INFO ]  33 has for register 2true
2021-07-26 11:04:24  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":33,"register":2,"filled":true}}Thread-0
2021-07-26 11:04:24  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:04:24  [ Thread-0:ai.AILow:352 ] - [ INFO ]  33 has for register 3true
2021-07-26 11:04:24  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":33,"register":3,"filled":true}}Thread-0
2021-07-26 11:04:24  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:04:24  [ Thread-0:ai.AILow:352 ] - [ INFO ]  33 has for register 4true
2021-07-26 11:04:24  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":33,"register":4,"filled":true}}Thread-0
2021-07-26 11:04:24  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:04:24  [ Thread-0:ai.AILow:352 ] - [ INFO ]  33 has for register 5true
2021-07-26 11:04:24  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":33,"register":5,"filled":true}}Thread-0
2021-07-26 11:04:28  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-26 11:04:28  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 11:04:33  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-26 11:04:33  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-26 11:04:33  [ Thread-5:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-26 11:04:33  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 11:04:33  [ Thread-98:client.model.Client:708 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-98
2021-07-26 11:04:33  [ Thread-98:client.model.Client:709 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-26 11:04:33  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-26 11:04:33  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-26 11:04:33  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 11:04:33  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 11:04:33  [ Thread-3:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 11:04:33  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:04:33  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 11:04:33  [ Thread-1:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 11:04:33  [ Thread-1:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 11:04:33  [ Thread-1:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 11:04:33  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-26 11:04:34  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 11:04:35  [ JavaFX Application Thread:client.model.Client:1503 ] - [ INFO ]  {"messageType":"PlayCard","messageBody":{"card":"MemorySwap"}}
2021-07-26 11:04:35  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"PlayCard","messageBody":{"card":"MemorySwap"}}
2021-07-26 11:04:35  [ Thread-0:protocol.ExecuteOrder:284 ] - [ INFO ]  executeOrder playCard
2021-07-26 11:04:35  [ Thread-0:server.network.Server:590 ] - [ INFO ]  server informs who played which card
2021-07-26 11:04:35  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:04:35  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":100,"card":"MemorySwap"}}Thread-98
2021-07-26 11:04:35  [ Thread-0:server.network.Server:430 ] - [ INFO ]  server sends new cards for spam blocker.
2021-07-26 11:04:35  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:04:35  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"YourCards","messageBody":{"cardsInHand":["MoveII","PowerUp","TurnRight"]}}Thread-98
2021-07-26 11:04:35  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:04:35  [ Thread-0:ai.AILow:380 ] - [ INFO ]  client 100 has played MemorySwap
2021-07-26 11:04:35  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":100,"card":"MemorySwap"}}Thread-0
2021-07-26 11:04:35  [ JavaFX Application Thread:client.model.Client:1049 ] - [ INFO ]  client 100 has played MemorySwap
2021-07-26 11:04:35  [ JavaFX Application Thread:client.model.Client:963 ] - [ INFO ]  clients your cards
2021-07-26 11:04:38  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-26 11:04:39  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 11:04:43  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-26 11:04:43  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-26 11:04:43  [ Thread-5:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-26 11:04:43  [ Thread-98:client.model.Client:708 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-98
2021-07-26 11:04:43  [ Thread-98:client.model.Client:709 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-26 11:04:43  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 11:04:43  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-26 11:04:43  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-26 11:04:43  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 11:04:43  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 11:04:43  [ Thread-3:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 11:04:43  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:04:43  [ Thread-1:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 11:04:43  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 11:04:43  [ Thread-1:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 11:04:43  [ Thread-1:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 11:04:43  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-26 11:04:44  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 11:04:46  [ JavaFX Application Thread:client.model.Client:1452 ] - [ INFO ]  {"messageType":"SelectedCard","messageBody":{"card":"MoveII","register":1}}
2021-07-26 11:04:46  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"SelectedCard","messageBody":{"card":"MoveII","register":1}}
2021-07-26 11:04:46  [ Thread-0:protocol.ExecuteOrder:244 ] - [ INFO ]  MoveII
2021-07-26 11:04:46  [ Thread-0:server.network.Server:490 ] - [ INFO ]  server informs card selected
2021-07-26 11:04:46  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:04:46  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:04:46  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":100,"register":1,"filled":true}}Thread-98
2021-07-26 11:04:46  [ JavaFX Application Thread:client.model.Client:1011 ] - [ INFO ]  100 has for register 1true
2021-07-26 11:04:46  [ Thread-0:ai.AILow:352 ] - [ INFO ]  100 has for register 1true
2021-07-26 11:04:46  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":100,"register":1,"filled":true}}Thread-0
2021-07-26 11:04:48  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-26 11:04:49  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 11:04:49  [ JavaFX Application Thread:client.model.Client:1452 ] - [ INFO ]  {"messageType":"SelectedCard","messageBody":{"card":"MoveII","register":2}}
2021-07-26 11:04:49  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"SelectedCard","messageBody":{"card":"MoveII","register":2}}
2021-07-26 11:04:49  [ Thread-0:protocol.ExecuteOrder:244 ] - [ INFO ]  MoveII
2021-07-26 11:04:49  [ Thread-0:server.network.Server:490 ] - [ INFO ]  server informs card selected
2021-07-26 11:04:49  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:04:49  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:04:49  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":100,"register":2,"filled":true}}Thread-98
2021-07-26 11:04:49  [ JavaFX Application Thread:client.model.Client:1011 ] - [ INFO ]  100 has for register 2true
2021-07-26 11:04:49  [ Thread-0:ai.AILow:352 ] - [ INFO ]  100 has for register 2true
2021-07-26 11:04:49  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":100,"register":2,"filled":true}}Thread-0
2021-07-26 11:04:52  [ JavaFX Application Thread:client.model.Client:1452 ] - [ INFO ]  {"messageType":"SelectedCard","messageBody":{"card":"MoveII","register":3}}
2021-07-26 11:04:52  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"SelectedCard","messageBody":{"card":"MoveII","register":3}}
2021-07-26 11:04:52  [ Thread-0:protocol.ExecuteOrder:244 ] - [ INFO ]  MoveII
2021-07-26 11:04:52  [ Thread-0:server.network.Server:490 ] - [ INFO ]  server informs card selected
2021-07-26 11:04:52  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:04:52  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":100,"register":3,"filled":true}}Thread-98
2021-07-26 11:04:52  [ JavaFX Application Thread:client.model.Client:1011 ] - [ INFO ]  100 has for register 3true
2021-07-26 11:04:52  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:04:52  [ Thread-0:ai.AILow:352 ] - [ INFO ]  100 has for register 3true
2021-07-26 11:04:52  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":100,"register":3,"filled":true}}Thread-0
2021-07-26 11:04:53  [ JavaFX Application Thread:client.model.Client:1452 ] - [ INFO ]  {"messageType":"SelectedCard","messageBody":{"card":"TurnLeft","register":4}}
2021-07-26 11:04:53  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"SelectedCard","messageBody":{"card":"TurnLeft","register":4}}
2021-07-26 11:04:53  [ Thread-0:protocol.ExecuteOrder:244 ] - [ INFO ]  TurnLeft
2021-07-26 11:04:53  [ Thread-0:server.network.Server:490 ] - [ INFO ]  server informs card selected
2021-07-26 11:04:53  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:04:53  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:04:53  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":100,"register":4,"filled":true}}Thread-98
2021-07-26 11:04:53  [ Thread-0:ai.AILow:352 ] - [ INFO ]  100 has for register 4true
2021-07-26 11:04:53  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":100,"register":4,"filled":true}}Thread-0
2021-07-26 11:04:53  [ JavaFX Application Thread:client.model.Client:1011 ] - [ INFO ]  100 has for register 4true
2021-07-26 11:04:53  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-26 11:04:53  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-26 11:04:53  [ Thread-5:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-26 11:04:53  [ Thread-98:client.model.Client:708 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-98
2021-07-26 11:04:53  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 11:04:53  [ Thread-98:client.model.Client:709 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-26 11:04:53  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-26 11:04:53  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-26 11:04:53  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 11:04:53  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 11:04:53  [ Thread-3:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 11:04:53  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:04:53  [ Thread-1:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 11:04:53  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 11:04:53  [ Thread-1:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 11:04:53  [ Thread-1:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 11:04:53  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-26 11:04:54  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 11:04:54  [ JavaFX Application Thread:client.model.Client:1452 ] - [ INFO ]  {"messageType":"SelectedCard","messageBody":{"card":"MoveI","register":5}}
2021-07-26 11:04:54  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"SelectedCard","messageBody":{"card":"MoveI","register":5}}
2021-07-26 11:04:54  [ Thread-0:protocol.ExecuteOrder:244 ] - [ INFO ]  MoveI
2021-07-26 11:04:54  [ Thread-0:server.network.Server:490 ] - [ INFO ]  server informs card selected
2021-07-26 11:04:54  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:04:54  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":100,"register":5,"filled":true}}Thread-98
2021-07-26 11:04:54  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:04:54  [ JavaFX Application Thread:client.model.Client:1011 ] - [ INFO ]  100 has for register 5true
2021-07-26 11:04:54  [ Thread-0:ai.AILow:352 ] - [ INFO ]  100 has for register 5true
2021-07-26 11:04:54  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":100,"register":5,"filled":true}}Thread-0
2021-07-26 11:04:56  [ JavaFX Application Thread:client.model.Client:1474 ] - [ INFO ]  {"messageType":"SelectionFinished","messageBody":{"clientID":100}}
2021-07-26 11:04:56  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"SelectionFinished","messageBody":{"clientID":100}}
2021-07-26 11:04:56  [ Thread-0:protocol.ExecuteOrder:255 ] - [ INFO ]  executeOrder: selectionFinished : [33, 100]
2021-07-26 11:04:56  [ Thread-0:server.game.Game:408 ] - [ INFO ]  game stops timer
2021-07-26 11:04:56  [ Thread-0:protocol.ExecuteOrder:268 ] - [ INFO ]  executeOrder all clients finished programming in time
2021-07-26 11:04:56  [ Thread-0:server.network.Server:359 ] - [ INFO ]  server sends phase info
2021-07-26 11:04:56  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:04:56  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:04:56  [ Thread-0:server.network.Server:572 ] - [ INFO ]  Server checked registerPointer 0
2021-07-26 11:04:56  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"ActivePhase","messageBody":{"phase":3}}Thread-98
2021-07-26 11:04:56  [ Thread-0:server.network.Server:576 ] - [ INFO ]  server inform cards of current register
2021-07-26 11:04:56  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:04:56  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CurrentCards","messageBody":{"currentRegistersAllClients":[{"clientID":33,"cardName":"BackUp"},{"clientID":100,"cardName":"MoveII"}]}}Thread-98
2021-07-26 11:04:56  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"ActivePhase","messageBody":{"phase":3}}Thread-0
2021-07-26 11:04:56  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:04:56  [ Thread-0:server.network.Server:372 ] - [ INFO ]  server informs current player id
2021-07-26 11:04:56  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:04:56  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-98
2021-07-26 11:04:56  [ Thread-0:ai.AILow:373 ] - [ INFO ]  33 has for current register: BackUp
2021-07-26 11:04:56  [ Thread-0:ai.AILow:373 ] - [ INFO ]  100 has for current register: MoveII
2021-07-26 11:04:56  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"CurrentCards","messageBody":{"currentRegistersAllClients":[{"clientID":33,"cardName":"BackUp"},{"clientID":100,"cardName":"MoveII"}]}}Thread-0
2021-07-26 11:04:56  [ JavaFX Application Thread:client.model.Client:1042 ] - [ INFO ]  33 has for current register: BackUp
2021-07-26 11:04:56  [ JavaFX Application Thread:client.model.Client:1042 ] - [ INFO ]  100 has for current register: MoveII
2021-07-26 11:04:56  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:04:56  [ Thread-0:ai.AILow:755 ] - [ INFO ]  {"messageType":"PlayCard","messageBody":{"card":"BackUp"}}
2021-07-26 11:04:56  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-0
2021-07-26 11:04:56  [ Thread-1:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"PlayCard","messageBody":{"card":"BackUp"}}
2021-07-26 11:04:56  [ Thread-1:protocol.ExecuteOrder:284 ] - [ INFO ]  executeOrder playCard
2021-07-26 11:04:56  [ Thread-1:server.network.Server:590 ] - [ INFO ]  server informs who played which card
2021-07-26 11:04:56  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:04:56  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:04:56  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":33,"card":"BackUp"}}Thread-98
2021-07-26 11:04:56  [ Thread-1:server.game.Game:864 ] - [ INFO ]  Game checks wall on board for move
2021-07-26 11:04:56  [ Thread-1:server.game.Game:864 ] - [ INFO ]  Game checks wall on board for move
2021-07-26 11:04:56  [ JavaFX Application Thread:client.model.Client:1049 ] - [ INFO ]  client 33 has played BackUp
2021-07-26 11:04:56  [ Thread-1:server.network.Server:634 ] - [ INFO ]  server informs positions
2021-07-26 11:04:56  [ Thread-1:server.network.Server:635 ] - [ INFO ]  {"messageType":"Movement","messageBody":{"clientID":33,"x":1,"y":9}}
2021-07-26 11:04:56  [ Thread-0:ai.AILow:380 ] - [ INFO ]  client 33 has played BackUp
2021-07-26 11:04:56  [ Thread-1:protocol.ExecuteOrder:320 ] - [ INFO ]  not damage card played [100]
2021-07-26 11:04:56  [ Thread-1:server.game.Game:732 ] - [ INFO ]  Game checks turn over
2021-07-26 11:04:56  [ Thread-1:server.network.Server:372 ] - [ INFO ]  server informs current player id
2021-07-26 11:04:56  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:04:56  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":33,"card":"BackUp"}}Thread-0
2021-07-26 11:04:56  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":33,"x":1,"y":9}}Thread-98
2021-07-26 11:04:56  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:04:56  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:04:56  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":100}}Thread-98
2021-07-26 11:04:56  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":33,"x":1,"y":9}}Thread-0
2021-07-26 11:04:56  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:04:56  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":100}}Thread-0
2021-07-26 11:04:57  [ JavaFX Application Thread:client.model.Client:1489 ] - [ INFO ]  {"messageType":"PlayCard","messageBody":{"card":"MoveII"}}
2021-07-26 11:04:57  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"PlayCard","messageBody":{"card":"MoveII"}}
2021-07-26 11:04:57  [ Thread-0:protocol.ExecuteOrder:284 ] - [ INFO ]  executeOrder playCard
2021-07-26 11:04:57  [ Thread-0:server.network.Server:590 ] - [ INFO ]  server informs who played which card
2021-07-26 11:04:57  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:04:57  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:04:57  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":100,"card":"MoveII"}}Thread-98
2021-07-26 11:04:57  [ Thread-0:server.game.Game:864 ] - [ INFO ]  Game checks wall on board for move
2021-07-26 11:04:57  [ Thread-0:server.game.Game:864 ] - [ INFO ]  Game checks wall on board for move
2021-07-26 11:04:57  [ Thread-0:server.game.Game:864 ] - [ INFO ]  Game checks wall on board for move
2021-07-26 11:04:57  [ Thread-0:server.network.Server:634 ] - [ INFO ]  server informs positions
2021-07-26 11:04:57  [ Thread-0:server.network.Server:635 ] - [ INFO ]  {"messageType":"Movement","messageBody":{"clientID":100,"x":8,"y":4}}
2021-07-26 11:04:57  [ JavaFX Application Thread:client.model.Client:1049 ] - [ INFO ]  client 100 has played MoveII
2021-07-26 11:04:57  [ Thread-0:protocol.ExecuteOrder:320 ] - [ INFO ]  not damage card played []
2021-07-26 11:04:57  [ Thread-0:ai.AILow:380 ] - [ INFO ]  client 100 has played MoveII
2021-07-26 11:04:57  [ Thread-0:server.game.Game:732 ] - [ INFO ]  Game checks turn over
2021-07-26 11:04:57  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":100,"card":"MoveII"}}Thread-0
2021-07-26 11:04:57  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:04:57  [ Thread-0:server.network.Server:721 ] - [ INFO ]  server informs energy got.
2021-07-26 11:04:57  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:04:57  [ Thread-0:protocol.ExecuteOrder:326 ] - [ INFO ]  ExecuteOrder: turn is over!
2021-07-26 11:04:57  [ Thread-0:server.game.Game:797 ] - [ INFO ]  Game checks round over1
2021-07-26 11:04:57  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":100,"x":8,"y":4}}Thread-98
2021-07-26 11:04:57  [ Thread-0:server.network.Server:372 ] - [ INFO ]  server informs current player id
2021-07-26 11:04:57  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":100,"x":8,"y":4}}Thread-0
2021-07-26 11:04:57  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:04:57  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:04:57  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Energy","messageBody":{"clientID":100,"count":1,"source":"EnergySpace"}}Thread-0
2021-07-26 11:04:57  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:04:57  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"Energy","messageBody":{"clientID":100,"count":1,"source":"EnergySpace"}}Thread-98
2021-07-26 11:04:57  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:04:57  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-98
2021-07-26 11:04:57  [ Thread-0:ai.AILow:755 ] - [ INFO ]  {"messageType":"PlayCard","messageBody":{"card":"TurnRight"}}
2021-07-26 11:04:57  [ Thread-1:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"PlayCard","messageBody":{"card":"TurnRight"}}
2021-07-26 11:04:57  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-0
2021-07-26 11:04:57  [ Thread-1:protocol.ExecuteOrder:284 ] - [ INFO ]  executeOrder playCard
2021-07-26 11:04:57  [ Thread-1:server.network.Server:590 ] - [ INFO ]  server informs who played which card
2021-07-26 11:04:57  [ Thread-1:server.network.Server:649 ] - [ INFO ]  server informs turnDirection
2021-07-26 11:04:57  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:04:57  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:04:57  [ Thread-1:protocol.ExecuteOrder:320 ] - [ INFO ]  not damage card played [100]
2021-07-26 11:04:57  [ Thread-1:server.game.Game:732 ] - [ INFO ]  Game checks turn over
2021-07-26 11:04:57  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":33,"card":"TurnRight"}}Thread-98
2021-07-26 11:04:57  [ JavaFX Application Thread:client.model.Client:1049 ] - [ INFO ]  client 33 has played TurnRight
2021-07-26 11:04:57  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:04:57  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"PlayerTurning","messageBody":{"clientID":33,"rotation":"clockwise"}}Thread-98
2021-07-26 11:04:57  [ Thread-1:server.network.Server:372 ] - [ INFO ]  server informs current player id
2021-07-26 11:04:57  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:04:57  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":100}}Thread-98
2021-07-26 11:04:57  [ Thread-0:ai.AILow:380 ] - [ INFO ]  client 33 has played TurnRight
2021-07-26 11:04:57  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":33,"card":"TurnRight"}}Thread-0
2021-07-26 11:04:57  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:04:57  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"PlayerTurning","messageBody":{"clientID":33,"rotation":"clockwise"}}Thread-0
2021-07-26 11:04:57  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:04:57  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":100}}Thread-0
2021-07-26 11:04:57  [ JavaFX Application Thread:client.model.Client:1489 ] - [ INFO ]  {"messageType":"PlayCard","messageBody":{"card":"MoveII"}}
2021-07-26 11:04:57  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"PlayCard","messageBody":{"card":"MoveII"}}
2021-07-26 11:04:57  [ Thread-0:protocol.ExecuteOrder:284 ] - [ INFO ]  executeOrder playCard
2021-07-26 11:04:57  [ Thread-0:server.network.Server:590 ] - [ INFO ]  server informs who played which card
2021-07-26 11:04:57  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:04:57  [ Thread-0:server.game.Game:864 ] - [ INFO ]  Game checks wall on board for move
2021-07-26 11:04:57  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:04:57  [ Thread-0:server.game.Game:864 ] - [ INFO ]  Game checks wall on board for move
2021-07-26 11:04:57  [ Thread-0:server.game.Game:864 ] - [ INFO ]  Game checks wall on board for move
2021-07-26 11:04:57  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":100,"card":"MoveII"}}Thread-98
2021-07-26 11:04:57  [ Thread-0:server.network.Server:634 ] - [ INFO ]  server informs positions
2021-07-26 11:04:57  [ Thread-0:server.network.Server:635 ] - [ INFO ]  {"messageType":"Movement","messageBody":{"clientID":100,"x":10,"y":4}}
2021-07-26 11:04:57  [ JavaFX Application Thread:client.model.Client:1049 ] - [ INFO ]  client 100 has played MoveII
2021-07-26 11:04:57  [ Thread-0:protocol.ExecuteOrder:320 ] - [ INFO ]  not damage card played []
2021-07-26 11:04:57  [ Thread-0:server.game.Game:732 ] - [ INFO ]  Game checks turn over
2021-07-26 11:04:57  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:04:57  [ Thread-0:protocol.ExecuteOrder:326 ] - [ INFO ]  ExecuteOrder: turn is over!
2021-07-26 11:04:57  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":100,"x":10,"y":4}}Thread-98
2021-07-26 11:04:57  [ Thread-0:ai.AILow:380 ] - [ INFO ]  client 100 has played MoveII
2021-07-26 11:04:57  [ Thread-0:server.game.Game:797 ] - [ INFO ]  Game checks round over2
2021-07-26 11:04:57  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":100,"card":"MoveII"}}Thread-0
2021-07-26 11:04:57  [ Thread-0:server.network.Server:372 ] - [ INFO ]  server informs current player id
2021-07-26 11:04:57  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:04:57  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-98
2021-07-26 11:04:57  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:04:57  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":100,"x":10,"y":4}}Thread-0
2021-07-26 11:04:57  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:04:57  [ Thread-0:ai.AILow:755 ] - [ INFO ]  {"messageType":"PlayCard","messageBody":{"card":"Again"}}
2021-07-26 11:04:57  [ Thread-1:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"PlayCard","messageBody":{"card":"Again"}}
2021-07-26 11:04:57  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-0
2021-07-26 11:04:57  [ Thread-1:protocol.ExecuteOrder:284 ] - [ INFO ]  executeOrder playCard
2021-07-26 11:04:57  [ Thread-1:server.network.Server:590 ] - [ INFO ]  server informs who played which card
2021-07-26 11:04:57  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:04:57  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":33,"card":"Again"}}Thread-98
2021-07-26 11:04:57  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:04:57  [ JavaFX Application Thread:client.model.Client:1049 ] - [ INFO ]  client 33 has played Again
2021-07-26 11:04:57  [ Thread-1:server.network.Server:649 ] - [ INFO ]  server informs turnDirection
2021-07-26 11:04:57  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:04:57  [ Thread-1:protocol.ExecuteOrder:320 ] - [ INFO ]  not damage card played [100]
2021-07-26 11:04:57  [ Thread-1:server.game.Game:732 ] - [ INFO ]  Game checks turn over
2021-07-26 11:04:57  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"PlayerTurning","messageBody":{"clientID":33,"rotation":"clockwise"}}Thread-98
2021-07-26 11:04:57  [ Thread-1:server.network.Server:372 ] - [ INFO ]  server informs current player id
2021-07-26 11:04:57  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:04:57  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":100}}Thread-98
2021-07-26 11:04:57  [ Thread-0:ai.AILow:380 ] - [ INFO ]  client 33 has played Again
2021-07-26 11:04:57  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":33,"card":"Again"}}Thread-0
2021-07-26 11:04:57  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:04:57  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"PlayerTurning","messageBody":{"clientID":33,"rotation":"clockwise"}}Thread-0
2021-07-26 11:04:57  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:04:57  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":100}}Thread-0
2021-07-26 11:04:58  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-26 11:04:58  [ JavaFX Application Thread:client.model.Client:1489 ] - [ INFO ]  {"messageType":"PlayCard","messageBody":{"card":"MoveII"}}
2021-07-26 11:04:58  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"PlayCard","messageBody":{"card":"MoveII"}}
2021-07-26 11:04:58  [ Thread-0:protocol.ExecuteOrder:284 ] - [ INFO ]  executeOrder playCard
2021-07-26 11:04:58  [ Thread-0:server.network.Server:590 ] - [ INFO ]  server informs who played which card
2021-07-26 11:04:58  [ Thread-0:server.game.Game:864 ] - [ INFO ]  Game checks wall on board for move
2021-07-26 11:04:58  [ Thread-0:server.game.Game:864 ] - [ INFO ]  Game checks wall on board for move
2021-07-26 11:04:58  [ Thread-0:server.game.Game:864 ] - [ INFO ]  Game checks wall on board for move
2021-07-26 11:04:58  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:04:58  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:04:58  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":100,"card":"MoveII"}}Thread-98
2021-07-26 11:04:58  [ Thread-0:server.network.Server:634 ] - [ INFO ]  server informs positions
2021-07-26 11:04:58  [ Thread-0:server.network.Server:635 ] - [ INFO ]  {"messageType":"Movement","messageBody":{"clientID":100,"x":12,"y":4}}
2021-07-26 11:04:58  [ JavaFX Application Thread:client.model.Client:1049 ] - [ INFO ]  client 100 has played MoveII
2021-07-26 11:04:58  [ Thread-0:ai.AILow:380 ] - [ INFO ]  client 100 has played MoveII
2021-07-26 11:04:58  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":100,"card":"MoveII"}}Thread-0
2021-07-26 11:04:58  [ Thread-0:protocol.ExecuteOrder:320 ] - [ INFO ]  not damage card played []
2021-07-26 11:04:58  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:04:58  [ Thread-0:server.game.Game:732 ] - [ INFO ]  Game checks turn over
2021-07-26 11:04:58  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:04:58  [ Thread-0:protocol.ExecuteOrder:326 ] - [ INFO ]  ExecuteOrder: turn is over!
2021-07-26 11:04:58  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":100,"x":12,"y":4}}Thread-98
2021-07-26 11:04:58  [ Thread-0:server.game.Game:797 ] - [ INFO ]  Game checks round over3
2021-07-26 11:04:58  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":100,"x":12,"y":4}}Thread-0
2021-07-26 11:04:58  [ Thread-0:server.network.Server:372 ] - [ INFO ]  server informs current player id
2021-07-26 11:04:58  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:04:58  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:04:58  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-98
2021-07-26 11:04:58  [ Thread-0:ai.AILow:755 ] - [ INFO ]  {"messageType":"PlayCard","messageBody":{"card":"Again"}}
2021-07-26 11:04:58  [ Thread-1:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"PlayCard","messageBody":{"card":"Again"}}
2021-07-26 11:04:58  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-0
2021-07-26 11:04:58  [ Thread-1:protocol.ExecuteOrder:284 ] - [ INFO ]  executeOrder playCard
2021-07-26 11:04:58  [ Thread-1:server.network.Server:590 ] - [ INFO ]  server informs who played which card
2021-07-26 11:04:58  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:04:58  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":33,"card":"Again"}}Thread-98
2021-07-26 11:04:58  [ JavaFX Application Thread:client.model.Client:1049 ] - [ INFO ]  client 33 has played Again
2021-07-26 11:04:58  [ Thread-1:server.network.Server:649 ] - [ INFO ]  server informs turnDirection
2021-07-26 11:04:58  [ Thread-1:protocol.ExecuteOrder:320 ] - [ INFO ]  not damage card played [100]
2021-07-26 11:04:58  [ Thread-1:server.game.Game:732 ] - [ INFO ]  Game checks turn over
2021-07-26 11:04:58  [ Thread-1:server.network.Server:372 ] - [ INFO ]  server informs current player id
2021-07-26 11:04:58  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:04:58  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:04:58  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"PlayerTurning","messageBody":{"clientID":33,"rotation":"clockwise"}}Thread-98
2021-07-26 11:04:58  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:04:58  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":100}}Thread-98
2021-07-26 11:04:58  [ Thread-0:ai.AILow:380 ] - [ INFO ]  client 33 has played Again
2021-07-26 11:04:58  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":33,"card":"Again"}}Thread-0
2021-07-26 11:04:58  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:04:58  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"PlayerTurning","messageBody":{"clientID":33,"rotation":"clockwise"}}Thread-0
2021-07-26 11:04:58  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:04:58  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":100}}Thread-0
2021-07-26 11:04:59  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 11:04:59  [ JavaFX Application Thread:client.model.Client:1489 ] - [ INFO ]  {"messageType":"PlayCard","messageBody":{"card":"TurnLeft"}}
2021-07-26 11:04:59  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"PlayCard","messageBody":{"card":"TurnLeft"}}
2021-07-26 11:04:59  [ Thread-0:protocol.ExecuteOrder:284 ] - [ INFO ]  executeOrder playCard
2021-07-26 11:04:59  [ Thread-0:server.network.Server:590 ] - [ INFO ]  server informs who played which card
2021-07-26 11:04:59  [ Thread-0:server.network.Server:649 ] - [ INFO ]  server informs turnDirection
2021-07-26 11:04:59  [ Thread-0:protocol.ExecuteOrder:320 ] - [ INFO ]  not damage card played []
2021-07-26 11:04:59  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:04:59  [ Thread-0:server.game.Game:732 ] - [ INFO ]  Game checks turn over
2021-07-26 11:04:59  [ Thread-0:protocol.ExecuteOrder:326 ] - [ INFO ]  ExecuteOrder: turn is over!
2021-07-26 11:04:59  [ Thread-0:server.game.Game:797 ] - [ INFO ]  Game checks round over4
2021-07-26 11:04:59  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:04:59  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":100,"card":"TurnLeft"}}Thread-98
2021-07-26 11:04:59  [ JavaFX Application Thread:client.model.Client:1049 ] - [ INFO ]  client 100 has played TurnLeft
2021-07-26 11:04:59  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:04:59  [ Thread-0:server.network.Server:372 ] - [ INFO ]  server informs current player id
2021-07-26 11:04:59  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"PlayerTurning","messageBody":{"clientID":100,"rotation":"counterclockwise"}}Thread-98
2021-07-26 11:04:59  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:04:59  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-98
2021-07-26 11:04:59  [ Thread-0:ai.AILow:380 ] - [ INFO ]  client 100 has played TurnLeft
2021-07-26 11:04:59  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":100,"card":"TurnLeft"}}Thread-0
2021-07-26 11:04:59  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:04:59  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"PlayerTurning","messageBody":{"clientID":100,"rotation":"counterclockwise"}}Thread-0
2021-07-26 11:04:59  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:04:59  [ Thread-0:ai.AILow:755 ] - [ INFO ]  {"messageType":"PlayCard","messageBody":{"card":"MoveII"}}
2021-07-26 11:04:59  [ Thread-1:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"PlayCard","messageBody":{"card":"MoveII"}}
2021-07-26 11:04:59  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-0
2021-07-26 11:04:59  [ Thread-1:protocol.ExecuteOrder:284 ] - [ INFO ]  executeOrder playCard
2021-07-26 11:04:59  [ Thread-1:server.network.Server:590 ] - [ INFO ]  server informs who played which card
2021-07-26 11:04:59  [ Thread-1:server.game.Game:864 ] - [ INFO ]  Game checks wall on board for move
2021-07-26 11:04:59  [ Thread-1:server.game.Game:864 ] - [ INFO ]  Game checks wall on board for move
2021-07-26 11:04:59  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:04:59  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:04:59  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":33,"card":"MoveII"}}Thread-98
2021-07-26 11:04:59  [ Thread-1:server.network.Server:664 ] - [ INFO ]  server informs drawn damage cards
2021-07-26 11:04:59  [ JavaFX Application Thread:client.model.Client:1049 ] - [ INFO ]  client 33 has played MoveII
2021-07-26 11:04:59  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:04:59  [ Thread-1:server.network.Server:603 ] - [ INFO ]  server informs reboot client
2021-07-26 11:04:59  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"DrawDamage","messageBody":{"clientID":33,"cards":["Spam"]}}Thread-98
2021-07-26 11:04:59  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:04:59  [ Thread-1:server.network.Server:634 ] - [ INFO ]  server informs positions
2021-07-26 11:04:59  [ Thread-1:server.network.Server:635 ] - [ INFO ]  {"messageType":"Movement","messageBody":{"clientID":33,"x":1,"y":8}}
2021-07-26 11:04:59  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"Reboot","messageBody":{"clientID":33}}Thread-98
2021-07-26 11:04:59  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:04:59  [ JavaFX Application Thread:client.model.Client:1065 ] - [ INFO ]  client reboot to start point
2021-07-26 11:04:59  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":33,"x":1,"y":8}}Thread-98
2021-07-26 11:04:59  [ Thread-1:server.network.Server:649 ] - [ INFO ]  server informs turnDirection
2021-07-26 11:04:59  [ Thread-1:protocol.ExecuteOrder:320 ] - [ INFO ]  not damage card played [100]
2021-07-26 11:04:59  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:04:59  [ Thread-1:server.game.Game:732 ] - [ INFO ]  Game checks turn over
2021-07-26 11:04:59  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"PlayerTurning","messageBody":{"clientID":33,"rotation":"clockwise"}}Thread-98
2021-07-26 11:04:59  [ Thread-1:server.network.Server:372 ] - [ INFO ]  server informs current player id
2021-07-26 11:04:59  [ Thread-0:ai.AILow:380 ] - [ INFO ]  client 33 has played MoveII
2021-07-26 11:04:59  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":33,"card":"MoveII"}}Thread-0
2021-07-26 11:04:59  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:04:59  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":100}}Thread-98
2021-07-26 11:04:59  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:04:59  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"DrawDamage","messageBody":{"clientID":33,"cards":["Spam"]}}Thread-0
2021-07-26 11:04:59  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:04:59  [ Thread-0:ai.AILow:394 ] - [ INFO ]  client reboot to start point
2021-07-26 11:04:59  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Reboot","messageBody":{"clientID":33}}Thread-0
2021-07-26 11:04:59  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:04:59  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":33,"x":1,"y":8}}Thread-0
2021-07-26 11:04:59  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:04:59  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"PlayerTurning","messageBody":{"clientID":33,"rotation":"clockwise"}}Thread-0
2021-07-26 11:04:59  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:04:59  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":100}}Thread-0
2021-07-26 11:04:59  [ JavaFX Application Thread:client.model.Client:1489 ] - [ INFO ]  {"messageType":"PlayCard","messageBody":{"card":"MoveI"}}
2021-07-26 11:04:59  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"PlayCard","messageBody":{"card":"MoveI"}}
2021-07-26 11:04:59  [ Thread-0:protocol.ExecuteOrder:284 ] - [ INFO ]  executeOrder playCard
2021-07-26 11:04:59  [ Thread-0:server.network.Server:590 ] - [ INFO ]  server informs who played which card
2021-07-26 11:04:59  [ Thread-0:server.game.Game:864 ] - [ INFO ]  Game checks wall on board for move
2021-07-26 11:04:59  [ Thread-0:server.game.Game:864 ] - [ INFO ]  Game checks wall on board for move
2021-07-26 11:04:59  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:04:59  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:04:59  [ Thread-0:server.network.Server:634 ] - [ INFO ]  server informs positions
2021-07-26 11:04:59  [ Thread-0:server.network.Server:635 ] - [ INFO ]  {"messageType":"Movement","messageBody":{"clientID":100,"x":12,"y":3}}
2021-07-26 11:04:59  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":100,"card":"MoveI"}}Thread-98
2021-07-26 11:04:59  [ JavaFX Application Thread:client.model.Client:1049 ] - [ INFO ]  client 100 has played MoveI
2021-07-26 11:04:59  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:04:59  [ Thread-0:protocol.ExecuteOrder:320 ] - [ INFO ]  not damage card played []
2021-07-26 11:04:59  [ Thread-0:server.game.Game:732 ] - [ INFO ]  Game checks turn over
2021-07-26 11:04:59  [ Thread-0:server.game.Game:843 ] - [ INFO ]  Game checks game over.
2021-07-26 11:04:59  [ Thread-0:server.game.Game:847 ] - [ INFO ]  print how many checkpoints: 1
2021-07-26 11:04:59  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":100,"x":12,"y":3}}Thread-98
2021-07-26 11:04:59  [ Thread-0:server.network.Server:618 ] - [ INFO ]  server informs game finished
2021-07-26 11:04:59  [ Thread-0:protocol.ExecuteOrder:326 ] - [ INFO ]  ExecuteOrder: turn is over!
2021-07-26 11:04:59  [ Thread-0:server.game.Game:797 ] - [ INFO ]  Game checks round over5
2021-07-26 11:04:59  [ Thread-0:protocol.ExecuteOrder:331 ] - [ INFO ]  ExecuteOrder: round is over!
2021-07-26 11:04:59  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:04:59  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"GameFinished","messageBody":{"clientID":100}}Thread-98
2021-07-26 11:04:59  [ Thread-0:ai.AILow:380 ] - [ INFO ]  client 100 has played MoveI
2021-07-26 11:04:59  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":100,"card":"MoveI"}}Thread-0
2021-07-26 11:04:59  [ Thread-0:server.network.Server:752 ] - [ INFO ]  server informs Refill upgrade shop.
2021-07-26 11:04:59  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:04:59  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:04:59  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"RefillShop","messageBody":{"cards":["AdminPrivilege","SpamBlocker"]}}Thread-98
2021-07-26 11:04:59  [ Thread-0:server.network.Server:372 ] - [ INFO ]  server informs current player id
2021-07-26 11:04:59  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:04:59  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":100,"x":12,"y":3}}Thread-0
2021-07-26 11:04:59  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-98
2021-07-26 11:04:59  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:04:59  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"GameFinished","messageBody":{"clientID":100}}Thread-0
2021-07-26 11:04:59  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:04:59  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"RefillShop","messageBody":{"cards":["AdminPrivilege","SpamBlocker"]}}Thread-0
2021-07-26 11:04:59  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:04:59  [ Thread-0:ai.AILow:755 ] - [ INFO ]  {"messageType":"PlayCard","messageBody":{"card":""}}
2021-07-26 11:04:59  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-0
2021-07-26 11:04:59  [ Thread-1:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"PlayCard","messageBody":{"card":""}}
2021-07-26 11:04:59  [ Thread-1:protocol.ExecuteOrder:284 ] - [ INFO ]  executeOrder playCard
2021-07-26 11:04:59  [ Thread-1:server.network.Server:590 ] - [ INFO ]  server informs who played which card
2021-07-26 11:04:59  [ Thread-1:protocol.ExecuteOrder:320 ] - [ INFO ]  not damage card played []
2021-07-26 11:04:59  [ Thread-1:server.game.Game:732 ] - [ INFO ]  Game checks turn over
2021-07-26 11:04:59  [ Thread-1:server.game.Game:843 ] - [ INFO ]  Game checks game over.
2021-07-26 11:04:59  [ Thread-1:server.game.Game:847 ] - [ INFO ]  print how many checkpoints: 1
2021-07-26 11:04:59  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:04:59  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:04:59  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":33,"card":""}}Thread-98
2021-07-26 11:04:59  [ Thread-0:ai.AILow:380 ] - [ INFO ]  client 33 has played 
2021-07-26 11:04:59  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":33,"card":""}}Thread-0
2021-07-26 11:04:59  [ Thread-1:server.network.Server:618 ] - [ INFO ]  server informs game finished
2021-07-26 11:04:59  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:04:59  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"GameFinished","messageBody":{"clientID":100}}Thread-0
2021-07-26 11:05:00  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:05:00  [ Thread-1:protocol.ExecuteOrder:326 ] - [ INFO ]  ExecuteOrder: turn is over!
2021-07-26 11:05:00  [ Thread-1:server.game.Game:797 ] - [ INFO ]  Game checks round over1
2021-07-26 11:05:00  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"GameFinished","messageBody":{"clientID":100}}Thread-98
2021-07-26 11:05:00  [ Thread-1:server.network.Server:372 ] - [ INFO ]  server informs current player id
2021-07-26 11:05:00  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:05:00  [ Thread-0:ai.AILow:755 ] - [ INFO ]  {"messageType":"PlayCard","messageBody":{"card":""}}
2021-07-26 11:05:00  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-0
2021-07-26 11:05:00  [ Thread-1:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"PlayCard","messageBody":{"card":""}}
2021-07-26 11:05:00  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:05:00  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-98
2021-07-26 11:05:00  [ Thread-1:protocol.ExecuteOrder:284 ] - [ INFO ]  executeOrder playCard
2021-07-26 11:05:00  [ Thread-1:server.network.Server:590 ] - [ INFO ]  server informs who played which card
2021-07-26 11:05:00  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:05:00  [ Thread-0:ai.AILow:380 ] - [ INFO ]  client 33 has played 
2021-07-26 11:05:00  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":33,"card":""}}Thread-0
2021-07-26 11:05:00  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:05:00  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":33,"card":""}}Thread-98
2021-07-26 11:05:00  [ Thread-1:protocol.ExecuteOrder:320 ] - [ INFO ]  not damage card played [100]
2021-07-26 11:05:00  [ Thread-1:server.game.Game:732 ] - [ INFO ]  Game checks turn over
2021-07-26 11:05:00  [ Thread-1:server.network.Server:372 ] - [ INFO ]  server informs current player id
2021-07-26 11:05:00  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:05:00  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":100}}Thread-0
2021-07-26 11:05:00  [ Thread-98:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-98
2021-07-26 11:05:00  [ Thread-98:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":100}}Thread-98
2021-07-26 11:05:00  [ JavaFX Application Thread:client.model.Client:1049 ] - [ INFO ]  client 33 has played 
2021-07-26 11:05:00  [ JavaFX Application Thread:client.model.Client:1049 ] - [ INFO ]  client 33 has played 
2021-07-26 11:05:03  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-26 11:05:03  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-26 11:05:03  [ Thread-5:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-26 11:05:03  [ Thread-98:client.model.Client:708 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-98
2021-07-26 11:05:03  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 11:05:03  [ Thread-98:client.model.Client:709 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-26 11:05:03  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-26 11:05:03  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-26 11:05:03  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 11:05:03  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 11:05:03  [ Thread-3:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 11:05:03  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 11:05:03  [ Thread-1:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 11:05:03  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 11:05:03  [ Thread-1:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 11:05:03  [ Thread-1:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 11:05:03  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-26 11:05:04  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:17:12  [ Thread-0:server.network.ServerThread:66 ] - [ INFO ]  protocol to client: 
{"messageType":"HelloClient","messageBody":{"protocol":"Version 1.0"}}
2021-07-26 12:17:13  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:17:13  [ Thread-0:ai.AILow:193 ] - [ INFO ]  protocol from Server: 
{"messageType":"HelloServer","messageBody":{"group":"CC","protocol":"Version 1.0","isAI":true}}
2021-07-26 12:17:13  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"HelloClient","messageBody":{"protocol":"Version 1.0"}}Thread-0
2021-07-26 12:17:13  [ Thread-0:server.network.ServerThread:108 ] - [ INFO ]  welcome info printed
2021-07-26 12:17:13  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:17:13  [ Thread-0:ai.AILow:199 ] - [ INFO ]  {"messageType":"Welcome","messageBody":{"clientID":33}}Thread-0
2021-07-26 12:17:13  [ Thread-0:ai.AILow:533 ] - [ INFO ]  {"messageType":"PlayerValues","messageBody":{"name":"AI","figure":1}}
2021-07-26 12:17:13  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"PlayerValues","messageBody":{"name":"AI","figure":1}}
2021-07-26 12:17:13  [ Thread-0:protocol.ExecuteOrder:72 ] - [ INFO ]  check player figures
2021-07-26 12:17:13  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Welcome","messageBody":{"clientID":33}}Thread-0
2021-07-26 12:17:13  [ Thread-0:protocol.ExecuteOrder:80 ] - [ INFO ]  addPlayer
2021-07-26 12:17:13  [ Thread-0:server.network.Server:247 ] - [ INFO ]  server added player
2021-07-26 12:17:13  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:17:13  [ Thread-0:ai.AILow:212 ] - [ INFO ]  {"messageType":"PlayerAdded","messageBody":{"clientID":33,"name":"AI","figure":1}}Thread-0
2021-07-26 12:17:13  [ Thread-0:ai.AILow:221 ] - [ INFO ]  null: null
2021-07-26 12:17:13  [ Thread-0:ai.AILow:546 ] - [ INFO ]  {"messageType":"SetStatus","messageBody":{"ready":true}}
2021-07-26 12:17:13  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"PlayerAdded","messageBody":{"clientID":33,"name":"AI","figure":1}}Thread-0
2021-07-26 12:17:13  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"SetStatus","messageBody":{"ready":true}}
2021-07-26 12:17:13  [ Thread-0:protocol.ExecuteOrder:116 ] - [ INFO ]  set Status in ExecuteOrder
2021-07-26 12:17:13  [ Thread-0:server.network.Server:279 ] - [ INFO ]  server inform player status
2021-07-26 12:17:13  [ Thread-0:protocol.ExecuteOrder:536 ] - [ INFO ]  number of ready clients: 1
2021-07-26 12:17:13  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:17:13  [ Thread-0:ai.AILow:234 ] - [ INFO ]  {"messageType":"PlayerStatus","messageBody":{"clientID":33,"ready":true}}
2021-07-26 12:17:13  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"PlayerStatus","messageBody":{"clientID":33,"ready":true}}Thread-0
2021-07-26 12:17:13  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:17:13  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:17:13  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:17:14  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:17:14  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:17:13  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:17:18  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:17:23  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:17:23  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:17:23  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:17:23  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:17:23  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:17:23  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:17:23  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:17:24  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:17:24  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:17:28  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:17:33  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:17:33  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:17:33  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:17:33  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:17:34  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:17:34  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:17:34  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:17:34  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:17:34  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:17:38  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:17:44  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:17:44  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:17:44  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:17:44  [ Thread-1:server.network.Connected:73 ] - [ INFO ]  33 in first if print flagconnect: true
2021-07-26 12:17:44  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:17:44  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:17:44  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:17:44  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:17:44  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:17:44  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:17:49  [ Thread-3:server.network.ServerThread:66 ] - [ INFO ]  protocol to client: 
{"messageType":"HelloClient","messageBody":{"protocol":"Version 1.0"}}
2021-07-26 12:17:50  [ Thread-97:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-97
2021-07-26 12:17:50  [ Thread-97:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"HelloClient","messageBody":{"protocol":"Version 1.0"}}Thread-97
2021-07-26 12:17:51  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:17:52  [ JavaFX Application Thread:client.model.Client:735 ] - [ INFO ]  gameOn check in client : false
2021-07-26 12:17:54  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:17:54  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:17:54  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:17:54  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:17:54  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:17:54  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:17:54  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:17:54  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:17:55  [ JavaFX Application Thread:client.model.Client:797 ] - [ INFO ]  protocol from Server: 
{"messageType":"HelloServer","messageBody":{"group":"CC","protocol":"Version 1.0","isAI":false}}
2021-07-26 12:17:56  [ Thread-3:server.network.ServerThread:108 ] - [ INFO ]  welcome info printed
2021-07-26 12:17:56  [ Thread-97:client.model.Client:752 ] - [ INFO ]  by executeOrder Thread-97
2021-07-26 12:17:56  [ Thread-97:client.model.Client:715 ] - [ INFO ]  json from server: {"messageType":"Welcome","messageBody":{"clientID":100}}Thread-97
2021-07-26 12:17:56  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:17:56  [ JavaFX Application Thread:client.model.Client:801 ] - [ INFO ]  {"messageType":"Welcome","messageBody":{"clientID":100}}JavaFX Application Thread
2021-07-26 12:17:56  [ JavaFX Application Thread:client.model.Client:805 ] - [ INFO ]  100
2021-07-26 12:17:56  [ JavaFX Application Thread:client.model.Client:806 ] - [ INFO ]  your clientID is: 100
2021-07-26 12:18:01  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:18:04  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:18:04  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:18:04  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:18:04  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:18:04  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:18:04  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:18:04  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:18:04  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:18:06  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:18:11  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:18:14  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:18:14  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:18:14  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:18:14  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:18:14  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:18:14  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:18:14  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:18:14  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:18:16  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:18:21  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:18:24  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:18:24  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:18:24  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:18:24  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:18:24  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:18:24  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:18:24  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:18:24  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:18:26  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:18:31  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:18:34  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:18:34  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:18:34  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:18:34  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:18:34  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:18:34  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:18:34  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:18:34  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:18:36  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:18:41  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:18:44  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:18:44  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:18:44  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:18:44  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:18:44  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:18:44  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:18:44  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:18:44  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:18:46  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:18:51  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:18:54  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:18:54  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:18:54  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:18:54  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:18:54  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:18:54  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:18:54  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:18:54  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:18:56  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:19:01  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:19:04  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:19:04  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:19:04  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:19:04  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:19:04  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:19:04  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:19:04  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:19:04  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:19:06  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:19:11  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:19:14  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:19:14  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:19:14  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:19:14  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:19:14  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:19:14  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:19:14  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:19:14  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:19:16  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:19:21  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:19:24  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:19:24  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:19:24  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:19:24  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:19:24  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:19:24  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:19:24  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:19:24  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:19:26  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:19:31  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:19:34  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:19:34  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:19:34  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:19:34  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:19:34  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:19:34  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:19:34  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:19:34  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:19:36  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:19:41  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:19:44  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:19:44  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:19:44  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:19:44  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:19:44  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:19:44  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:19:44  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:19:44  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:19:46  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:19:51  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:19:54  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:19:54  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:19:54  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:19:54  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:19:54  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:19:54  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:19:54  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:19:54  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:19:56  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:20:01  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:20:04  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:20:04  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:20:04  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:20:04  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:20:04  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:20:04  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:20:04  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:20:04  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:20:06  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:20:11  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:20:14  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:20:14  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:20:14  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:20:14  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:20:14  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:20:14  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:20:14  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:20:14  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:20:16  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:20:21  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:20:24  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:20:24  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:20:24  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:20:24  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:20:24  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:20:24  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:20:24  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:20:24  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:20:26  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:20:31  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:20:34  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:20:34  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:20:34  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:20:34  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:20:34  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:20:34  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:20:34  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:20:34  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:20:36  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:20:41  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:20:44  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:20:44  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:20:44  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:20:44  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:20:44  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:20:44  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:20:44  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:20:44  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:20:46  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:20:51  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:20:54  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:20:54  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:20:54  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:20:54  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:20:54  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:20:54  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:20:54  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:20:54  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:20:56  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:21:01  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:21:04  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:21:04  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:21:04  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:21:04  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:21:04  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:21:04  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:21:04  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:21:04  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:21:06  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:21:11  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:21:14  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:21:14  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:21:14  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:21:14  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:21:14  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:21:14  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:21:14  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:21:14  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:21:16  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:21:21  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:21:24  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:21:24  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:21:24  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:21:24  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:21:24  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:21:24  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:21:24  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:21:24  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:21:26  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:21:31  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:21:34  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:21:34  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:21:34  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:21:34  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:21:34  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:21:34  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:21:34  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:21:34  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:21:36  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:21:41  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:21:44  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:21:44  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:21:44  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:21:44  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:21:44  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:21:44  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:21:44  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:21:44  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:21:46  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:21:51  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:21:54  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:21:54  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:21:54  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:21:54  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:21:54  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:21:54  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:21:54  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:21:54  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:21:56  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:22:01  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:22:04  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:22:04  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:22:04  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:22:04  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:22:04  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:22:04  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:22:04  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:22:04  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:22:06  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:22:11  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:22:14  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:22:14  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:22:14  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:22:14  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:22:14  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:22:14  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:22:14  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:22:14  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:22:16  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:22:21  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:22:24  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:22:24  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:22:24  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:22:24  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:22:24  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:22:24  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:22:24  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:22:24  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:22:26  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:22:31  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:22:34  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:22:34  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:22:34  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:22:34  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:22:34  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:22:34  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:22:34  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:22:34  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:22:37  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:22:42  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:22:44  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:22:44  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:22:44  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:22:44  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:22:44  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:22:44  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:22:44  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:22:44  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:22:47  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:22:52  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:22:54  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:22:54  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:22:54  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:22:54  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:22:54  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:22:54  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:22:54  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:22:54  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:22:57  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:23:02  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:23:04  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:23:04  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:23:04  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:23:04  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:23:04  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:23:04  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:23:04  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:23:04  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:23:07  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:23:12  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:23:14  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:23:14  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:23:14  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:23:14  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:23:14  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:23:14  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:23:14  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:23:14  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:23:17  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:23:22  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:23:24  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:23:24  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:23:24  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:23:24  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:23:24  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:23:24  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:23:24  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:23:24  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:23:27  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:23:32  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:23:34  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:23:34  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:23:34  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:23:34  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:23:34  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:23:34  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:23:34  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:23:34  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:23:37  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:23:42  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:23:44  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:23:44  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:23:44  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:23:44  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:23:44  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:23:44  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:23:44  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:23:44  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:23:47  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:23:52  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:23:54  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:23:54  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:23:54  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:23:54  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:23:54  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:23:54  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:23:54  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:23:54  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:23:57  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:24:02  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:24:04  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:24:04  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:24:04  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:24:04  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:24:04  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:24:04  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:24:04  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:24:04  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:24:07  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:24:12  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:24:14  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:24:14  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:24:14  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:24:14  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:24:14  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:24:14  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:24:14  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:24:14  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:24:17  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:24:22  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:24:24  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:24:24  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:24:24  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:24:24  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:24:24  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:24:24  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:24:24  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:24:24  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:24:27  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:24:32  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:24:34  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:24:34  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:24:34  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:24:34  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:24:34  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:24:34  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:24:34  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:24:34  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:24:37  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:24:42  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:24:44  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:24:44  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:24:44  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:24:44  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:24:44  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:24:44  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:24:44  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:24:44  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:24:47  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:24:52  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:24:54  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:24:54  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:24:54  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:24:54  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:24:54  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:24:54  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:24:54  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:24:54  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:24:57  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:25:02  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:25:04  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:25:04  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:25:04  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:25:04  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:25:04  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:25:04  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:25:04  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:25:04  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:25:07  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:25:12  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:25:14  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:25:14  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:25:14  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:25:14  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:25:14  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:25:14  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:25:14  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:25:14  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:25:17  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:25:22  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:25:24  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:25:24  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:25:24  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:25:24  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:25:24  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:25:24  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:25:24  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:25:24  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:25:27  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:25:32  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:25:34  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:25:34  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:25:34  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:25:34  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:25:34  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:25:34  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:25:34  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:25:34  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:25:37  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:25:42  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:25:44  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:25:44  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:25:44  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:25:44  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:25:44  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:25:44  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:25:44  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:25:44  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:25:47  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:25:52  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:25:54  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:25:54  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:25:54  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:25:54  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:25:54  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:25:54  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:25:54  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:25:54  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:25:57  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:26:02  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:26:04  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:26:04  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:26:04  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:26:04  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:26:04  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:26:04  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:26:04  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:26:04  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:26:07  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:26:12  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:26:14  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:26:14  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:26:14  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:26:14  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:26:14  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:26:14  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:26:14  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:26:14  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:26:17  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:26:22  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:26:24  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:26:24  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:26:24  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:26:24  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:26:24  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:26:24  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:26:24  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:26:24  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:26:27  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:26:32  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:26:34  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:26:34  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:26:34  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:26:34  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:26:34  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:26:34  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:26:34  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:26:34  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:26:37  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:26:42  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:26:44  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:26:44  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:26:44  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:26:44  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:26:44  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:26:44  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:26:44  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:26:44  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:26:47  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:26:52  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:26:54  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:26:54  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:26:54  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:26:54  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:26:54  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:26:54  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:26:54  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:26:54  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:26:57  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:27:02  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:27:04  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:27:04  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:27:04  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:27:04  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:27:04  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:27:04  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:27:04  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:27:04  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:27:07  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:27:12  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:27:14  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:27:14  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:27:14  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:27:14  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:27:14  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:27:14  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:27:14  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:27:14  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:27:17  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:27:22  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:27:24  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:27:24  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:27:24  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:27:24  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:27:24  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:27:24  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:27:24  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:27:24  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:27:27  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:27:32  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:27:34  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:27:34  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:27:34  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:27:34  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:27:34  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:27:34  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:27:34  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:27:34  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:27:37  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:27:42  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:27:44  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:27:44  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:27:44  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:27:44  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:27:44  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:27:44  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:27:44  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:27:44  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:27:47  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:27:52  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:27:54  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:27:54  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:27:54  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:27:54  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:27:54  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:27:54  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:27:54  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:27:54  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:27:57  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:28:02  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:28:04  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:28:04  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:28:04  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:28:04  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:28:04  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:28:04  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:28:04  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:28:04  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:28:07  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:28:12  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:28:14  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:28:14  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:28:14  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:28:14  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:28:14  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:28:14  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:28:14  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:28:14  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:28:17  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:28:22  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:28:24  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:28:24  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:28:24  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:28:24  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:28:24  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:28:24  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:28:24  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:28:24  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:28:27  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:28:32  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:28:34  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:28:34  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:28:34  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:28:34  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:28:34  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:28:34  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:28:34  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:28:34  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:28:37  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:28:42  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:28:44  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:28:44  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:28:44  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:28:44  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:28:44  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:28:44  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:28:44  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:28:44  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:28:47  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:28:52  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:28:54  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:28:54  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:28:54  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:28:54  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:28:54  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:28:54  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:28:54  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:28:54  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:28:57  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:29:02  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:29:04  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:29:04  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:29:04  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:29:04  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:29:04  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:29:04  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:29:04  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:29:04  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:29:07  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:29:12  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:29:14  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:29:14  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:29:14  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:29:14  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:29:14  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:29:14  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:29:14  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:29:14  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:29:17  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:29:22  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:29:24  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:29:24  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:29:24  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:29:24  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:29:24  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:29:24  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:29:24  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:29:24  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:29:27  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:29:32  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:29:34  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:29:34  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:29:34  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:29:34  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:29:34  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:29:34  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:29:34  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:29:34  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:29:37  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:29:42  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:29:44  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:29:44  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:29:44  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:29:44  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:29:44  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:29:44  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:29:44  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:29:44  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:29:47  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:29:52  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:29:54  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:29:54  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:29:54  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:29:54  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:29:54  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:29:54  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:29:54  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:29:54  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:29:57  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:30:02  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:30:04  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:30:04  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:30:04  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:30:04  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:30:04  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:30:04  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:30:04  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:30:04  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:30:07  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:30:12  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:30:14  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:30:14  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:30:14  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:30:14  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:30:14  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:30:14  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:30:14  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:30:14  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:30:17  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:30:22  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:30:24  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:30:24  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:30:24  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:30:25  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:30:25  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:30:25  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:30:25  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:30:25  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:30:27  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:30:32  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:30:35  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:30:35  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:30:35  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:30:35  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:30:35  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:30:35  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:30:35  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:30:35  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:30:37  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:30:42  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:30:45  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:30:45  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:30:45  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:30:45  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:30:45  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:30:45  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:30:45  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:30:45  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:30:47  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:30:52  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:30:55  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:30:55  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:30:55  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:30:55  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:30:55  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:30:55  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:30:55  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:30:55  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:30:57  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:31:02  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:31:05  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:31:05  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:31:05  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:31:05  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:31:05  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:31:05  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:31:05  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:31:05  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:31:08  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:31:13  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:31:15  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:31:15  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:31:15  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:31:15  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:31:15  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:31:15  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:31:15  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:31:15  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:31:18  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:31:23  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:31:25  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:31:25  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:31:25  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:31:25  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:31:25  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:31:25  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:31:25  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:31:25  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:31:28  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:31:33  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:31:35  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:31:35  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:31:35  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:31:35  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:31:35  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:31:35  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:31:35  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:31:35  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:31:38  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:31:43  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:31:45  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:31:45  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:31:45  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:31:45  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:31:45  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:31:45  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:31:45  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:31:45  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:31:48  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:31:53  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:31:55  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:31:55  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:31:55  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:31:55  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:31:55  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:31:55  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:31:55  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:31:55  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:31:58  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:32:03  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:32:05  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:32:05  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:32:05  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:32:05  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:32:05  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:32:05  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:32:05  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:32:05  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:32:08  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:32:13  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:32:15  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:32:15  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:32:15  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:32:15  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:32:15  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:32:15  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:32:15  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:32:15  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:32:18  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:32:23  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:32:25  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:32:25  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:32:25  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:32:25  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:32:25  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:32:25  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:32:25  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:32:25  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:32:28  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:32:33  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:32:35  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:32:35  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:32:35  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:32:35  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:32:35  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:32:35  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:32:35  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:32:35  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:32:38  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:32:43  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:32:45  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:32:45  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:32:45  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:32:45  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:32:45  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:32:45  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:32:45  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:32:45  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:32:48  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:32:53  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:32:55  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:32:55  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:32:55  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:32:55  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:32:55  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:32:55  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:32:55  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:32:55  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:32:58  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:33:03  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:33:05  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:33:05  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:33:05  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:33:05  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:33:05  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:33:05  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:33:05  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:33:05  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:33:08  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:33:13  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:33:15  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:33:15  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:33:15  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:33:15  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:33:15  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:33:15  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:33:15  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:33:15  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:33:18  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:33:23  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:33:25  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:33:25  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:33:25  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:33:25  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:33:25  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:33:25  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:33:25  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:33:25  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:33:28  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:33:33  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:33:35  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:33:35  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:33:35  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:33:35  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:33:35  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:33:35  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:33:35  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:33:35  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:33:38  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:33:43  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:33:45  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:33:45  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:33:45  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:33:45  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:33:45  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:33:45  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:33:45  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:33:45  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:33:48  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:33:53  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:33:55  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:33:55  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:33:55  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:33:55  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:33:55  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:33:55  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:33:55  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:33:55  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:33:58  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:34:03  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:34:05  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:34:05  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:34:05  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:34:05  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:34:05  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:34:05  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:34:05  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:34:05  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:34:08  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:34:13  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:34:15  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:34:15  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:34:15  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:34:15  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:34:15  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:34:15  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:34:15  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:34:15  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:34:18  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:34:23  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:34:25  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:34:25  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:34:25  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:34:25  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:34:25  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:34:25  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:34:25  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:34:25  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:34:28  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:34:33  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:34:35  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:34:35  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:34:35  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:34:35  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:34:35  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:34:35  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:34:35  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:34:35  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:34:38  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:34:43  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:34:45  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:34:45  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:34:45  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:34:45  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:34:45  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:34:45  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:34:45  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:34:45  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:34:48  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:34:53  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:34:55  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:34:55  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:34:55  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:34:55  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:34:55  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:34:55  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:34:55  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:34:55  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:34:58  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:35:03  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:35:05  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:35:05  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:35:05  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:35:05  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:35:05  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:35:05  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:35:05  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:35:05  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:35:08  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:35:13  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:35:15  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:35:15  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:35:15  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:35:15  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:35:15  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:35:15  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:35:15  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:35:15  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:35:18  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:35:23  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:35:25  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:35:25  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:35:25  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:35:25  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:35:25  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:35:25  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:35:25  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:35:25  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:35:28  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:35:33  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:35:35  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:35:35  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:35:35  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:35:35  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:35:35  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:35:35  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:35:35  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:35:35  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:35:38  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:35:43  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:35:45  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:35:45  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:35:45  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:35:45  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:35:45  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:35:45  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:35:45  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:35:45  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:35:48  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:35:53  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:35:55  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:35:55  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:35:55  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:35:55  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:35:55  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:35:55  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:35:55  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:35:55  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:35:58  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:36:03  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:36:05  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:36:05  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:36:05  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:36:05  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:36:05  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:36:05  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:36:05  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:36:05  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:36:08  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:36:13  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:36:15  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:36:15  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:36:15  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:36:15  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:36:15  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:36:15  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:36:15  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:36:15  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:36:18  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:36:23  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:36:25  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:36:25  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:36:25  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:36:25  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:36:25  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:36:25  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:36:25  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:36:25  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:36:28  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:36:33  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:36:35  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:36:35  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:36:35  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:36:35  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:36:35  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:36:35  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:36:35  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:36:35  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:36:38  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:36:43  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:36:45  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:36:45  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:36:45  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:36:45  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:36:45  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:36:45  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:36:45  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:36:45  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:36:48  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:36:53  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:36:55  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:36:55  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:36:55  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:36:55  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:36:55  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:36:55  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:36:55  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:36:55  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:36:58  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:37:03  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:37:05  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:37:05  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:37:05  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:37:05  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:37:05  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:37:05  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:37:05  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:37:05  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:37:08  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:37:13  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:37:15  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:37:15  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:37:15  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:37:15  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:37:15  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:37:15  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:37:15  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:37:15  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:37:18  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:37:23  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:37:25  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:37:25  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:37:25  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:37:25  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:37:25  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:37:25  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:37:25  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:37:25  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:37:28  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:37:33  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:37:35  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:37:35  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:37:35  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:37:35  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:37:35  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:37:35  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:37:35  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:37:35  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:37:38  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:37:43  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:37:45  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:37:45  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:37:45  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:37:45  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:37:45  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:37:45  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:37:45  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:37:45  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:37:48  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:37:53  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:37:55  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:37:55  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:37:55  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:37:55  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:37:55  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:37:55  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:37:55  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:37:55  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:37:58  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:38:03  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:38:05  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:38:05  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:38:05  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:38:05  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:38:05  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:38:05  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:38:05  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:38:05  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:38:08  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:38:13  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:38:15  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:38:15  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:38:15  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:38:15  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:38:15  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:38:15  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:38:15  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:38:15  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:38:18  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:38:23  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:38:25  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:38:25  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:38:25  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:38:25  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:38:25  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:38:25  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:38:25  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:38:25  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:38:28  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:38:33  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:38:35  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:38:35  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:38:35  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:38:35  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:38:35  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:38:35  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:38:35  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:38:35  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:38:38  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:38:43  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:38:45  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:38:45  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:38:45  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:38:45  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:38:45  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:38:45  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:38:45  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:38:45  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:38:48  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:38:53  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:38:55  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:38:55  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:38:55  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:38:55  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:38:55  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:38:55  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:38:55  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:38:55  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:38:58  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:39:03  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:39:05  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:39:05  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:39:05  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:39:05  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:39:05  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:39:05  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:39:05  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:39:05  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:39:08  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:39:13  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:39:15  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:39:15  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:39:15  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:39:15  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:39:15  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:39:15  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:39:15  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:39:15  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:39:18  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:39:23  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:39:25  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:39:25  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:39:25  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:39:25  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:39:25  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:39:25  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:39:25  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:39:25  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:39:28  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:39:33  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:39:35  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:39:35  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:39:35  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:39:35  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:39:35  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:39:35  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:39:35  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:39:35  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:39:38  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:39:43  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:39:45  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:39:45  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:39:45  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:39:45  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:39:45  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:39:45  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:39:45  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:39:45  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:39:48  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:39:53  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:39:55  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:39:55  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:39:55  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:39:55  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:39:55  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:39:55  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:39:55  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:39:55  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:39:58  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:40:03  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:40:05  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:40:05  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:40:05  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:40:05  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:40:05  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:40:05  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:40:05  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:40:06  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:40:08  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:40:14  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:40:15  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:40:15  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:40:15  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:40:16  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:40:16  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:40:16  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:40:16  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:40:16  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:40:19  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:40:24  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:40:26  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:40:26  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:40:26  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:40:26  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:40:26  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:40:26  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:40:26  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:40:26  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:40:29  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:40:34  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:40:36  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:40:36  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:40:36  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:40:36  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:40:36  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:40:36  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:40:36  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:40:36  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:40:39  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:40:44  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:40:46  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:40:46  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:40:46  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:40:46  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:40:46  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:40:46  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:40:46  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:40:46  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:40:49  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:40:54  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:40:56  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:40:56  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:40:56  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:40:56  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:40:56  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:40:56  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:40:56  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:40:56  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:40:59  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:41:04  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:41:06  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:41:06  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:41:06  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:41:06  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:41:06  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:41:06  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:41:06  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:41:06  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:41:09  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:41:14  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:41:16  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:41:16  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:41:16  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:41:16  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:41:16  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:41:16  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:41:16  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:41:16  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:41:19  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:41:24  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:41:26  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:41:26  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:41:26  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:41:26  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:41:26  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:41:26  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:41:26  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:41:26  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:41:29  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:41:34  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:41:36  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:41:36  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:41:36  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:41:36  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:41:36  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:41:36  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:41:36  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:41:36  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:41:39  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:41:44  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:41:46  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:41:46  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:41:46  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:41:46  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:41:46  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:41:46  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:41:46  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:41:46  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:41:49  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:41:54  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:41:56  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:41:56  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:41:56  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:41:56  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:41:56  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:41:56  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:41:56  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:41:56  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:41:59  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:42:04  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:42:06  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:42:06  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:42:06  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:42:06  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:42:06  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:42:06  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:42:06  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:42:06  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:42:09  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:42:14  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:42:16  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:42:16  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:42:16  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:42:16  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:42:16  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:42:16  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:42:16  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:42:16  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:42:19  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:42:24  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:42:26  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:42:26  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:42:26  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:42:26  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:42:26  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:42:26  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:42:26  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:42:26  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:42:29  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:42:34  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:42:36  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:42:36  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:42:36  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:42:36  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:42:36  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:42:36  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:42:36  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:42:36  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:42:39  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:42:44  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:42:46  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:42:46  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:42:46  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:42:46  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:42:46  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:42:46  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:42:46  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:42:46  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:42:49  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:42:54  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:42:56  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:42:56  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:42:56  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:42:56  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:42:56  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:42:56  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:42:56  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:42:56  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:42:59  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:43:04  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:43:06  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:43:06  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:43:06  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:43:06  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:43:06  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:43:06  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:43:06  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:43:06  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:43:09  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:43:14  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:43:16  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:43:16  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:43:16  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:43:16  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:43:16  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:43:16  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:43:16  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:43:16  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:43:19  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:43:24  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:43:26  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:43:26  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:43:26  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:43:26  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:43:26  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:43:26  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:43:26  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:43:26  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:43:29  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:43:34  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:43:36  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:43:36  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:43:36  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:43:36  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:43:36  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:43:36  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:43:36  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:43:36  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:43:39  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:43:44  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:43:46  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:43:46  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:43:46  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:43:46  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:43:46  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:43:46  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:43:46  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:43:46  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:43:49  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:43:54  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:43:56  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:43:56  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:43:56  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:43:56  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:43:56  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:43:56  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:43:56  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:43:56  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:43:59  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:44:04  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:44:06  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:44:06  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:44:06  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:44:06  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:44:06  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:44:06  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:44:06  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:44:06  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:44:09  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:44:14  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:44:16  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:44:16  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:44:16  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:44:16  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:44:16  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:44:16  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:44:16  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:44:16  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:44:19  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:44:24  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:44:26  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:44:26  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:44:26  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:44:26  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:44:26  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:44:26  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:44:26  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:44:26  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:44:29  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:44:34  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:44:36  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:44:36  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:44:36  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:44:36  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:44:36  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:44:36  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:44:36  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:44:36  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:44:39  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:44:44  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:44:46  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:44:46  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:44:46  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:44:46  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:44:46  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:44:46  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:44:46  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:44:46  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:44:49  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:44:54  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:44:56  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:44:56  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:44:56  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:44:56  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:44:56  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:44:56  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:44:56  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:44:56  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:44:59  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:45:04  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:45:06  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:45:06  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:45:06  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:45:06  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:45:06  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:45:06  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:45:06  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:45:06  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:45:09  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:45:14  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:45:16  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:45:16  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:45:16  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:45:16  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:45:16  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:45:16  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:45:16  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:45:16  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:45:19  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:45:24  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:45:26  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:45:26  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:45:26  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:45:26  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:45:26  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:45:26  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:45:26  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:45:26  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:45:29  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:45:34  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:45:36  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:45:36  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:45:36  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:45:36  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:45:36  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:45:36  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:45:36  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:45:36  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:45:39  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:45:44  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:45:46  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:45:46  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:45:46  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:45:46  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:45:46  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:45:46  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:45:46  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:45:46  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:45:49  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:45:54  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:45:56  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:45:56  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:45:56  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:45:56  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:45:56  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:45:56  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:45:56  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:45:56  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:45:59  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:46:04  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:46:06  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:46:06  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:46:06  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:46:06  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:46:06  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:46:06  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:46:06  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:46:06  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:46:09  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:46:14  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:46:16  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:46:16  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:46:16  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:46:16  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:46:16  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:46:16  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:46:16  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:46:16  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:46:19  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:46:24  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:46:26  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:46:26  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:46:26  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:46:26  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:46:26  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:46:26  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:46:26  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:46:26  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:46:29  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:46:34  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:46:36  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:46:36  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:46:36  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:46:36  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:46:36  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:46:36  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:46:36  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:46:36  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:46:39  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:46:44  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:46:46  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:46:46  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:46:46  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:46:46  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:46:46  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:46:46  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:46:46  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:46:46  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:46:49  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:46:54  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:46:56  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:46:56  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:46:56  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:46:56  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:46:56  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:46:56  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:46:56  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:46:56  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:46:59  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:47:04  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:47:06  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:47:06  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:47:06  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:47:06  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:47:06  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:47:06  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:47:06  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:47:06  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:47:09  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:47:14  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:47:16  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:47:16  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:47:16  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:47:16  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:47:16  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:47:16  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:47:16  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:47:16  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:47:19  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:47:24  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:47:26  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:47:26  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:47:26  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:47:26  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:47:26  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:47:26  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:47:26  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:47:26  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:47:29  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:47:34  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:47:36  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:47:36  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:47:36  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:47:36  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:47:36  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:47:36  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:47:36  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:47:36  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:47:39  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:47:44  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:47:46  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:47:46  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:47:46  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:47:46  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:47:46  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:47:46  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:47:46  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:47:46  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:47:49  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:47:54  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:47:56  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:47:56  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:47:56  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:47:56  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:47:56  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:47:56  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:47:56  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:47:56  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:47:59  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:48:04  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:48:06  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:48:06  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:48:06  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:48:06  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:48:06  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:48:06  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:48:06  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:48:06  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:48:09  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:48:14  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:48:16  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:48:16  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:48:16  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:48:16  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:48:16  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:48:16  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:48:16  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:48:16  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:48:19  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:48:24  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:48:26  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:48:26  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:48:26  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:48:26  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:48:26  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:48:26  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:48:26  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:48:26  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:48:29  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:48:34  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:48:36  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:48:36  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:48:36  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:48:36  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:48:36  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:48:36  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:48:36  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:48:36  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:48:39  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:48:44  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:48:46  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:48:46  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:48:46  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:48:46  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:48:46  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:48:46  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:48:46  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:48:46  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:48:49  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:48:54  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:48:56  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:48:56  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:48:56  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:48:56  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:48:56  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:48:56  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:48:56  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:48:56  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:48:59  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:49:04  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:49:06  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:49:06  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:49:06  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:49:06  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:49:06  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:49:06  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:49:06  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:49:06  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:49:09  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:49:14  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:49:16  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:49:16  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:49:16  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:49:16  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:49:16  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:49:16  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:49:16  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:49:16  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:49:20  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:49:25  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:49:26  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:49:26  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:49:26  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:49:26  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:49:26  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:49:26  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:49:26  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:49:26  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:49:30  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:49:35  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:49:36  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:49:36  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:49:36  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:49:36  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:49:36  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:49:36  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:49:36  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:49:36  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:49:40  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:49:45  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:49:46  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:49:46  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:49:46  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:49:46  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:49:46  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:49:46  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:49:46  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:49:46  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:49:50  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:49:55  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:49:56  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:49:56  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:49:56  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:49:56  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:49:56  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:49:56  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:49:56  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:49:56  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:50:00  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:50:05  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:50:06  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:50:06  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:50:06  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:50:06  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:50:06  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:50:06  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:50:06  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:50:06  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:50:10  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:50:15  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:50:16  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:50:16  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:50:16  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:50:16  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:50:16  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:50:16  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:50:16  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:50:16  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:50:20  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:50:25  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:50:26  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:50:26  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:50:26  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:50:26  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:50:26  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:50:26  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:50:26  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:50:26  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:50:30  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:50:35  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:50:36  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:50:36  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:50:36  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:50:36  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:50:36  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:50:36  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:50:36  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:50:36  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:50:40  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:50:45  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:50:46  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:50:46  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:50:46  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:50:46  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:50:46  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:50:46  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:50:46  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:50:46  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:50:50  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:50:55  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:50:56  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:50:56  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:50:56  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:50:56  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:50:56  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:50:56  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:50:56  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:50:56  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:51:00  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:51:05  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:51:06  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:51:06  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:51:06  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:51:06  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:51:06  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:51:06  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:51:06  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:51:06  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:51:10  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:51:15  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:51:16  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:51:16  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:51:16  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:51:16  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:51:16  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:51:16  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:51:16  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:51:16  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:51:20  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:51:25  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:51:26  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:51:26  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:51:26  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:51:26  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:51:26  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:51:26  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:51:26  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:51:26  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:51:30  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:51:35  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:51:36  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:51:36  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:51:36  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:51:36  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:51:36  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:51:36  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:51:36  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:51:36  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:51:40  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:51:45  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:51:46  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:51:46  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:51:46  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:51:46  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:51:46  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:51:46  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:51:46  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:51:46  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:51:50  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:51:55  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:51:56  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:51:56  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:51:56  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:51:56  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:51:56  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:51:56  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:51:56  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:51:56  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:52:00  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:52:05  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:52:06  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:52:06  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:52:06  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:52:06  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:52:06  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:52:06  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:52:06  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:52:06  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:52:10  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:52:15  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:52:16  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:52:16  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:52:16  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:52:16  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:52:16  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:52:16  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:52:16  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:52:16  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:52:20  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:52:25  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:52:26  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:52:26  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:52:26  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:52:26  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:52:26  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:52:26  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:52:26  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:52:26  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:52:30  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:52:35  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:52:36  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:52:36  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:52:36  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:52:36  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:52:36  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:52:36  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:52:36  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:52:36  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:52:40  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:52:45  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:52:46  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:52:46  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:52:46  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:52:46  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:52:46  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:52:46  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:52:46  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:52:46  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:52:50  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:52:55  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:52:56  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:52:56  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:52:56  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:52:56  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:52:56  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:52:56  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:52:56  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:52:56  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:53:00  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:53:05  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:53:06  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:53:06  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:53:06  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:53:06  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:53:06  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:53:06  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:53:06  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:53:06  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:53:10  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:53:15  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:53:16  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:53:16  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:53:16  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:53:16  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:53:16  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:53:16  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:53:17  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:53:17  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:53:20  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:53:25  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:53:26  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:53:26  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:53:27  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:53:27  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:53:27  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:53:27  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:53:27  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:53:27  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:53:30  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:53:35  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:53:37  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:53:37  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:53:37  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:53:37  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:53:37  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:53:37  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:53:37  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:53:37  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:53:40  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:53:45  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:53:47  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:53:47  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:53:47  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:53:47  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:53:47  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:53:47  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:53:47  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:53:47  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:53:50  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:53:55  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:53:57  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:53:57  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:53:57  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:53:57  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:53:57  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:53:57  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:53:57  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:53:57  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:54:00  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:54:05  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:54:07  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:54:07  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:54:07  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:54:07  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:54:07  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:54:07  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:54:07  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:54:07  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:54:10  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:54:15  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:54:17  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:54:17  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:54:17  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:54:17  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:54:17  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:54:17  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:54:17  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:54:17  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:54:20  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:54:25  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:54:27  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:54:27  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:54:27  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:54:27  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:54:27  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:54:27  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:54:27  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:54:27  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:54:30  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:54:35  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:54:37  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:54:37  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:54:37  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:54:37  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:54:37  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:54:37  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:54:37  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:54:37  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:54:40  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:54:45  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:54:47  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:54:47  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:54:47  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:54:47  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:54:47  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:54:47  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:54:47  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:54:47  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:54:50  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:54:55  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:54:57  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:54:57  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:54:57  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:54:57  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:54:57  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:54:57  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:54:57  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:54:57  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:55:00  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:55:05  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:55:07  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:55:07  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:55:07  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:55:07  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:55:07  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:55:07  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:55:07  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:55:07  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:55:10  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:55:15  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:55:17  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:55:17  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:55:17  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:55:17  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:55:17  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:55:17  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:55:17  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:55:17  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:55:20  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:55:25  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:55:27  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:55:27  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:55:27  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:55:27  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:55:27  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:55:27  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:55:27  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:55:27  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:55:30  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:55:35  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:55:37  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:55:37  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:55:37  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:55:37  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:55:37  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:55:37  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:55:37  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:55:37  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:55:40  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:55:45  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:55:47  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:55:47  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:55:47  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:55:47  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:55:47  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:55:47  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:55:47  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:55:47  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:55:50  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:55:55  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:55:57  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:55:57  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:55:57  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:55:57  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:55:57  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:55:57  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:55:57  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:55:57  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:56:00  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:56:05  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:56:07  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:56:07  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:56:07  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:56:07  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:56:07  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:56:07  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:56:07  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:56:07  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:56:10  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:56:15  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:56:17  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:56:17  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:56:17  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:56:17  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:56:17  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:56:17  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:56:17  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:56:17  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:56:20  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:56:25  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:56:27  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:56:27  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:56:27  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:56:27  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:56:27  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:56:27  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:56:27  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:56:27  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:56:30  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:56:35  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:56:37  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:56:37  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:56:37  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:56:37  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:56:37  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:56:37  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:56:37  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:56:37  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:56:40  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:56:45  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:56:47  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:56:47  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:56:47  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:56:47  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:56:47  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:56:47  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:56:47  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:56:47  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:56:50  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:56:55  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:56:57  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:56:57  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:56:57  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:56:57  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:56:57  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:56:57  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:56:57  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:56:57  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-26 12:57:00  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:57:05  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-26 12:57:07  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-26 12:57:07  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-26 12:57:07  [ Thread-2:server.network.Server:232 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-26 12:57:07  [ Thread-0:ai.AILow:161 ] - [ INFO ]  by executeOrder Thread-0
2021-07-26 12:57:07  [ Thread-0:ai.AILow:136 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-0
2021-07-26 12:57:07  [ Thread-0:server.network.ServerThread:118 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-26 12:57:07  [ Thread-0:protocol.ExecuteOrder:111 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-26 12:57:07  [ Thread-0:protocol.ExecuteOrder:113 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
