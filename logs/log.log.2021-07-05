2021-07-05 11:24:37  [ Thread-4:server.network.ServerThread:48 ] - [ INFO ]  protocol to client: 
{"messageType":"HelloClient","messageBody":{"protocol":"Version 1.0"}}
2021-07-05 11:24:37  [ Thread-6:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 11:24:37  [ Thread-6:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"HelloClient","messageBody":{"protocol":"Version 1.0"}}Thread-6
2021-07-05 11:24:38  [ JavaFX Application Thread:client.model.Client:461 ] - [ INFO ]  protocol from Server: 
{"messageType":"HelloServer","messageBody":{"group":"CC","protocol":"Version 1.0","isAI":false}}
2021-07-05 11:24:38  [ Thread-4:server.network.ServerThread:89 ] - [ INFO ]  welcome info printed
2021-07-05 11:24:38  [ Thread-6:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 11:24:38  [ Thread-6:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"Welcome","messageBody":{"clientID":33}}Thread-6
2021-07-05 11:24:38  [ JavaFX Application Thread:client.model.Client:465 ] - [ INFO ]  {"messageType":"Welcome","messageBody":{"clientID":33}}JavaFX Application Thread
2021-07-05 11:24:38  [ JavaFX Application Thread:client.model.Client:469 ] - [ INFO ]  33
2021-07-05 11:24:38  [ JavaFX Application Thread:client.model.Client:470 ] - [ INFO ]  your clientID is: 33
2021-07-05 11:24:41  [ Thread-282:server.network.ServerThread:48 ] - [ INFO ]  protocol to client: 
{"messageType":"HelloClient","messageBody":{"protocol":"Version 1.0"}}
2021-07-05 11:24:41  [ Thread-281:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-281
2021-07-05 11:24:41  [ Thread-281:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"HelloClient","messageBody":{"protocol":"Version 1.0"}}Thread-281
2021-07-05 11:24:41  [ JavaFX Application Thread:client.model.Client:461 ] - [ INFO ]  protocol from Server: 
{"messageType":"HelloServer","messageBody":{"group":"CC","protocol":"Version 1.0","isAI":false}}
2021-07-05 11:24:41  [ Thread-282:server.network.ServerThread:89 ] - [ INFO ]  welcome info printed
2021-07-05 11:24:41  [ Thread-281:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-281
2021-07-05 11:24:41  [ Thread-281:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"Welcome","messageBody":{"clientID":100}}Thread-281
2021-07-05 11:24:41  [ JavaFX Application Thread:client.model.Client:465 ] - [ INFO ]  {"messageType":"Welcome","messageBody":{"clientID":100}}JavaFX Application Thread
2021-07-05 11:24:41  [ JavaFX Application Thread:client.model.Client:469 ] - [ INFO ]  100
2021-07-05 11:24:41  [ JavaFX Application Thread:client.model.Client:470 ] - [ INFO ]  your clientID is: 100
2021-07-05 11:24:44  [ JavaFX Application Thread:client.model.Client:925 ] - [ INFO ]  {"messageType":"PlayerValues","messageBody":{"name":"b","figure":2}}
2021-07-05 11:24:44  [ Thread-282:server.network.ServerThread:99 ] - [ INFO ]  excuteOrder by server {"messageType":"PlayerValues","messageBody":{"name":"b","figure":2}}
2021-07-05 11:24:44  [ Thread-282:protocol.ExecuteOrder:48 ] - [ INFO ]  check player figures
2021-07-05 11:24:44  [ Thread-282:protocol.ExecuteOrder:56 ] - [ INFO ]  addPlayer
2021-07-05 11:24:44  [ Thread-282:server.network.Server:202 ] - [ INFO ]  server added player
2021-07-05 11:24:44  [ Thread-6:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 11:24:44  [ Thread-281:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-281
2021-07-05 11:24:44  [ Thread-281:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"PlayerAdded","messageBody":{"clientID":100,"name":"b","figure":2}}Thread-281
2021-07-05 11:24:44  [ Thread-6:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"PlayerAdded","messageBody":{"clientID":100,"name":"b","figure":2}}Thread-6
2021-07-05 11:24:44  [ JavaFX Application Thread:client.model.Client:481 ] - [ INFO ]  {"messageType":"PlayerAdded","messageBody":{"clientID":100,"name":"b","figure":2}}JavaFX Application Thread
2021-07-05 11:24:44  [ JavaFX Application Thread:client.model.Client:491 ] - [ INFO ]  null: null
2021-07-05 11:24:44  [ JavaFX Application Thread:client.model.Client:498 ] - [ INFO ]  flag launchen window
2021-07-05 11:24:45  [ JavaFX Application Thread:client.model.Client:481 ] - [ INFO ]  {"messageType":"PlayerAdded","messageBody":{"clientID":100,"name":"b","figure":2}}JavaFX Application Thread
2021-07-05 11:24:45  [ JavaFX Application Thread:client.model.Client:491 ] - [ INFO ]  null: null
2021-07-05 11:24:49  [ JavaFX Application Thread:client.model.Client:925 ] - [ INFO ]  {"messageType":"PlayerValues","messageBody":{"name":"a","figure":1}}
2021-07-05 11:24:49  [ Thread-4:server.network.ServerThread:99 ] - [ INFO ]  excuteOrder by server {"messageType":"PlayerValues","messageBody":{"name":"a","figure":1}}
2021-07-05 11:24:49  [ Thread-4:protocol.ExecuteOrder:48 ] - [ INFO ]  check player figures
2021-07-05 11:24:49  [ Thread-4:protocol.ExecuteOrder:56 ] - [ INFO ]  addPlayer
2021-07-05 11:24:49  [ Thread-4:server.network.Server:202 ] - [ INFO ]  server added player
2021-07-05 11:24:49  [ Thread-6:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 11:24:49  [ Thread-281:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-281
2021-07-05 11:24:49  [ Thread-4:server.network.Server:219 ] - [ INFO ]  server added player
2021-07-05 11:24:49  [ Thread-6:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"PlayerAdded","messageBody":{"clientID":33,"name":"a","figure":1}}Thread-6
2021-07-05 11:24:49  [ Thread-6:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 11:24:49  [ Thread-281:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"PlayerAdded","messageBody":{"clientID":33,"name":"a","figure":1}}Thread-281
2021-07-05 11:24:49  [ JavaFX Application Thread:client.model.Client:481 ] - [ INFO ]  {"messageType":"PlayerAdded","messageBody":{"clientID":33,"name":"a","figure":1}}JavaFX Application Thread
2021-07-05 11:24:49  [ Thread-4:server.network.Server:219 ] - [ INFO ]  server added player
2021-07-05 11:24:49  [ Thread-6:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"PlayerAdded","messageBody":{"clientID":33,"name":"a","figure":1}}Thread-6
2021-07-05 11:24:49  [ Thread-6:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 11:24:49  [ JavaFX Application Thread:client.model.Client:491 ] - [ INFO ]  null: null
2021-07-05 11:24:49  [ JavaFX Application Thread:client.model.Client:498 ] - [ INFO ]  flag launchen window
2021-07-05 11:24:49  [ Thread-6:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"PlayerAdded","messageBody":{"clientID":100,"name":"b","figure":2}}Thread-6
2021-07-05 11:24:50  [ JavaFX Application Thread:client.model.Client:481 ] - [ INFO ]  {"messageType":"PlayerAdded","messageBody":{"clientID":33,"name":"a","figure":1}}JavaFX Application Thread
2021-07-05 11:24:50  [ JavaFX Application Thread:client.model.Client:491 ] - [ INFO ]  null: null
2021-07-05 11:24:50  [ JavaFX Application Thread:client.model.Client:481 ] - [ INFO ]  {"messageType":"PlayerAdded","messageBody":{"clientID":33,"name":"a","figure":1}}JavaFX Application Thread
2021-07-05 11:24:50  [ JavaFX Application Thread:client.model.Client:481 ] - [ INFO ]  {"messageType":"PlayerAdded","messageBody":{"clientID":100,"name":"b","figure":2}}JavaFX Application Thread
2021-07-05 11:24:53  [ JavaFX Application Thread:client.model.Client:938 ] - [ INFO ]  {"messageType":"SetStatus","messageBody":{"ready":true}}
2021-07-05 11:24:53  [ Thread-4:server.network.ServerThread:99 ] - [ INFO ]  excuteOrder by server {"messageType":"SetStatus","messageBody":{"ready":true}}
2021-07-05 11:24:53  [ Thread-4:protocol.ExecuteOrder:87 ] - [ INFO ]  set Status in ExecuteOrder
2021-07-05 11:24:53  [ Thread-4:server.network.Server:232 ] - [ INFO ]  server inform player status
2021-07-05 11:24:53  [ Thread-6:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 11:24:53  [ Thread-281:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-281
2021-07-05 11:24:53  [ Thread-281:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"PlayerStatus","messageBody":{"clientID":33,"ready":true}}Thread-281
2021-07-05 11:24:53  [ JavaFX Application Thread:client.model.Client:513 ] - [ INFO ]  {"messageType":"PlayerStatus","messageBody":{"clientID":33,"ready":true}}
2021-07-05 11:24:53  [ Thread-6:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"PlayerStatus","messageBody":{"clientID":33,"ready":true}}Thread-6
2021-07-05 11:24:53  [ Thread-4:server.network.Server:264 ] - [ INFO ]  server informs first ready player to select a map
2021-07-05 11:24:53  [ Thread-6:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 11:24:53  [ Thread-4:protocol.ExecuteOrder:462 ] - [ INFO ]  number of ready clients: 1
2021-07-05 11:24:53  [ JavaFX Application Thread:client.model.Client:513 ] - [ INFO ]  {"messageType":"PlayerStatus","messageBody":{"clientID":33,"ready":true}}
2021-07-05 11:24:53  [ Thread-6:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"SelectMap","messageBody":{"availableMaps":["Dizzy Highway","Lost Bearings","Death Trap","Extra Crispy","Twister"]}}Thread-6
2021-07-05 11:24:53  [ JavaFX Application Thread:client.model.Client:521 ] - [ INFO ]  {"messageType":"SelectMap","messageBody":{"availableMaps":["Dizzy Highway","Lost Bearings","Death Trap","Extra Crispy","Twister"]}}
2021-07-05 11:24:53  [ Thread-2128:server.network.Server:188 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 11:24:53  [ Thread-6:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 11:24:53  [ Thread-6:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 11:24:53  [ Thread-4:server.network.ServerThread:99 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 11:24:53  [ JavaFX Application Thread:client.model.Client:478 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 11:24:53  [ Thread-4:protocol.ExecuteOrder:82 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 11:24:53  [ Thread-4:protocol.ExecuteOrder:84 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 11:24:54  [ JavaFX Application Thread:client.model.Client:938 ] - [ INFO ]  {"messageType":"SetStatus","messageBody":{"ready":true}}
2021-07-05 11:24:54  [ Thread-282:server.network.ServerThread:99 ] - [ INFO ]  excuteOrder by server {"messageType":"SetStatus","messageBody":{"ready":true}}
2021-07-05 11:24:54  [ Thread-282:protocol.ExecuteOrder:87 ] - [ INFO ]  set Status in ExecuteOrder
2021-07-05 11:24:54  [ Thread-282:server.network.Server:232 ] - [ INFO ]  server inform player status
2021-07-05 11:24:54  [ Thread-6:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 11:24:54  [ Thread-281:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-281
2021-07-05 11:24:54  [ Thread-282:server.network.Server:264 ] - [ INFO ]  server informs first ready player to select a map
2021-07-05 11:24:54  [ Thread-282:protocol.ExecuteOrder:462 ] - [ INFO ]  number of ready clients: 2
2021-07-05 11:24:54  [ Thread-6:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"PlayerStatus","messageBody":{"clientID":100,"ready":true}}Thread-6
2021-07-05 11:24:54  [ JavaFX Application Thread:client.model.Client:513 ] - [ INFO ]  {"messageType":"PlayerStatus","messageBody":{"clientID":100,"ready":true}}
2021-07-05 11:24:54  [ Thread-281:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"PlayerStatus","messageBody":{"clientID":100,"ready":true}}Thread-281
2021-07-05 11:24:54  [ Thread-6:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 11:24:54  [ Thread-2338:server.network.Server:188 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-05 11:24:54  [ Thread-281:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-281
2021-07-05 11:24:54  [ Thread-6:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"SelectMap","messageBody":{"availableMaps":["Dizzy Highway","Lost Bearings","Death Trap","Extra Crispy","Twister"]}}Thread-6
2021-07-05 11:24:54  [ Thread-281:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-281
2021-07-05 11:24:54  [ JavaFX Application Thread:client.model.Client:513 ] - [ INFO ]  {"messageType":"PlayerStatus","messageBody":{"clientID":100,"ready":true}}
2021-07-05 11:24:54  [ JavaFX Application Thread:client.model.Client:521 ] - [ INFO ]  {"messageType":"SelectMap","messageBody":{"availableMaps":["Dizzy Highway","Lost Bearings","Death Trap","Extra Crispy","Twister"]}}
2021-07-05 11:24:54  [ JavaFX Application Thread:client.model.Client:478 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-05 11:24:54  [ Thread-282:server.network.ServerThread:99 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 11:24:54  [ Thread-282:protocol.ExecuteOrder:82 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-05 11:24:54  [ Thread-282:protocol.ExecuteOrder:84 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-05 11:24:58  [ Thread-2127:server.network.Connected:55 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 11:24:59  [ Thread-2337:server.network.Connected:55 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 11:25:00  [ JavaFX Application Thread:client.model.Client:979 ] - [ INFO ]  {"messageType":"MapSelected","messageBody":{"map":"Dizzy Highway"}}
2021-07-05 11:25:00  [ Thread-4:server.network.ServerThread:99 ] - [ INFO ]  excuteOrder by server {"messageType":"MapSelected","messageBody":{"map":"Dizzy Highway"}}
2021-07-05 11:25:00  [ Thread-4:protocol.ExecuteOrder:121 ] - [ INFO ]  set Map in ExecuteOrder
2021-07-05 11:25:00  [ Thread-4:server.network.Server:638 ] - [ INFO ]  server informs which map selected
2021-07-05 11:25:00  [ Thread-6:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 11:25:00  [ Thread-281:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-281
2021-07-05 11:25:00  [ Thread-6:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"MapSelected","messageBody":{"map":"Dizzy Highway"}}Thread-6
2021-07-05 11:25:00  [ Thread-281:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"MapSelected","messageBody":{"map":"Dizzy Highway"}}Thread-281
2021-07-05 11:25:00  [ Thread-4:server.game.Game:228 ] - [ INFO ]  Game sets map.
2021-07-05 11:25:00  [ Thread-4:server.maps.Board:19 ] - [ INFO ]  Board sets map of Dizzy Highway.
2021-07-05 11:25:00  [ Thread-4:protocol.ExecuteOrder:462 ] - [ INFO ]  number of ready clients: 2
2021-07-05 11:25:00  [ Thread-4:protocol.ExecuteOrder:464 ] - [ INFO ]  number enough, to play
2021-07-05 11:25:00  [ Thread-4:server.network.Server:278 ] - [ INFO ]  server sends map
2021-07-05 11:25:00  [ Thread-4:server.network.Server:305 ] - [ INFO ]  server sends phase info
2021-07-05 11:25:00  [ Thread-6:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 11:25:00  [ Thread-281:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-281
2021-07-05 11:25:00  [ Thread-4:server.network.Server:315 ] - [ INFO ]  server informs current player id
2021-07-05 11:25:00  [ Thread-281:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"GameStarted","messageBody":{"gameMap":[[[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Antenna","isOnBoard":"Start A","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["top"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"ConveyorBelt","isOnBoard":"Start A","speed":1,"orientations":["right","left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"Start A","speed":1,"orientations":["right","left"],"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}]],[[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom","top","right"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom","left","top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right","left","top"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left","top","right"],"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["top"],"registers":null,"count":0}],[{"type":"Laser","isOnBoard":"5B","speed":0,"orientations":["top"],"registers":null,"count":1},{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0},{"type":"RestartPoint","isOnBoard":"DizzyHighway","speed":0,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"Laser","isOnBoard":"5B","speed":0,"orientations":["left"],"registers":null,"count":1},{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Laser","isOnBoard":"5B","speed":0,"orientations":["right"],"registers":null,"count":1},{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["left"],"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Laser","isOnBoard":"5B","speed":0,"orientations":["bottom"],"registers":null,"count":1},{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["top"],"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right","bottom","left"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left","right","bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top","right","bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top","bottom","left"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}]],[[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0},{"type":"CheckPoint","isOnBoard":"DizzyHighway","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]]]}}Thread-281
2021-07-05 11:25:00  [ Thread-281:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-281
2021-07-05 11:25:00  [ Thread-6:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"GameStarted","messageBody":{"gameMap":[[[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Antenna","isOnBoard":"Start A","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["top"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"ConveyorBelt","isOnBoard":"Start A","speed":1,"orientations":["right","left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"Start A","speed":1,"orientations":["right","left"],"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}]],[[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom","top","right"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom","left","top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right","left","top"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left","top","right"],"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["top"],"registers":null,"count":0}],[{"type":"Laser","isOnBoard":"5B","speed":0,"orientations":["top"],"registers":null,"count":1},{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0},{"type":"RestartPoint","isOnBoard":"DizzyHighway","speed":0,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"Laser","isOnBoard":"5B","speed":0,"orientations":["left"],"registers":null,"count":1},{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Laser","isOnBoard":"5B","speed":0,"orientations":["right"],"registers":null,"count":1},{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["left"],"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Laser","isOnBoard":"5B","speed":0,"orientations":["bottom"],"registers":null,"count":1},{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["top"],"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right","bottom","left"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left","right","bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top","right","bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top","bottom","left"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}]],[[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0},{"type":"CheckPoint","isOnBoard":"DizzyHighway","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]]]}}Thread-6
2021-07-05 11:25:00  [ Thread-6:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 11:25:00  [ Thread-281:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"ActivePhase","messageBody":{"phase":0}}Thread-281
2021-07-05 11:25:00  [ Thread-281:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-281
2021-07-05 11:25:00  [ Thread-6:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"ActivePhase","messageBody":{"phase":0}}Thread-6
2021-07-05 11:25:00  [ Thread-281:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-281
2021-07-05 11:25:00  [ Thread-6:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 11:25:00  [ Thread-6:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-6
2021-07-05 11:25:03  [ Thread-2127:server.network.Connected:55 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 11:25:03  [ Thread-2128:server.network.AliveCheck:50 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 11:25:03  [ Thread-2128:server.network.AliveCheck:51 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 11:25:03  [ Thread-2128:server.network.Server:188 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 11:25:03  [ Thread-6:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 11:25:03  [ Thread-6:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 11:25:03  [ JavaFX Application Thread:client.model.Client:478 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 11:25:03  [ Thread-4:server.network.ServerThread:99 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 11:25:03  [ Thread-4:protocol.ExecuteOrder:82 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 11:25:03  [ Thread-4:protocol.ExecuteOrder:84 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 11:25:03  [ JavaFX Application Thread:client.model.Client:1045 ] - [ INFO ]  {"messageType":"SetStartingPoint","messageBody":{"x":1,"y":4}}
2021-07-05 11:25:03  [ Thread-4:server.network.ServerThread:99 ] - [ INFO ]  excuteOrder by server {"messageType":"SetStartingPoint","messageBody":{"x":1,"y":4}}
2021-07-05 11:25:03  [ Thread-4:server.network.Server:328 ] - [ INFO ]  server informs set starting point
2021-07-05 11:25:03  [ Thread-6:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 11:25:03  [ Thread-281:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-281
2021-07-05 11:25:03  [ Thread-4:server.network.Server:315 ] - [ INFO ]  server informs current player id
2021-07-05 11:25:03  [ Thread-6:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"StartingPointTaken","messageBody":{"x":1,"y":4,"clientID":33}}Thread-6
2021-07-05 11:25:03  [ Thread-281:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"StartingPointTaken","messageBody":{"x":1,"y":4,"clientID":33}}Thread-281
2021-07-05 11:25:03  [ Thread-6:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 11:25:03  [ Thread-281:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-281
2021-07-05 11:25:03  [ Thread-281:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":100}}Thread-281
2021-07-05 11:25:03  [ Thread-6:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":100}}Thread-6
2021-07-05 11:25:03  [ JavaFX Application Thread:client.model.Client:635 ] - [ INFO ]  1
2021-07-05 11:25:03  [ JavaFX Application Thread:client.model.Client:635 ] - [ INFO ]  1
2021-07-05 11:25:04  [ Thread-2338:server.network.AliveCheck:50 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-05 11:25:04  [ Thread-2337:server.network.Connected:55 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 11:25:04  [ Thread-2338:server.network.AliveCheck:51 ] - [ INFO ]  client 100 flag connect = false
2021-07-05 11:25:04  [ Thread-2338:server.network.Server:188 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-05 11:25:04  [ Thread-281:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-281
2021-07-05 11:25:04  [ Thread-281:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-281
2021-07-05 11:25:04  [ JavaFX Application Thread:client.model.Client:478 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-05 11:25:04  [ Thread-282:server.network.ServerThread:99 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 11:25:04  [ Thread-282:protocol.ExecuteOrder:82 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-05 11:25:04  [ Thread-282:protocol.ExecuteOrder:84 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-05 11:25:05  [ JavaFX Application Thread:client.model.Client:1045 ] - [ INFO ]  {"messageType":"SetStartingPoint","messageBody":{"x":0,"y":6}}
2021-07-05 11:25:05  [ Thread-282:server.network.ServerThread:99 ] - [ INFO ]  excuteOrder by server {"messageType":"SetStartingPoint","messageBody":{"x":0,"y":6}}
2021-07-05 11:25:05  [ Thread-282:server.network.Server:328 ] - [ INFO ]  server informs set starting point
2021-07-05 11:25:05  [ Thread-6:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 11:25:05  [ Thread-281:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-281
2021-07-05 11:25:05  [ Thread-282:server.network.Server:305 ] - [ INFO ]  server sends phase info
2021-07-05 11:25:05  [ Thread-281:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"StartingPointTaken","messageBody":{"x":0,"y":6,"clientID":100}}Thread-281
2021-07-05 11:25:05  [ Thread-6:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"StartingPointTaken","messageBody":{"x":0,"y":6,"clientID":100}}Thread-6
2021-07-05 11:25:05  [ Thread-281:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-281
2021-07-05 11:25:05  [ Thread-6:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 11:25:05  [ Thread-282:server.network.Server:654 ] - [ INFO ]  server informs Refill upgrade shop.
2021-07-05 11:25:05  [ Thread-281:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"ActivePhase","messageBody":{"phase":1}}Thread-281
2021-07-05 11:25:05  [ Thread-6:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"ActivePhase","messageBody":{"phase":1}}Thread-6
2021-07-05 11:25:05  [ Thread-281:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-281
2021-07-05 11:25:05  [ Thread-6:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 11:25:05  [ Thread-282:server.network.Server:315 ] - [ INFO ]  server informs current player id
2021-07-05 11:25:05  [ Thread-281:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"RefillShop","messageBody":{"cards":["MemorySwap","RealLaser","RealLaser","AdminPrivilege"]}}Thread-281
2021-07-05 11:25:05  [ Thread-281:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-281
2021-07-05 11:25:05  [ Thread-6:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"RefillShop","messageBody":{"cards":["MemorySwap","RealLaser","RealLaser","AdminPrivilege"]}}Thread-6
2021-07-05 11:25:05  [ Thread-6:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 11:25:05  [ Thread-281:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-281
2021-07-05 11:25:05  [ Thread-6:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-6
2021-07-05 11:25:05  [ JavaFX Application Thread:client.model.Client:635 ] - [ INFO ]  0
2021-07-05 11:25:05  [ JavaFX Application Thread:client.model.Client:635 ] - [ INFO ]  0
2021-07-05 11:25:08  [ Thread-2127:server.network.Connected:55 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 11:25:09  [ Thread-2337:server.network.Connected:55 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 11:25:13  [ Thread-2127:server.network.Connected:55 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 11:25:13  [ Thread-2128:server.network.AliveCheck:50 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 11:25:13  [ Thread-2128:server.network.AliveCheck:51 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 11:25:13  [ Thread-2128:server.network.Server:188 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 11:25:13  [ Thread-6:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 11:25:13  [ Thread-6:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 11:25:13  [ JavaFX Application Thread:client.model.Client:478 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 11:25:13  [ Thread-4:server.network.ServerThread:99 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 11:25:13  [ Thread-4:protocol.ExecuteOrder:82 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 11:25:13  [ Thread-4:protocol.ExecuteOrder:84 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 11:25:14  [ Thread-2337:server.network.Connected:55 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 11:25:14  [ Thread-2338:server.network.AliveCheck:50 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-05 11:25:14  [ Thread-2338:server.network.AliveCheck:51 ] - [ INFO ]  client 100 flag connect = false
2021-07-05 11:25:14  [ Thread-2338:server.network.Server:188 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-05 11:25:14  [ Thread-281:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-281
2021-07-05 11:25:14  [ Thread-281:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-281
2021-07-05 11:25:14  [ JavaFX Application Thread:client.model.Client:478 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-05 11:25:14  [ Thread-282:server.network.ServerThread:99 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 11:25:14  [ Thread-282:protocol.ExecuteOrder:82 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-05 11:25:14  [ Thread-282:protocol.ExecuteOrder:84 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-05 11:25:18  [ Thread-2127:server.network.Connected:55 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 11:25:19  [ Thread-2337:server.network.Connected:55 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 11:25:23  [ Thread-2127:server.network.Connected:55 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 11:25:23  [ Thread-2128:server.network.AliveCheck:50 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 11:25:23  [ Thread-2128:server.network.AliveCheck:51 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 11:25:23  [ Thread-2128:server.network.Server:188 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 11:25:24  [ Thread-2338:server.network.AliveCheck:50 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-05 11:25:24  [ Thread-2338:server.network.AliveCheck:51 ] - [ INFO ]  client 100 flag connect = false
2021-07-05 11:25:24  [ Thread-2337:server.network.Connected:55 ] - [ INFO ]  100 in while loop print flagconnect: true
2021-07-05 11:25:24  [ Thread-2338:server.network.Server:188 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-05 11:25:24  [ Thread-2337:server.network.Connected:58 ] - [ INFO ]  100 in first if print flagconnect: true
2021-07-05 11:25:26  [ Thread-2337:server.network.Connected:67 ] - [ INFO ]  clientNr. 100 in second if print flagconnect
2021-07-05 11:25:26  [ Thread-2337:server.network.Connected:68 ] - [ INFO ]  clientNr. 100 in connected flag is: true
2021-07-05 11:25:26  [ Thread-2337:server.network.Server:614 ] - [ INFO ]  server informs connection update
2021-07-05 11:25:26  [ Thread-2337:server.network.Connected:74 ] - [ INFO ]  client 100 disconnected.
2021-07-05 11:25:28  [ Thread-2127:server.network.Connected:55 ] - [ INFO ]  33 in while loop print flagconnect: true
2021-07-05 11:25:28  [ Thread-2127:server.network.Connected:58 ] - [ INFO ]  33 in first if print flagconnect: true
2021-07-05 11:25:30  [ Thread-2127:server.network.Connected:67 ] - [ INFO ]  clientNr. 33 in second if print flagconnect
2021-07-05 11:25:30  [ Thread-2127:server.network.Connected:68 ] - [ INFO ]  clientNr. 33 in connected flag is: true
2021-07-05 11:25:30  [ Thread-2127:server.network.Server:614 ] - [ INFO ]  server informs connection update
2021-07-05 11:25:30  [ Thread-2127:server.network.Connected:74 ] - [ INFO ]  client 33 disconnected.
2021-07-05 11:25:33  [ Thread-2128:server.network.AliveCheck:50 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 11:25:33  [ Thread-2128:server.network.AliveCheck:51 ] - [ INFO ]  client 33 flag connect = true
2021-07-05 11:25:34  [ Thread-2338:server.network.AliveCheck:50 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-05 11:25:34  [ Thread-2338:server.network.AliveCheck:51 ] - [ INFO ]  client 100 flag connect = true
2021-07-05 11:35:15  [ Thread-4:server.network.ServerThread:48 ] - [ INFO ]  protocol to client: 
{"messageType":"HelloClient","messageBody":{"protocol":"Version 1.0"}}
2021-07-05 11:35:15  [ Thread-6:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 11:35:15  [ Thread-6:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"HelloClient","messageBody":{"protocol":"Version 1.0"}}Thread-6
2021-07-05 11:35:16  [ JavaFX Application Thread:client.model.Client:461 ] - [ INFO ]  protocol from Server: 
{"messageType":"HelloServer","messageBody":{"group":"CC","protocol":"Version 1.0","isAI":false}}
2021-07-05 11:35:16  [ Thread-4:server.network.ServerThread:89 ] - [ INFO ]  welcome info printed
2021-07-05 11:35:16  [ Thread-6:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 11:35:16  [ Thread-6:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"Welcome","messageBody":{"clientID":33}}Thread-6
2021-07-05 11:35:16  [ JavaFX Application Thread:client.model.Client:465 ] - [ INFO ]  {"messageType":"Welcome","messageBody":{"clientID":33}}JavaFX Application Thread
2021-07-05 11:35:16  [ JavaFX Application Thread:client.model.Client:469 ] - [ INFO ]  33
2021-07-05 11:35:16  [ JavaFX Application Thread:client.model.Client:470 ] - [ INFO ]  your clientID is: 33
2021-07-05 11:35:18  [ Thread-260:server.network.ServerThread:48 ] - [ INFO ]  protocol to client: 
{"messageType":"HelloClient","messageBody":{"protocol":"Version 1.0"}}
2021-07-05 11:35:18  [ Thread-259:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-259
2021-07-05 11:35:18  [ Thread-259:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"HelloClient","messageBody":{"protocol":"Version 1.0"}}Thread-259
2021-07-05 11:35:19  [ JavaFX Application Thread:client.model.Client:461 ] - [ INFO ]  protocol from Server: 
{"messageType":"HelloServer","messageBody":{"group":"CC","protocol":"Version 1.0","isAI":false}}
2021-07-05 11:35:19  [ Thread-260:server.network.ServerThread:89 ] - [ INFO ]  welcome info printed
2021-07-05 11:35:19  [ Thread-259:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-259
2021-07-05 11:35:19  [ Thread-259:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"Welcome","messageBody":{"clientID":100}}Thread-259
2021-07-05 11:35:19  [ JavaFX Application Thread:client.model.Client:465 ] - [ INFO ]  {"messageType":"Welcome","messageBody":{"clientID":100}}JavaFX Application Thread
2021-07-05 11:35:19  [ JavaFX Application Thread:client.model.Client:469 ] - [ INFO ]  100
2021-07-05 11:35:19  [ JavaFX Application Thread:client.model.Client:470 ] - [ INFO ]  your clientID is: 100
2021-07-05 11:35:25  [ JavaFX Application Thread:client.model.Client:925 ] - [ INFO ]  {"messageType":"PlayerValues","messageBody":{"name":"s","figure":2}}
2021-07-05 11:35:25  [ Thread-4:server.network.ServerThread:99 ] - [ INFO ]  excuteOrder by server {"messageType":"PlayerValues","messageBody":{"name":"s","figure":2}}
2021-07-05 11:35:25  [ Thread-4:protocol.ExecuteOrder:48 ] - [ INFO ]  check player figures
2021-07-05 11:35:25  [ Thread-4:protocol.ExecuteOrder:56 ] - [ INFO ]  addPlayer
2021-07-05 11:35:25  [ Thread-4:server.network.Server:202 ] - [ INFO ]  server added player
2021-07-05 11:35:25  [ Thread-6:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 11:35:25  [ Thread-259:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-259
2021-07-05 11:35:25  [ Thread-259:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"PlayerAdded","messageBody":{"clientID":33,"name":"s","figure":2}}Thread-259
2021-07-05 11:35:25  [ Thread-6:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"PlayerAdded","messageBody":{"clientID":33,"name":"s","figure":2}}Thread-6
2021-07-05 11:35:25  [ JavaFX Application Thread:client.model.Client:481 ] - [ INFO ]  {"messageType":"PlayerAdded","messageBody":{"clientID":33,"name":"s","figure":2}}JavaFX Application Thread
2021-07-05 11:35:25  [ JavaFX Application Thread:client.model.Client:491 ] - [ INFO ]  null: null
2021-07-05 11:35:25  [ JavaFX Application Thread:client.model.Client:481 ] - [ INFO ]  {"messageType":"PlayerAdded","messageBody":{"clientID":33,"name":"s","figure":2}}JavaFX Application Thread
2021-07-05 11:35:25  [ JavaFX Application Thread:client.model.Client:491 ] - [ INFO ]  null: null
2021-07-05 11:35:25  [ JavaFX Application Thread:client.model.Client:498 ] - [ INFO ]  flag launchen window
2021-07-05 11:35:33  [ JavaFX Application Thread:client.model.Client:925 ] - [ INFO ]  {"messageType":"PlayerValues","messageBody":{"name":"s","figure":4}}
2021-07-05 11:35:33  [ Thread-260:server.network.ServerThread:99 ] - [ INFO ]  excuteOrder by server {"messageType":"PlayerValues","messageBody":{"name":"s","figure":4}}
2021-07-05 11:35:33  [ Thread-260:protocol.ExecuteOrder:48 ] - [ INFO ]  check player figures
2021-07-05 11:35:33  [ Thread-260:protocol.ExecuteOrder:56 ] - [ INFO ]  addPlayer
2021-07-05 11:35:33  [ Thread-260:server.network.Server:202 ] - [ INFO ]  server added player
2021-07-05 11:35:33  [ Thread-6:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 11:35:33  [ Thread-259:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-259
2021-07-05 11:35:33  [ Thread-260:server.network.Server:219 ] - [ INFO ]  server added player
2021-07-05 11:35:33  [ Thread-6:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"PlayerAdded","messageBody":{"clientID":100,"name":"s","figure":4}}Thread-6
2021-07-05 11:35:33  [ Thread-259:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"PlayerAdded","messageBody":{"clientID":100,"name":"s","figure":4}}Thread-259
2021-07-05 11:35:33  [ JavaFX Application Thread:client.model.Client:481 ] - [ INFO ]  {"messageType":"PlayerAdded","messageBody":{"clientID":100,"name":"s","figure":4}}JavaFX Application Thread
2021-07-05 11:35:33  [ Thread-259:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-259
2021-07-05 11:35:33  [ Thread-260:server.network.Server:219 ] - [ INFO ]  server added player
2021-07-05 11:35:33  [ Thread-259:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"PlayerAdded","messageBody":{"clientID":33,"name":"s","figure":2}}Thread-259
2021-07-05 11:35:33  [ Thread-259:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-259
2021-07-05 11:35:33  [ JavaFX Application Thread:client.model.Client:491 ] - [ INFO ]  null: null
2021-07-05 11:35:33  [ JavaFX Application Thread:client.model.Client:481 ] - [ INFO ]  {"messageType":"PlayerAdded","messageBody":{"clientID":100,"name":"s","figure":4}}JavaFX Application Thread
2021-07-05 11:35:33  [ Thread-259:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"PlayerAdded","messageBody":{"clientID":100,"name":"s","figure":4}}Thread-259
2021-07-05 11:35:33  [ JavaFX Application Thread:client.model.Client:491 ] - [ INFO ]  null: null
2021-07-05 11:35:33  [ JavaFX Application Thread:client.model.Client:498 ] - [ INFO ]  flag launchen window
2021-07-05 11:35:34  [ JavaFX Application Thread:client.model.Client:481 ] - [ INFO ]  {"messageType":"PlayerAdded","messageBody":{"clientID":33,"name":"s","figure":2}}JavaFX Application Thread
2021-07-05 11:35:34  [ JavaFX Application Thread:client.model.Client:481 ] - [ INFO ]  {"messageType":"PlayerAdded","messageBody":{"clientID":100,"name":"s","figure":4}}JavaFX Application Thread
2021-07-05 11:35:36  [ JavaFX Application Thread:client.model.Client:938 ] - [ INFO ]  {"messageType":"SetStatus","messageBody":{"ready":true}}
2021-07-05 11:35:36  [ Thread-260:server.network.ServerThread:99 ] - [ INFO ]  excuteOrder by server {"messageType":"SetStatus","messageBody":{"ready":true}}
2021-07-05 11:35:36  [ Thread-260:protocol.ExecuteOrder:87 ] - [ INFO ]  set Status in ExecuteOrder
2021-07-05 11:35:36  [ Thread-260:server.network.Server:232 ] - [ INFO ]  server inform player status
2021-07-05 11:35:36  [ Thread-6:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 11:35:36  [ Thread-259:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-259
2021-07-05 11:35:36  [ Thread-6:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"PlayerStatus","messageBody":{"clientID":100,"ready":true}}Thread-6
2021-07-05 11:35:36  [ Thread-259:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"PlayerStatus","messageBody":{"clientID":100,"ready":true}}Thread-259
2021-07-05 11:35:36  [ JavaFX Application Thread:client.model.Client:513 ] - [ INFO ]  {"messageType":"PlayerStatus","messageBody":{"clientID":100,"ready":true}}
2021-07-05 11:35:36  [ Thread-260:server.network.Server:264 ] - [ INFO ]  server informs first ready player to select a map
2021-07-05 11:35:36  [ Thread-259:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-259
2021-07-05 11:35:36  [ Thread-260:protocol.ExecuteOrder:462 ] - [ INFO ]  number of ready clients: 1
2021-07-05 11:35:36  [ Thread-259:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"SelectMap","messageBody":{"availableMaps":["Dizzy Highway","Lost Bearings","Death Trap","Extra Crispy","Twister"]}}Thread-259
2021-07-05 11:35:36  [ JavaFX Application Thread:client.model.Client:513 ] - [ INFO ]  {"messageType":"PlayerStatus","messageBody":{"clientID":100,"ready":true}}
2021-07-05 11:35:36  [ JavaFX Application Thread:client.model.Client:521 ] - [ INFO ]  {"messageType":"SelectMap","messageBody":{"availableMaps":["Dizzy Highway","Lost Bearings","Death Trap","Extra Crispy","Twister"]}}
2021-07-05 11:35:36  [ Thread-2713:server.network.Server:188 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-05 11:35:36  [ Thread-259:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-259
2021-07-05 11:35:36  [ Thread-259:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-259
2021-07-05 11:35:36  [ Thread-260:server.network.ServerThread:99 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 11:35:36  [ JavaFX Application Thread:client.model.Client:478 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-05 11:35:36  [ Thread-260:protocol.ExecuteOrder:82 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-05 11:35:36  [ Thread-260:protocol.ExecuteOrder:84 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-05 11:35:37  [ JavaFX Application Thread:client.model.Client:938 ] - [ INFO ]  {"messageType":"SetStatus","messageBody":{"ready":true}}
2021-07-05 11:35:37  [ Thread-4:server.network.ServerThread:99 ] - [ INFO ]  excuteOrder by server {"messageType":"SetStatus","messageBody":{"ready":true}}
2021-07-05 11:35:37  [ Thread-4:protocol.ExecuteOrder:87 ] - [ INFO ]  set Status in ExecuteOrder
2021-07-05 11:35:37  [ Thread-4:server.network.Server:232 ] - [ INFO ]  server inform player status
2021-07-05 11:35:37  [ Thread-6:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 11:35:37  [ Thread-259:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-259
2021-07-05 11:35:37  [ Thread-4:server.network.Server:264 ] - [ INFO ]  server informs first ready player to select a map
2021-07-05 11:35:37  [ JavaFX Application Thread:client.model.Client:513 ] - [ INFO ]  {"messageType":"PlayerStatus","messageBody":{"clientID":33,"ready":true}}
2021-07-05 11:35:37  [ Thread-6:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"PlayerStatus","messageBody":{"clientID":33,"ready":true}}Thread-6
2021-07-05 11:35:37  [ Thread-259:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"PlayerStatus","messageBody":{"clientID":33,"ready":true}}Thread-259
2021-07-05 11:35:37  [ Thread-4:protocol.ExecuteOrder:462 ] - [ INFO ]  number of ready clients: 2
2021-07-05 11:35:37  [ Thread-259:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-259
2021-07-05 11:35:37  [ Thread-2716:server.network.Server:188 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 11:35:37  [ Thread-259:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"SelectMap","messageBody":{"availableMaps":["Dizzy Highway","Lost Bearings","Death Trap","Extra Crispy","Twister"]}}Thread-259
2021-07-05 11:35:37  [ Thread-6:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 11:35:37  [ JavaFX Application Thread:client.model.Client:513 ] - [ INFO ]  {"messageType":"PlayerStatus","messageBody":{"clientID":33,"ready":true}}
2021-07-05 11:35:37  [ Thread-6:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 11:35:37  [ JavaFX Application Thread:client.model.Client:521 ] - [ INFO ]  {"messageType":"SelectMap","messageBody":{"availableMaps":["Dizzy Highway","Lost Bearings","Death Trap","Extra Crispy","Twister"]}}
2021-07-05 11:35:37  [ Thread-4:server.network.ServerThread:99 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 11:35:37  [ JavaFX Application Thread:client.model.Client:478 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 11:35:37  [ Thread-4:protocol.ExecuteOrder:82 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 11:35:37  [ Thread-4:protocol.ExecuteOrder:84 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 11:35:40  [ JavaFX Application Thread:client.model.Client:979 ] - [ INFO ]  {"messageType":"MapSelected","messageBody":{"map":"Dizzy Highway"}}
2021-07-05 11:35:40  [ Thread-260:server.network.ServerThread:99 ] - [ INFO ]  excuteOrder by server {"messageType":"MapSelected","messageBody":{"map":"Dizzy Highway"}}
2021-07-05 11:35:40  [ Thread-260:protocol.ExecuteOrder:121 ] - [ INFO ]  set Map in ExecuteOrder
2021-07-05 11:35:40  [ Thread-260:server.network.Server:638 ] - [ INFO ]  server informs which map selected
2021-07-05 11:35:40  [ Thread-6:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 11:35:40  [ Thread-259:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-259
2021-07-05 11:35:40  [ Thread-259:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"MapSelected","messageBody":{"map":"Dizzy Highway"}}Thread-259
2021-07-05 11:35:40  [ Thread-6:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"MapSelected","messageBody":{"map":"Dizzy Highway"}}Thread-6
2021-07-05 11:35:40  [ Thread-260:server.game.Game:228 ] - [ INFO ]  Game sets map.
2021-07-05 11:35:40  [ Thread-260:server.maps.Board:19 ] - [ INFO ]  Board sets map of Dizzy Highway.
2021-07-05 11:35:40  [ Thread-260:protocol.ExecuteOrder:462 ] - [ INFO ]  number of ready clients: 2
2021-07-05 11:35:40  [ Thread-260:protocol.ExecuteOrder:464 ] - [ INFO ]  number enough, to play
2021-07-05 11:35:40  [ Thread-260:server.network.Server:278 ] - [ INFO ]  server sends map
2021-07-05 11:35:40  [ Thread-260:server.network.Server:305 ] - [ INFO ]  server sends phase info
2021-07-05 11:35:40  [ Thread-6:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 11:35:40  [ Thread-259:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-259
2021-07-05 11:35:40  [ Thread-260:server.network.Server:315 ] - [ INFO ]  server informs current player id
2021-07-05 11:35:40  [ Thread-6:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"GameStarted","messageBody":{"gameMap":[[[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Antenna","isOnBoard":"Start A","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["top"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"ConveyorBelt","isOnBoard":"Start A","speed":1,"orientations":["right","left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"Start A","speed":1,"orientations":["right","left"],"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}]],[[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom","top","right"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom","left","top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right","left","top"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left","top","right"],"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["top"],"registers":null,"count":0}],[{"type":"Laser","isOnBoard":"5B","speed":0,"orientations":["top"],"registers":null,"count":1},{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0},{"type":"RestartPoint","isOnBoard":"DizzyHighway","speed":0,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"Laser","isOnBoard":"5B","speed":0,"orientations":["left"],"registers":null,"count":1},{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Laser","isOnBoard":"5B","speed":0,"orientations":["right"],"registers":null,"count":1},{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["left"],"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Laser","isOnBoard":"5B","speed":0,"orientations":["bottom"],"registers":null,"count":1},{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["top"],"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right","bottom","left"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left","right","bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top","right","bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top","bottom","left"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}]],[[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0},{"type":"CheckPoint","isOnBoard":"DizzyHighway","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]]]}}Thread-6
2021-07-05 11:35:40  [ Thread-6:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 11:35:40  [ Thread-259:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"GameStarted","messageBody":{"gameMap":[[[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Antenna","isOnBoard":"Start A","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["top"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"ConveyorBelt","isOnBoard":"Start A","speed":1,"orientations":["right","left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"Start A","speed":1,"orientations":["right","left"],"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}]],[[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom","top","right"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom","left","top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right","left","top"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left","top","right"],"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["top"],"registers":null,"count":0}],[{"type":"Laser","isOnBoard":"5B","speed":0,"orientations":["top"],"registers":null,"count":1},{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0},{"type":"RestartPoint","isOnBoard":"DizzyHighway","speed":0,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"Laser","isOnBoard":"5B","speed":0,"orientations":["left"],"registers":null,"count":1},{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Laser","isOnBoard":"5B","speed":0,"orientations":["right"],"registers":null,"count":1},{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["left"],"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Laser","isOnBoard":"5B","speed":0,"orientations":["bottom"],"registers":null,"count":1},{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["top"],"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right","bottom","left"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left","right","bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top","right","bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top","bottom","left"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}]],[[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0},{"type":"CheckPoint","isOnBoard":"DizzyHighway","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]]]}}Thread-259
2021-07-05 11:35:40  [ Thread-259:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-259
2021-07-05 11:35:40  [ Thread-6:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"ActivePhase","messageBody":{"phase":0}}Thread-6
2021-07-05 11:35:40  [ Thread-6:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 11:35:40  [ Thread-259:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"ActivePhase","messageBody":{"phase":0}}Thread-259
2021-07-05 11:35:40  [ Thread-259:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-259
2021-07-05 11:35:40  [ Thread-6:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-6
2021-07-05 11:35:40  [ Thread-259:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-259
2021-07-05 11:35:41  [ Thread-2712:server.network.Connected:55 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 11:35:42  [ Thread-2715:server.network.Connected:55 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 11:35:43  [ JavaFX Application Thread:client.model.Client:1045 ] - [ INFO ]  {"messageType":"SetStartingPoint","messageBody":{"x":1,"y":5}}
2021-07-05 11:35:43  [ Thread-4:server.network.ServerThread:99 ] - [ INFO ]  excuteOrder by server {"messageType":"SetStartingPoint","messageBody":{"x":1,"y":5}}
2021-07-05 11:35:43  [ Thread-4:server.network.Server:328 ] - [ INFO ]  server informs set starting point
2021-07-05 11:35:43  [ Thread-6:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 11:35:43  [ Thread-259:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-259
2021-07-05 11:35:43  [ Thread-4:server.network.Server:315 ] - [ INFO ]  server informs current player id
2021-07-05 11:35:43  [ Thread-259:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"StartingPointTaken","messageBody":{"x":1,"y":5,"clientID":33}}Thread-259
2021-07-05 11:35:43  [ Thread-6:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"StartingPointTaken","messageBody":{"x":1,"y":5,"clientID":33}}Thread-6
2021-07-05 11:35:43  [ Thread-259:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-259
2021-07-05 11:35:43  [ Thread-6:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 11:35:43  [ Thread-6:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":100}}Thread-6
2021-07-05 11:35:43  [ Thread-259:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":100}}Thread-259
2021-07-05 11:35:43  [ JavaFX Application Thread:client.model.Client:635 ] - [ INFO ]  1
2021-07-05 11:35:43  [ JavaFX Application Thread:client.model.Client:635 ] - [ INFO ]  1
2021-07-05 11:35:45  [ JavaFX Application Thread:client.model.Client:1045 ] - [ INFO ]  {"messageType":"SetStartingPoint","messageBody":{"x":0,"y":6}}
2021-07-05 11:35:45  [ Thread-260:server.network.ServerThread:99 ] - [ INFO ]  excuteOrder by server {"messageType":"SetStartingPoint","messageBody":{"x":0,"y":6}}
2021-07-05 11:35:45  [ Thread-260:server.network.Server:328 ] - [ INFO ]  server informs set starting point
2021-07-05 11:35:45  [ Thread-6:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 11:35:45  [ Thread-259:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-259
2021-07-05 11:35:45  [ Thread-260:server.network.Server:305 ] - [ INFO ]  server sends phase info
2021-07-05 11:35:45  [ Thread-6:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"StartingPointTaken","messageBody":{"x":0,"y":6,"clientID":100}}Thread-6
2021-07-05 11:35:45  [ Thread-259:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"StartingPointTaken","messageBody":{"x":0,"y":6,"clientID":100}}Thread-259
2021-07-05 11:35:45  [ Thread-260:server.network.Server:654 ] - [ INFO ]  server informs Refill upgrade shop.
2021-07-05 11:35:45  [ Thread-6:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 11:35:45  [ Thread-259:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-259
2021-07-05 11:35:45  [ Thread-260:server.network.Server:315 ] - [ INFO ]  server informs current player id
2021-07-05 11:35:45  [ JavaFX Application Thread:client.model.Client:635 ] - [ INFO ]  0
2021-07-05 11:35:45  [ Thread-259:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"ActivePhase","messageBody":{"phase":1}}Thread-259
2021-07-05 11:35:45  [ Thread-6:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"ActivePhase","messageBody":{"phase":1}}Thread-6
2021-07-05 11:35:45  [ Thread-259:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-259
2021-07-05 11:35:45  [ Thread-6:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 11:35:45  [ Thread-6:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"RefillShop","messageBody":{"cards":["MemorySwap","RealLaser","RealLaser","SpamBlocker"]}}Thread-6
2021-07-05 11:35:45  [ Thread-259:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"RefillShop","messageBody":{"cards":["MemorySwap","RealLaser","RealLaser","SpamBlocker"]}}Thread-259
2021-07-05 11:35:45  [ Thread-259:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-259
2021-07-05 11:35:45  [ Thread-6:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 11:35:45  [ JavaFX Application Thread:client.model.Client:635 ] - [ INFO ]  0
2021-07-05 11:35:45  [ Thread-259:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":100}}Thread-259
2021-07-05 11:35:45  [ Thread-6:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":100}}Thread-6
2021-07-05 11:35:46  [ Thread-2712:server.network.Connected:55 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 11:35:46  [ Thread-2713:server.network.AliveCheck:50 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-05 11:35:46  [ Thread-2713:server.network.AliveCheck:51 ] - [ INFO ]  client 100 flag connect = false
2021-07-05 11:35:46  [ Thread-2713:server.network.Server:188 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-05 11:35:46  [ Thread-259:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-259
2021-07-05 11:35:46  [ Thread-259:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-259
2021-07-05 11:35:46  [ JavaFX Application Thread:client.model.Client:478 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-05 11:35:46  [ Thread-260:server.network.ServerThread:99 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 11:35:46  [ Thread-260:protocol.ExecuteOrder:82 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-05 11:35:46  [ Thread-260:protocol.ExecuteOrder:84 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-05 11:35:47  [ Thread-2716:server.network.AliveCheck:50 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 11:35:47  [ Thread-2716:server.network.AliveCheck:51 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 11:35:47  [ Thread-2715:server.network.Connected:55 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 11:35:47  [ Thread-2715:server.network.Connected:58 ] - [ INFO ]  33 in first if print flagconnect: true
2021-07-05 11:35:47  [ Thread-2716:server.network.Server:188 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 11:35:47  [ Thread-6:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 11:35:47  [ Thread-6:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 11:35:47  [ JavaFX Application Thread:client.model.Client:478 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 11:35:47  [ Thread-4:server.network.ServerThread:99 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 11:35:47  [ Thread-4:protocol.ExecuteOrder:82 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 11:35:47  [ Thread-4:protocol.ExecuteOrder:84 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 11:35:51  [ Thread-2712:server.network.Connected:55 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 11:35:54  [ Thread-2715:server.network.Connected:55 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 11:35:56  [ Thread-2712:server.network.Connected:55 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 11:35:56  [ Thread-2713:server.network.AliveCheck:50 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-05 11:35:56  [ Thread-2713:server.network.AliveCheck:51 ] - [ INFO ]  client 100 flag connect = false
2021-07-05 11:35:56  [ Thread-2713:server.network.Server:188 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-05 11:35:56  [ Thread-259:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-259
2021-07-05 11:35:56  [ Thread-259:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-259
2021-07-05 11:35:56  [ JavaFX Application Thread:client.model.Client:478 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-05 11:35:56  [ Thread-260:server.network.ServerThread:99 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 11:35:56  [ Thread-260:protocol.ExecuteOrder:82 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-05 11:35:56  [ Thread-260:protocol.ExecuteOrder:84 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-05 11:35:57  [ Thread-2716:server.network.AliveCheck:50 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 11:35:57  [ Thread-2716:server.network.AliveCheck:51 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 11:35:57  [ Thread-2716:server.network.Server:188 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 11:35:57  [ Thread-6:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 11:35:57  [ Thread-6:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 11:35:57  [ JavaFX Application Thread:client.model.Client:478 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 11:35:57  [ Thread-4:server.network.ServerThread:99 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 11:35:57  [ Thread-4:protocol.ExecuteOrder:82 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 11:35:57  [ Thread-4:protocol.ExecuteOrder:84 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 11:35:59  [ Thread-2715:server.network.Connected:55 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 11:36:01  [ Thread-2712:server.network.Connected:55 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 11:36:04  [ Thread-2715:server.network.Connected:55 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 11:36:06  [ Thread-2712:server.network.Connected:55 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 11:36:06  [ Thread-2713:server.network.AliveCheck:50 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-05 11:36:06  [ Thread-2713:server.network.AliveCheck:51 ] - [ INFO ]  client 100 flag connect = false
2021-07-05 11:36:06  [ Thread-2713:server.network.Server:188 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-05 11:36:06  [ Thread-259:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-259
2021-07-05 11:36:06  [ Thread-259:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-259
2021-07-05 11:36:06  [ JavaFX Application Thread:client.model.Client:478 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-05 11:36:06  [ Thread-260:server.network.ServerThread:99 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 11:36:06  [ Thread-260:protocol.ExecuteOrder:82 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-05 11:36:06  [ Thread-260:protocol.ExecuteOrder:84 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-05 11:36:07  [ Thread-2716:server.network.AliveCheck:50 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 11:36:07  [ Thread-2716:server.network.AliveCheck:51 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 11:36:07  [ Thread-2716:server.network.Server:188 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 11:36:07  [ Thread-6:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 11:36:07  [ Thread-6:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 11:36:07  [ JavaFX Application Thread:client.model.Client:478 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 11:36:07  [ Thread-4:server.network.ServerThread:99 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 11:36:07  [ Thread-4:protocol.ExecuteOrder:82 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 11:36:07  [ Thread-4:protocol.ExecuteOrder:84 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 11:36:09  [ Thread-2715:server.network.Connected:55 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 11:36:11  [ Thread-2712:server.network.Connected:55 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 11:36:14  [ Thread-2715:server.network.Connected:55 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 11:36:16  [ Thread-2712:server.network.Connected:55 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 11:36:16  [ Thread-2713:server.network.AliveCheck:50 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-05 11:36:16  [ Thread-2713:server.network.AliveCheck:51 ] - [ INFO ]  client 100 flag connect = false
2021-07-05 11:36:16  [ Thread-2713:server.network.Server:188 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-05 11:36:16  [ Thread-259:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-259
2021-07-05 11:36:16  [ Thread-259:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-259
2021-07-05 11:36:16  [ JavaFX Application Thread:client.model.Client:478 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-05 11:36:16  [ Thread-260:server.network.ServerThread:99 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 11:36:16  [ Thread-260:protocol.ExecuteOrder:82 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-05 11:36:16  [ Thread-260:protocol.ExecuteOrder:84 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-05 11:36:17  [ Thread-2716:server.network.AliveCheck:50 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 11:36:17  [ Thread-2716:server.network.AliveCheck:51 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 11:36:17  [ Thread-2716:server.network.Server:188 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 11:36:17  [ Thread-6:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 11:36:17  [ Thread-6:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 11:36:17  [ JavaFX Application Thread:client.model.Client:478 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 11:36:17  [ Thread-4:server.network.ServerThread:99 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 11:36:17  [ Thread-4:protocol.ExecuteOrder:82 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 11:36:17  [ Thread-4:protocol.ExecuteOrder:84 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 11:36:19  [ Thread-2715:server.network.Connected:55 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 11:36:21  [ Thread-2712:server.network.Connected:55 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 11:36:24  [ Thread-2715:server.network.Connected:55 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 11:36:26  [ Thread-2712:server.network.Connected:55 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 11:36:26  [ Thread-2713:server.network.AliveCheck:50 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-05 11:36:26  [ Thread-2713:server.network.AliveCheck:51 ] - [ INFO ]  client 100 flag connect = false
2021-07-05 11:36:26  [ Thread-2713:server.network.Server:188 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-05 11:36:26  [ Thread-259:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-259
2021-07-05 11:36:26  [ Thread-259:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-259
2021-07-05 11:36:26  [ JavaFX Application Thread:client.model.Client:478 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-05 11:36:26  [ Thread-260:server.network.ServerThread:99 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 11:36:26  [ Thread-260:protocol.ExecuteOrder:82 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-05 11:36:26  [ Thread-260:protocol.ExecuteOrder:84 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-05 11:36:27  [ Thread-2716:server.network.AliveCheck:50 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 11:36:27  [ Thread-2716:server.network.AliveCheck:51 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 11:36:27  [ Thread-2716:server.network.Server:188 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 11:36:27  [ Thread-6:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 11:36:27  [ Thread-6:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 11:36:27  [ JavaFX Application Thread:client.model.Client:478 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 11:36:27  [ Thread-4:server.network.ServerThread:99 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 11:36:27  [ Thread-4:protocol.ExecuteOrder:82 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 11:36:27  [ Thread-4:protocol.ExecuteOrder:84 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 11:36:29  [ Thread-2715:server.network.Connected:55 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 11:36:31  [ Thread-2712:server.network.Connected:55 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 11:36:34  [ Thread-2715:server.network.Connected:55 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 11:36:36  [ Thread-2712:server.network.Connected:55 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 11:36:36  [ Thread-2713:server.network.AliveCheck:50 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-05 11:36:36  [ Thread-2713:server.network.AliveCheck:51 ] - [ INFO ]  client 100 flag connect = false
2021-07-05 11:36:36  [ Thread-2713:server.network.Server:188 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-05 11:36:36  [ Thread-259:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-259
2021-07-05 11:36:36  [ Thread-259:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-259
2021-07-05 11:36:36  [ JavaFX Application Thread:client.model.Client:478 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-05 11:36:36  [ Thread-260:server.network.ServerThread:99 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 11:36:36  [ Thread-260:protocol.ExecuteOrder:82 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-05 11:36:36  [ Thread-260:protocol.ExecuteOrder:84 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-05 11:36:37  [ Thread-2716:server.network.AliveCheck:50 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 11:36:37  [ Thread-2716:server.network.AliveCheck:51 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 11:36:37  [ Thread-2716:server.network.Server:188 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 11:36:37  [ Thread-6:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 11:36:37  [ Thread-6:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 11:36:37  [ JavaFX Application Thread:client.model.Client:478 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 11:36:37  [ Thread-4:server.network.ServerThread:99 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 11:36:37  [ Thread-4:protocol.ExecuteOrder:82 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 11:36:37  [ Thread-4:protocol.ExecuteOrder:84 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 11:36:39  [ Thread-2715:server.network.Connected:55 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 11:36:41  [ Thread-2712:server.network.Connected:55 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 11:36:44  [ Thread-2715:server.network.Connected:55 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 11:36:46  [ Thread-2712:server.network.Connected:55 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 11:36:46  [ Thread-2713:server.network.AliveCheck:50 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-05 11:36:46  [ Thread-2713:server.network.AliveCheck:51 ] - [ INFO ]  client 100 flag connect = false
2021-07-05 11:36:46  [ Thread-2713:server.network.Server:188 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-05 11:36:46  [ Thread-259:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-259
2021-07-05 11:36:46  [ Thread-259:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-259
2021-07-05 11:36:46  [ JavaFX Application Thread:client.model.Client:478 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-05 11:36:46  [ Thread-260:server.network.ServerThread:99 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 11:36:46  [ Thread-260:protocol.ExecuteOrder:82 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-05 11:36:46  [ Thread-260:protocol.ExecuteOrder:84 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-05 11:36:47  [ Thread-2716:server.network.AliveCheck:50 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 11:36:47  [ Thread-2716:server.network.AliveCheck:51 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 11:36:47  [ Thread-2716:server.network.Server:188 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 11:36:47  [ Thread-6:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 11:36:47  [ Thread-6:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 11:36:47  [ JavaFX Application Thread:client.model.Client:478 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 11:36:47  [ Thread-4:server.network.ServerThread:99 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 11:36:47  [ Thread-4:protocol.ExecuteOrder:82 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 11:36:47  [ Thread-4:protocol.ExecuteOrder:84 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 11:36:49  [ Thread-2715:server.network.Connected:55 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 11:36:51  [ Thread-2712:server.network.Connected:55 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 11:36:54  [ Thread-2715:server.network.Connected:55 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 11:36:56  [ Thread-2712:server.network.Connected:55 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 11:36:56  [ Thread-2713:server.network.AliveCheck:50 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-05 11:36:56  [ Thread-2713:server.network.AliveCheck:51 ] - [ INFO ]  client 100 flag connect = false
2021-07-05 11:36:56  [ Thread-2713:server.network.Server:188 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-05 11:36:56  [ Thread-259:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-259
2021-07-05 11:36:56  [ Thread-259:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-259
2021-07-05 11:36:56  [ JavaFX Application Thread:client.model.Client:478 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-05 11:36:56  [ Thread-260:server.network.ServerThread:99 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 11:36:56  [ Thread-260:protocol.ExecuteOrder:82 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-05 11:36:56  [ Thread-260:protocol.ExecuteOrder:84 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-05 11:36:57  [ Thread-2716:server.network.AliveCheck:50 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 11:36:57  [ Thread-2716:server.network.AliveCheck:51 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 11:36:57  [ Thread-2716:server.network.Server:188 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 11:36:57  [ Thread-6:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 11:36:57  [ Thread-6:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 11:36:57  [ JavaFX Application Thread:client.model.Client:478 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 11:36:57  [ Thread-4:server.network.ServerThread:99 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 11:36:57  [ Thread-4:protocol.ExecuteOrder:82 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 11:36:57  [ Thread-4:protocol.ExecuteOrder:84 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 11:36:59  [ Thread-2715:server.network.Connected:55 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 11:37:01  [ Thread-2712:server.network.Connected:55 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 11:37:04  [ Thread-2715:server.network.Connected:55 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 11:37:06  [ Thread-2712:server.network.Connected:55 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 11:37:06  [ Thread-2713:server.network.AliveCheck:50 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-05 11:37:06  [ Thread-2713:server.network.AliveCheck:51 ] - [ INFO ]  client 100 flag connect = false
2021-07-05 11:37:06  [ Thread-2713:server.network.Server:188 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-05 11:37:06  [ Thread-259:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-259
2021-07-05 11:37:06  [ Thread-259:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-259
2021-07-05 11:37:06  [ JavaFX Application Thread:client.model.Client:478 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-05 11:37:06  [ Thread-260:server.network.ServerThread:99 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 11:37:06  [ Thread-260:protocol.ExecuteOrder:82 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-05 11:37:06  [ Thread-260:protocol.ExecuteOrder:84 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-05 11:37:07  [ Thread-2716:server.network.AliveCheck:50 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 11:37:07  [ Thread-2716:server.network.AliveCheck:51 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 11:37:07  [ Thread-2716:server.network.Server:188 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 11:37:07  [ Thread-6:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 11:37:07  [ Thread-6:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 11:37:07  [ JavaFX Application Thread:client.model.Client:478 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 11:37:07  [ Thread-4:server.network.ServerThread:99 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 11:37:07  [ Thread-4:protocol.ExecuteOrder:82 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 11:37:07  [ Thread-4:protocol.ExecuteOrder:84 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 11:37:09  [ Thread-2715:server.network.Connected:55 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 11:37:11  [ Thread-2712:server.network.Connected:55 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 11:37:14  [ Thread-2715:server.network.Connected:55 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 11:37:16  [ Thread-2712:server.network.Connected:55 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 11:37:16  [ Thread-2713:server.network.AliveCheck:50 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-05 11:37:16  [ Thread-2713:server.network.AliveCheck:51 ] - [ INFO ]  client 100 flag connect = false
2021-07-05 11:37:16  [ Thread-2713:server.network.Server:188 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-05 11:37:16  [ Thread-259:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-259
2021-07-05 11:37:16  [ Thread-259:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-259
2021-07-05 11:37:16  [ JavaFX Application Thread:client.model.Client:478 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-05 11:37:16  [ Thread-260:server.network.ServerThread:99 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 11:37:16  [ Thread-260:protocol.ExecuteOrder:82 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-05 11:37:16  [ Thread-260:protocol.ExecuteOrder:84 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-05 11:37:17  [ Thread-2716:server.network.AliveCheck:50 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 11:37:17  [ Thread-2716:server.network.AliveCheck:51 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 11:37:17  [ Thread-2716:server.network.Server:188 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 11:37:17  [ Thread-6:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 11:37:17  [ Thread-6:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 11:37:17  [ JavaFX Application Thread:client.model.Client:478 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 11:37:17  [ Thread-4:server.network.ServerThread:99 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 11:37:17  [ Thread-4:protocol.ExecuteOrder:82 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 11:37:17  [ Thread-4:protocol.ExecuteOrder:84 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 11:37:19  [ Thread-2715:server.network.Connected:55 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 11:37:21  [ Thread-2712:server.network.Connected:55 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 11:37:24  [ Thread-2715:server.network.Connected:55 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 11:37:26  [ Thread-2712:server.network.Connected:55 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 11:37:26  [ Thread-2713:server.network.AliveCheck:50 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-05 11:37:26  [ Thread-2713:server.network.AliveCheck:51 ] - [ INFO ]  client 100 flag connect = false
2021-07-05 11:37:26  [ Thread-2713:server.network.Server:188 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-05 11:37:26  [ Thread-259:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-259
2021-07-05 11:37:26  [ Thread-259:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-259
2021-07-05 11:37:26  [ JavaFX Application Thread:client.model.Client:478 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-05 11:37:26  [ Thread-260:server.network.ServerThread:99 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 11:37:26  [ Thread-260:protocol.ExecuteOrder:82 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-05 11:37:26  [ Thread-260:protocol.ExecuteOrder:84 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-05 11:37:27  [ Thread-2716:server.network.AliveCheck:50 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 11:37:27  [ Thread-2716:server.network.AliveCheck:51 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 11:37:27  [ Thread-2716:server.network.Server:188 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 11:37:27  [ Thread-6:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 11:37:27  [ Thread-6:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 11:37:27  [ JavaFX Application Thread:client.model.Client:478 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 11:37:27  [ Thread-4:server.network.ServerThread:99 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 11:37:27  [ Thread-4:protocol.ExecuteOrder:82 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 11:37:27  [ Thread-4:protocol.ExecuteOrder:84 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 11:37:29  [ Thread-2715:server.network.Connected:55 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 11:37:31  [ Thread-2712:server.network.Connected:55 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 11:37:34  [ Thread-2715:server.network.Connected:55 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 11:37:36  [ Thread-2712:server.network.Connected:55 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 11:37:36  [ Thread-2713:server.network.AliveCheck:50 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-05 11:37:36  [ Thread-2713:server.network.AliveCheck:51 ] - [ INFO ]  client 100 flag connect = false
2021-07-05 11:37:36  [ Thread-2713:server.network.Server:188 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-05 11:37:36  [ Thread-259:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-259
2021-07-05 11:37:36  [ Thread-259:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-259
2021-07-05 11:37:36  [ JavaFX Application Thread:client.model.Client:478 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-05 11:37:36  [ Thread-260:server.network.ServerThread:99 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 11:37:36  [ Thread-260:protocol.ExecuteOrder:82 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-05 11:37:36  [ Thread-260:protocol.ExecuteOrder:84 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-05 11:37:37  [ Thread-2716:server.network.AliveCheck:50 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 11:37:37  [ Thread-2716:server.network.AliveCheck:51 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 11:37:37  [ Thread-2716:server.network.Server:188 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 11:37:37  [ Thread-6:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 11:37:37  [ Thread-6:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 11:37:37  [ JavaFX Application Thread:client.model.Client:478 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 11:37:37  [ Thread-4:server.network.ServerThread:99 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 11:37:37  [ Thread-4:protocol.ExecuteOrder:82 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 11:37:37  [ Thread-4:protocol.ExecuteOrder:84 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 11:37:39  [ Thread-2715:server.network.Connected:55 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 11:37:41  [ Thread-2712:server.network.Connected:55 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 11:37:44  [ Thread-2715:server.network.Connected:55 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 11:37:46  [ Thread-2712:server.network.Connected:55 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 11:37:46  [ Thread-2713:server.network.AliveCheck:50 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-05 11:37:46  [ Thread-2713:server.network.AliveCheck:51 ] - [ INFO ]  client 100 flag connect = false
2021-07-05 11:37:46  [ Thread-2713:server.network.Server:188 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-05 11:37:46  [ Thread-259:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-259
2021-07-05 11:37:46  [ Thread-259:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-259
2021-07-05 11:37:46  [ JavaFX Application Thread:client.model.Client:478 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-05 11:37:46  [ Thread-260:server.network.ServerThread:99 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 11:37:46  [ Thread-260:protocol.ExecuteOrder:82 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-05 11:37:46  [ Thread-260:protocol.ExecuteOrder:84 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-05 11:37:47  [ Thread-2716:server.network.AliveCheck:50 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 11:37:47  [ Thread-2716:server.network.AliveCheck:51 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 11:37:47  [ Thread-2716:server.network.Server:188 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 11:37:47  [ Thread-6:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 11:37:47  [ Thread-6:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 11:37:47  [ JavaFX Application Thread:client.model.Client:478 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 11:37:47  [ Thread-4:server.network.ServerThread:99 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 11:37:47  [ Thread-4:protocol.ExecuteOrder:82 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 11:37:47  [ Thread-4:protocol.ExecuteOrder:84 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 11:37:49  [ Thread-2715:server.network.Connected:55 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 11:37:51  [ Thread-2712:server.network.Connected:55 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 11:37:54  [ Thread-2715:server.network.Connected:55 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 11:37:56  [ Thread-2712:server.network.Connected:55 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 11:37:56  [ Thread-2713:server.network.AliveCheck:50 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-05 11:37:56  [ Thread-2713:server.network.AliveCheck:51 ] - [ INFO ]  client 100 flag connect = false
2021-07-05 11:37:56  [ Thread-2713:server.network.Server:188 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-05 11:37:56  [ Thread-259:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-259
2021-07-05 11:37:56  [ Thread-259:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-259
2021-07-05 11:37:56  [ JavaFX Application Thread:client.model.Client:478 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-05 11:37:56  [ Thread-260:server.network.ServerThread:99 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 11:37:56  [ Thread-260:protocol.ExecuteOrder:82 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-05 11:37:56  [ Thread-260:protocol.ExecuteOrder:84 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-05 11:37:57  [ Thread-2716:server.network.AliveCheck:50 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 11:37:57  [ Thread-2716:server.network.AliveCheck:51 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 11:37:57  [ Thread-2716:server.network.Server:188 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 11:37:57  [ Thread-6:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 11:37:57  [ Thread-6:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 11:37:57  [ JavaFX Application Thread:client.model.Client:478 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 11:37:57  [ Thread-4:server.network.ServerThread:99 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 11:37:57  [ Thread-4:protocol.ExecuteOrder:82 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 11:37:57  [ Thread-4:protocol.ExecuteOrder:84 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 11:37:59  [ Thread-2715:server.network.Connected:55 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 11:38:01  [ Thread-2712:server.network.Connected:55 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 11:38:04  [ Thread-2715:server.network.Connected:55 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 11:38:06  [ Thread-2712:server.network.Connected:55 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 11:38:06  [ Thread-2713:server.network.AliveCheck:50 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-05 11:38:06  [ Thread-2713:server.network.AliveCheck:51 ] - [ INFO ]  client 100 flag connect = false
2021-07-05 11:38:06  [ Thread-2713:server.network.Server:188 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-05 11:38:06  [ Thread-259:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-259
2021-07-05 11:38:06  [ Thread-259:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-259
2021-07-05 11:38:06  [ JavaFX Application Thread:client.model.Client:478 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-05 11:38:06  [ Thread-260:server.network.ServerThread:99 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 11:38:06  [ Thread-260:protocol.ExecuteOrder:82 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-05 11:38:06  [ Thread-260:protocol.ExecuteOrder:84 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-05 11:38:07  [ Thread-2716:server.network.AliveCheck:50 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 11:38:07  [ Thread-2716:server.network.AliveCheck:51 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 11:38:07  [ Thread-2716:server.network.Server:188 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 11:38:07  [ Thread-6:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 11:38:07  [ Thread-6:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 11:38:07  [ JavaFX Application Thread:client.model.Client:478 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 11:38:07  [ Thread-4:server.network.ServerThread:99 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 11:38:07  [ Thread-4:protocol.ExecuteOrder:82 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 11:38:07  [ Thread-4:protocol.ExecuteOrder:84 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 11:38:09  [ Thread-2715:server.network.Connected:55 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 11:38:11  [ Thread-2712:server.network.Connected:55 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 11:38:14  [ Thread-2715:server.network.Connected:55 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 11:38:16  [ Thread-2712:server.network.Connected:55 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 11:38:16  [ Thread-2713:server.network.AliveCheck:50 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-05 11:38:16  [ Thread-2713:server.network.AliveCheck:51 ] - [ INFO ]  client 100 flag connect = false
2021-07-05 11:38:16  [ Thread-2713:server.network.Server:188 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-05 11:38:16  [ Thread-259:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-259
2021-07-05 11:38:16  [ Thread-259:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-259
2021-07-05 11:38:16  [ JavaFX Application Thread:client.model.Client:478 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-05 11:38:16  [ Thread-260:server.network.ServerThread:99 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 11:38:16  [ Thread-260:protocol.ExecuteOrder:82 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-05 11:38:16  [ Thread-260:protocol.ExecuteOrder:84 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-05 11:38:17  [ Thread-2716:server.network.AliveCheck:50 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 11:38:17  [ Thread-2716:server.network.AliveCheck:51 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 11:38:17  [ Thread-2716:server.network.Server:188 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 11:38:17  [ Thread-6:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 11:38:17  [ Thread-6:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 11:38:17  [ JavaFX Application Thread:client.model.Client:478 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 11:38:17  [ Thread-4:server.network.ServerThread:99 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 11:38:17  [ Thread-4:protocol.ExecuteOrder:82 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 11:38:17  [ Thread-4:protocol.ExecuteOrder:84 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 11:38:19  [ Thread-2715:server.network.Connected:55 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 11:38:21  [ Thread-2712:server.network.Connected:55 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 11:38:24  [ Thread-2715:server.network.Connected:55 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 11:38:26  [ Thread-2712:server.network.Connected:55 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 11:38:26  [ Thread-2713:server.network.AliveCheck:50 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-05 11:38:26  [ Thread-2713:server.network.AliveCheck:51 ] - [ INFO ]  client 100 flag connect = false
2021-07-05 11:38:26  [ Thread-2713:server.network.Server:188 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-05 11:38:26  [ Thread-259:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-259
2021-07-05 11:38:26  [ Thread-259:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-259
2021-07-05 11:38:26  [ JavaFX Application Thread:client.model.Client:478 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-05 11:38:26  [ Thread-260:server.network.ServerThread:99 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 11:38:26  [ Thread-260:protocol.ExecuteOrder:82 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-05 11:38:26  [ Thread-260:protocol.ExecuteOrder:84 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-05 11:38:27  [ Thread-2716:server.network.AliveCheck:50 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 11:38:27  [ Thread-2716:server.network.AliveCheck:51 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 11:38:27  [ Thread-2716:server.network.Server:188 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 11:38:27  [ Thread-6:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 11:38:27  [ Thread-6:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 11:38:27  [ JavaFX Application Thread:client.model.Client:478 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 11:38:27  [ Thread-4:server.network.ServerThread:99 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 11:38:27  [ Thread-4:protocol.ExecuteOrder:82 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 11:38:27  [ Thread-4:protocol.ExecuteOrder:84 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 11:38:29  [ Thread-2715:server.network.Connected:55 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 11:38:31  [ Thread-2712:server.network.Connected:55 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 11:38:34  [ Thread-2715:server.network.Connected:55 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 11:38:36  [ Thread-2712:server.network.Connected:55 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 11:38:36  [ Thread-2713:server.network.AliveCheck:50 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-05 11:38:36  [ Thread-2713:server.network.AliveCheck:51 ] - [ INFO ]  client 100 flag connect = false
2021-07-05 11:38:36  [ Thread-2713:server.network.Server:188 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-05 11:38:36  [ Thread-259:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-259
2021-07-05 11:38:36  [ Thread-259:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-259
2021-07-05 11:38:36  [ JavaFX Application Thread:client.model.Client:478 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-05 11:38:36  [ Thread-260:server.network.ServerThread:99 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 11:38:36  [ Thread-260:protocol.ExecuteOrder:82 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-05 11:38:36  [ Thread-260:protocol.ExecuteOrder:84 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-05 11:38:37  [ Thread-2716:server.network.AliveCheck:50 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 11:38:37  [ Thread-2716:server.network.AliveCheck:51 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 11:38:37  [ Thread-2716:server.network.Server:188 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 11:38:37  [ Thread-6:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 11:38:37  [ Thread-6:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 11:38:37  [ JavaFX Application Thread:client.model.Client:478 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 11:38:37  [ Thread-4:server.network.ServerThread:99 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 11:38:37  [ Thread-4:protocol.ExecuteOrder:82 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 11:38:37  [ Thread-4:protocol.ExecuteOrder:84 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 11:38:39  [ Thread-2715:server.network.Connected:55 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 11:38:41  [ Thread-2712:server.network.Connected:55 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 11:38:44  [ Thread-2715:server.network.Connected:55 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 11:38:46  [ Thread-2712:server.network.Connected:55 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 11:38:46  [ Thread-2713:server.network.AliveCheck:50 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-05 11:38:46  [ Thread-2713:server.network.AliveCheck:51 ] - [ INFO ]  client 100 flag connect = false
2021-07-05 11:38:46  [ Thread-2713:server.network.Server:188 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-05 11:38:46  [ Thread-259:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-259
2021-07-05 11:38:46  [ Thread-259:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-259
2021-07-05 11:38:46  [ JavaFX Application Thread:client.model.Client:478 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-05 11:38:46  [ Thread-260:server.network.ServerThread:99 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 11:38:46  [ Thread-260:protocol.ExecuteOrder:82 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-05 11:38:46  [ Thread-260:protocol.ExecuteOrder:84 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-05 11:38:47  [ Thread-2716:server.network.AliveCheck:50 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 11:38:47  [ Thread-2716:server.network.AliveCheck:51 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 11:38:47  [ Thread-2716:server.network.Server:188 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 11:38:47  [ Thread-6:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 11:38:47  [ Thread-6:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 11:38:47  [ JavaFX Application Thread:client.model.Client:478 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 11:38:47  [ Thread-4:server.network.ServerThread:99 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 11:38:47  [ Thread-4:protocol.ExecuteOrder:82 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 11:38:47  [ Thread-4:protocol.ExecuteOrder:84 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 11:38:49  [ Thread-2715:server.network.Connected:55 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 11:38:51  [ Thread-2712:server.network.Connected:55 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 11:38:54  [ Thread-2715:server.network.Connected:55 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 11:38:56  [ Thread-2712:server.network.Connected:55 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 11:38:56  [ Thread-2713:server.network.AliveCheck:50 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-05 11:38:56  [ Thread-2713:server.network.AliveCheck:51 ] - [ INFO ]  client 100 flag connect = false
2021-07-05 11:38:56  [ Thread-2713:server.network.Server:188 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-05 11:38:56  [ Thread-259:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-259
2021-07-05 11:38:56  [ Thread-259:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-259
2021-07-05 11:38:56  [ JavaFX Application Thread:client.model.Client:478 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-05 11:38:56  [ Thread-260:server.network.ServerThread:99 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 11:38:56  [ Thread-260:protocol.ExecuteOrder:82 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-05 11:38:56  [ Thread-260:protocol.ExecuteOrder:84 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-05 11:38:57  [ Thread-2716:server.network.AliveCheck:50 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 11:38:57  [ Thread-2716:server.network.AliveCheck:51 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 11:38:57  [ Thread-2716:server.network.Server:188 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 11:38:57  [ Thread-6:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 11:38:57  [ Thread-6:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 11:38:57  [ JavaFX Application Thread:client.model.Client:478 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 11:38:57  [ Thread-4:server.network.ServerThread:99 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 11:38:57  [ Thread-4:protocol.ExecuteOrder:82 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 11:38:57  [ Thread-4:protocol.ExecuteOrder:84 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 11:38:59  [ Thread-2715:server.network.Connected:55 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 11:39:01  [ Thread-2712:server.network.Connected:55 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 11:39:04  [ Thread-2715:server.network.Connected:55 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 11:39:06  [ Thread-2712:server.network.Connected:55 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 11:39:06  [ Thread-2713:server.network.AliveCheck:50 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-05 11:39:06  [ Thread-2713:server.network.AliveCheck:51 ] - [ INFO ]  client 100 flag connect = false
2021-07-05 11:39:06  [ Thread-2713:server.network.Server:188 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-05 11:39:06  [ Thread-259:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-259
2021-07-05 11:39:06  [ Thread-259:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-259
2021-07-05 11:39:06  [ JavaFX Application Thread:client.model.Client:478 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-05 11:39:06  [ Thread-260:server.network.ServerThread:99 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 11:39:06  [ Thread-260:protocol.ExecuteOrder:82 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-05 11:39:06  [ Thread-260:protocol.ExecuteOrder:84 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-05 11:39:07  [ Thread-2716:server.network.AliveCheck:50 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 11:39:07  [ Thread-2716:server.network.AliveCheck:51 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 11:39:07  [ Thread-2716:server.network.Server:188 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 11:39:07  [ Thread-6:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 11:39:07  [ Thread-6:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 11:39:07  [ JavaFX Application Thread:client.model.Client:478 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 11:39:07  [ Thread-4:server.network.ServerThread:99 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 11:39:07  [ Thread-4:protocol.ExecuteOrder:82 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 11:39:07  [ Thread-4:protocol.ExecuteOrder:84 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 11:39:09  [ Thread-2715:server.network.Connected:55 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 11:39:11  [ Thread-2712:server.network.Connected:55 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 11:39:14  [ Thread-2715:server.network.Connected:55 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 11:39:16  [ Thread-2712:server.network.Connected:55 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 11:39:16  [ Thread-2713:server.network.AliveCheck:50 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-05 11:39:16  [ Thread-2713:server.network.AliveCheck:51 ] - [ INFO ]  client 100 flag connect = false
2021-07-05 11:39:16  [ Thread-2713:server.network.Server:188 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-05 11:39:16  [ Thread-259:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-259
2021-07-05 11:39:16  [ Thread-259:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-259
2021-07-05 11:39:16  [ JavaFX Application Thread:client.model.Client:478 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-05 11:39:16  [ Thread-260:server.network.ServerThread:99 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 11:39:16  [ Thread-260:protocol.ExecuteOrder:82 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-05 11:39:16  [ Thread-260:protocol.ExecuteOrder:84 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-05 11:39:17  [ Thread-2716:server.network.AliveCheck:50 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 11:39:17  [ Thread-2716:server.network.AliveCheck:51 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 11:39:17  [ Thread-2716:server.network.Server:188 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 11:39:17  [ Thread-6:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 11:39:17  [ Thread-6:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 11:39:17  [ JavaFX Application Thread:client.model.Client:478 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 11:39:17  [ Thread-4:server.network.ServerThread:99 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 11:39:17  [ Thread-4:protocol.ExecuteOrder:82 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 11:39:17  [ Thread-4:protocol.ExecuteOrder:84 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 11:39:19  [ Thread-2715:server.network.Connected:55 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 11:39:21  [ Thread-2712:server.network.Connected:55 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 11:39:24  [ Thread-2715:server.network.Connected:55 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 11:39:26  [ Thread-2712:server.network.Connected:55 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 11:39:26  [ Thread-2713:server.network.AliveCheck:50 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-05 11:39:26  [ Thread-2713:server.network.AliveCheck:51 ] - [ INFO ]  client 100 flag connect = false
2021-07-05 11:39:26  [ Thread-2713:server.network.Server:188 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-05 11:39:26  [ Thread-259:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-259
2021-07-05 11:39:26  [ Thread-259:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-259
2021-07-05 11:39:26  [ JavaFX Application Thread:client.model.Client:478 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-05 11:39:26  [ Thread-260:server.network.ServerThread:99 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 11:39:26  [ Thread-260:protocol.ExecuteOrder:82 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-05 11:39:26  [ Thread-260:protocol.ExecuteOrder:84 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-05 11:39:27  [ Thread-2716:server.network.AliveCheck:50 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 11:39:27  [ Thread-2716:server.network.AliveCheck:51 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 11:39:27  [ Thread-2716:server.network.Server:188 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 11:39:27  [ Thread-6:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 11:39:27  [ Thread-6:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 11:39:27  [ JavaFX Application Thread:client.model.Client:478 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 11:39:27  [ Thread-4:server.network.ServerThread:99 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 11:39:27  [ Thread-4:protocol.ExecuteOrder:82 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 11:39:27  [ Thread-4:protocol.ExecuteOrder:84 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 11:39:29  [ Thread-2715:server.network.Connected:55 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 11:39:31  [ Thread-2712:server.network.Connected:55 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 11:39:34  [ Thread-2715:server.network.Connected:55 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 11:39:36  [ Thread-2712:server.network.Connected:55 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 11:39:36  [ Thread-2713:server.network.AliveCheck:50 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-05 11:39:36  [ Thread-2713:server.network.AliveCheck:51 ] - [ INFO ]  client 100 flag connect = false
2021-07-05 11:39:36  [ Thread-2713:server.network.Server:188 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-05 11:39:36  [ Thread-259:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-259
2021-07-05 11:39:36  [ Thread-259:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-259
2021-07-05 11:39:36  [ JavaFX Application Thread:client.model.Client:478 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-05 11:39:36  [ Thread-260:server.network.ServerThread:99 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 11:39:36  [ Thread-260:protocol.ExecuteOrder:82 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-05 11:39:36  [ Thread-260:protocol.ExecuteOrder:84 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-05 11:39:37  [ Thread-2716:server.network.AliveCheck:50 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 11:39:37  [ Thread-2716:server.network.AliveCheck:51 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 11:39:37  [ Thread-2716:server.network.Server:188 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 11:39:37  [ Thread-6:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 11:39:37  [ Thread-6:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 11:39:37  [ JavaFX Application Thread:client.model.Client:478 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 11:39:37  [ Thread-4:server.network.ServerThread:99 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 11:39:37  [ Thread-4:protocol.ExecuteOrder:82 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 11:39:37  [ Thread-4:protocol.ExecuteOrder:84 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 11:39:39  [ Thread-2715:server.network.Connected:55 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 11:39:41  [ Thread-2712:server.network.Connected:55 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 11:39:44  [ Thread-2715:server.network.Connected:55 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 11:39:46  [ Thread-2712:server.network.Connected:55 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 11:39:46  [ Thread-2713:server.network.AliveCheck:50 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-05 11:39:46  [ Thread-2713:server.network.AliveCheck:51 ] - [ INFO ]  client 100 flag connect = false
2021-07-05 11:39:46  [ Thread-2713:server.network.Server:188 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-05 11:39:46  [ Thread-259:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-259
2021-07-05 11:39:46  [ Thread-259:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-259
2021-07-05 11:39:46  [ JavaFX Application Thread:client.model.Client:478 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-05 11:39:46  [ Thread-260:server.network.ServerThread:99 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 11:39:46  [ Thread-260:protocol.ExecuteOrder:82 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-05 11:39:46  [ Thread-260:protocol.ExecuteOrder:84 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-05 11:39:47  [ Thread-2716:server.network.AliveCheck:50 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 11:39:47  [ Thread-2716:server.network.AliveCheck:51 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 11:39:47  [ Thread-2716:server.network.Server:188 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 11:39:47  [ Thread-6:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 11:39:47  [ Thread-6:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 11:39:47  [ JavaFX Application Thread:client.model.Client:478 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 11:39:47  [ Thread-4:server.network.ServerThread:99 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 11:39:47  [ Thread-4:protocol.ExecuteOrder:82 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 11:39:47  [ Thread-4:protocol.ExecuteOrder:84 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 11:39:49  [ Thread-2715:server.network.Connected:55 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 11:39:51  [ Thread-2712:server.network.Connected:55 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 11:39:54  [ Thread-2715:server.network.Connected:55 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 11:39:56  [ Thread-2712:server.network.Connected:55 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 11:39:56  [ Thread-2713:server.network.AliveCheck:50 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-05 11:39:56  [ Thread-2713:server.network.AliveCheck:51 ] - [ INFO ]  client 100 flag connect = false
2021-07-05 11:39:56  [ Thread-2713:server.network.Server:188 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-05 11:39:56  [ Thread-259:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-259
2021-07-05 11:39:56  [ Thread-259:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-259
2021-07-05 11:39:56  [ JavaFX Application Thread:client.model.Client:478 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-05 11:39:56  [ Thread-260:server.network.ServerThread:99 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 11:39:56  [ Thread-260:protocol.ExecuteOrder:82 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-05 11:39:56  [ Thread-260:protocol.ExecuteOrder:84 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-05 11:39:57  [ Thread-2716:server.network.AliveCheck:50 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 11:39:57  [ Thread-2716:server.network.AliveCheck:51 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 11:39:57  [ Thread-2716:server.network.Server:188 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 11:39:57  [ Thread-6:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 11:39:57  [ Thread-6:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 11:39:57  [ JavaFX Application Thread:client.model.Client:478 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 11:39:57  [ Thread-4:server.network.ServerThread:99 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 11:39:57  [ Thread-4:protocol.ExecuteOrder:82 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 11:39:57  [ Thread-4:protocol.ExecuteOrder:84 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 11:39:59  [ Thread-2715:server.network.Connected:55 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 11:40:01  [ Thread-2712:server.network.Connected:55 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 11:40:04  [ Thread-2715:server.network.Connected:55 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 11:40:06  [ Thread-2712:server.network.Connected:55 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 11:40:06  [ Thread-2713:server.network.AliveCheck:50 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-05 11:40:06  [ Thread-2713:server.network.AliveCheck:51 ] - [ INFO ]  client 100 flag connect = false
2021-07-05 11:40:06  [ Thread-2713:server.network.Server:188 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-05 11:40:06  [ Thread-259:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-259
2021-07-05 11:40:06  [ Thread-259:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-259
2021-07-05 11:40:06  [ JavaFX Application Thread:client.model.Client:478 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-05 11:40:06  [ Thread-260:server.network.ServerThread:99 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 11:40:06  [ Thread-260:protocol.ExecuteOrder:82 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-05 11:40:06  [ Thread-260:protocol.ExecuteOrder:84 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-05 11:40:07  [ Thread-2716:server.network.AliveCheck:50 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 11:40:07  [ Thread-2716:server.network.AliveCheck:51 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 11:40:07  [ Thread-2716:server.network.Server:188 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 11:40:07  [ Thread-6:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 11:40:07  [ Thread-6:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 11:40:07  [ JavaFX Application Thread:client.model.Client:478 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 11:40:07  [ Thread-4:server.network.ServerThread:99 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 11:40:07  [ Thread-4:protocol.ExecuteOrder:82 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 11:40:07  [ Thread-4:protocol.ExecuteOrder:84 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 11:40:09  [ Thread-2715:server.network.Connected:55 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 11:40:11  [ Thread-2712:server.network.Connected:55 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 11:40:14  [ Thread-2715:server.network.Connected:55 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 11:40:16  [ Thread-2712:server.network.Connected:55 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 11:40:16  [ Thread-2713:server.network.AliveCheck:50 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-05 11:40:16  [ Thread-2713:server.network.AliveCheck:51 ] - [ INFO ]  client 100 flag connect = false
2021-07-05 11:40:16  [ Thread-2713:server.network.Server:188 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-05 11:40:16  [ Thread-259:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-259
2021-07-05 11:40:16  [ Thread-259:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-259
2021-07-05 11:40:16  [ JavaFX Application Thread:client.model.Client:478 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-05 11:40:16  [ Thread-260:server.network.ServerThread:99 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 11:40:16  [ Thread-260:protocol.ExecuteOrder:82 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-05 11:40:16  [ Thread-260:protocol.ExecuteOrder:84 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-05 11:40:17  [ Thread-2716:server.network.AliveCheck:50 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 11:40:17  [ Thread-2716:server.network.AliveCheck:51 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 11:40:17  [ Thread-2716:server.network.Server:188 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 11:40:17  [ Thread-6:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 11:40:17  [ Thread-6:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 11:40:17  [ JavaFX Application Thread:client.model.Client:478 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 11:40:17  [ Thread-4:server.network.ServerThread:99 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 11:40:17  [ Thread-4:protocol.ExecuteOrder:82 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 11:40:17  [ Thread-4:protocol.ExecuteOrder:84 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 11:40:19  [ Thread-2715:server.network.Connected:55 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 11:40:21  [ Thread-2712:server.network.Connected:55 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 11:40:24  [ Thread-2715:server.network.Connected:55 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 11:40:26  [ Thread-2712:server.network.Connected:55 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 11:40:26  [ Thread-2713:server.network.AliveCheck:50 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-05 11:40:26  [ Thread-2713:server.network.AliveCheck:51 ] - [ INFO ]  client 100 flag connect = false
2021-07-05 11:40:26  [ Thread-2713:server.network.Server:188 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-05 11:40:26  [ Thread-259:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-259
2021-07-05 11:40:26  [ Thread-259:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-259
2021-07-05 11:40:26  [ JavaFX Application Thread:client.model.Client:478 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-05 11:40:26  [ Thread-260:server.network.ServerThread:99 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 11:40:26  [ Thread-260:protocol.ExecuteOrder:82 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-05 11:40:26  [ Thread-260:protocol.ExecuteOrder:84 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-05 11:40:27  [ Thread-2716:server.network.AliveCheck:50 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 11:40:27  [ Thread-2716:server.network.AliveCheck:51 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 11:40:27  [ Thread-2716:server.network.Server:188 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 11:40:27  [ Thread-6:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 11:40:27  [ Thread-6:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 11:40:27  [ JavaFX Application Thread:client.model.Client:478 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 11:40:27  [ Thread-4:server.network.ServerThread:99 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 11:40:27  [ Thread-4:protocol.ExecuteOrder:82 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 11:40:27  [ Thread-4:protocol.ExecuteOrder:84 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 11:40:29  [ Thread-2715:server.network.Connected:55 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 11:40:31  [ Thread-2712:server.network.Connected:55 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 11:40:34  [ Thread-2715:server.network.Connected:55 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 11:40:36  [ Thread-2712:server.network.Connected:55 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 11:40:36  [ Thread-2713:server.network.AliveCheck:50 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-05 11:40:36  [ Thread-2713:server.network.AliveCheck:51 ] - [ INFO ]  client 100 flag connect = false
2021-07-05 11:40:36  [ Thread-2713:server.network.Server:188 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-05 11:40:36  [ Thread-259:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-259
2021-07-05 11:40:36  [ Thread-259:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-259
2021-07-05 11:40:36  [ Thread-260:server.network.ServerThread:99 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 11:40:36  [ JavaFX Application Thread:client.model.Client:478 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-05 11:40:36  [ Thread-260:protocol.ExecuteOrder:82 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-05 11:40:36  [ Thread-260:protocol.ExecuteOrder:84 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-05 11:40:37  [ Thread-2716:server.network.AliveCheck:50 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 11:40:37  [ Thread-2716:server.network.AliveCheck:51 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 11:40:37  [ Thread-2716:server.network.Server:188 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 11:40:37  [ Thread-6:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 11:40:37  [ Thread-6:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 11:40:37  [ JavaFX Application Thread:client.model.Client:478 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 11:40:37  [ Thread-4:server.network.ServerThread:99 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 11:40:37  [ Thread-4:protocol.ExecuteOrder:82 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 11:40:37  [ Thread-4:protocol.ExecuteOrder:84 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 11:40:39  [ Thread-2715:server.network.Connected:55 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 11:40:41  [ Thread-2712:server.network.Connected:55 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 11:40:44  [ Thread-2715:server.network.Connected:55 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 11:40:46  [ Thread-2712:server.network.Connected:55 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 11:40:46  [ Thread-2713:server.network.AliveCheck:50 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-05 11:40:46  [ Thread-2713:server.network.AliveCheck:51 ] - [ INFO ]  client 100 flag connect = false
2021-07-05 11:40:46  [ Thread-2713:server.network.Server:188 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-05 11:40:46  [ Thread-259:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-259
2021-07-05 11:40:46  [ Thread-259:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-259
2021-07-05 11:40:46  [ JavaFX Application Thread:client.model.Client:478 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-05 11:40:46  [ Thread-260:server.network.ServerThread:99 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 11:40:46  [ Thread-260:protocol.ExecuteOrder:82 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-05 11:40:46  [ Thread-260:protocol.ExecuteOrder:84 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-05 11:40:47  [ Thread-2716:server.network.AliveCheck:50 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 11:40:47  [ Thread-2716:server.network.AliveCheck:51 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 11:40:47  [ Thread-2716:server.network.Server:188 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 11:40:47  [ Thread-6:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 11:40:47  [ Thread-6:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 11:40:47  [ JavaFX Application Thread:client.model.Client:478 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 11:40:47  [ Thread-4:server.network.ServerThread:99 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 11:40:47  [ Thread-4:protocol.ExecuteOrder:82 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 11:40:47  [ Thread-4:protocol.ExecuteOrder:84 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 11:40:49  [ Thread-2715:server.network.Connected:55 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 11:40:51  [ Thread-2712:server.network.Connected:55 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 11:40:54  [ Thread-2715:server.network.Connected:55 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 11:40:56  [ Thread-2712:server.network.Connected:55 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 11:40:56  [ Thread-2713:server.network.AliveCheck:50 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-05 11:40:56  [ Thread-2713:server.network.AliveCheck:51 ] - [ INFO ]  client 100 flag connect = false
2021-07-05 11:40:56  [ Thread-2713:server.network.Server:188 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-05 11:40:56  [ Thread-259:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-259
2021-07-05 11:40:56  [ Thread-259:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-259
2021-07-05 11:40:56  [ JavaFX Application Thread:client.model.Client:478 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-05 11:40:56  [ Thread-260:server.network.ServerThread:99 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 11:40:56  [ Thread-260:protocol.ExecuteOrder:82 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-05 11:40:56  [ Thread-260:protocol.ExecuteOrder:84 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-05 11:40:57  [ Thread-2716:server.network.AliveCheck:50 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 11:40:57  [ Thread-2716:server.network.AliveCheck:51 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 11:40:57  [ Thread-2716:server.network.Server:188 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 11:40:57  [ Thread-6:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 11:40:57  [ Thread-6:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 11:40:57  [ JavaFX Application Thread:client.model.Client:478 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 11:40:57  [ Thread-4:server.network.ServerThread:99 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 11:40:57  [ Thread-4:protocol.ExecuteOrder:82 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 11:40:57  [ Thread-4:protocol.ExecuteOrder:84 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 11:40:59  [ Thread-2715:server.network.Connected:55 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 11:41:01  [ Thread-2712:server.network.Connected:55 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 12:09:47  [ Thread-4:server.network.ServerThread:48 ] - [ INFO ]  protocol to client: 
{"messageType":"HelloClient","messageBody":{"protocol":"Version 1.0"}}
2021-07-05 12:09:47  [ Thread-6:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 12:09:47  [ Thread-6:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"HelloClient","messageBody":{"protocol":"Version 1.0"}}Thread-6
2021-07-05 12:09:47  [ JavaFX Application Thread:client.model.Client:461 ] - [ INFO ]  protocol from Server: 
{"messageType":"HelloServer","messageBody":{"group":"CC","protocol":"Version 1.0","isAI":false}}
2021-07-05 12:09:47  [ Thread-4:server.network.ServerThread:89 ] - [ INFO ]  welcome info printed
2021-07-05 12:09:47  [ Thread-6:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 12:09:47  [ Thread-6:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"Welcome","messageBody":{"clientID":33}}Thread-6
2021-07-05 12:09:48  [ JavaFX Application Thread:client.model.Client:465 ] - [ INFO ]  {"messageType":"Welcome","messageBody":{"clientID":33}}JavaFX Application Thread
2021-07-05 12:09:48  [ JavaFX Application Thread:client.model.Client:469 ] - [ INFO ]  33
2021-07-05 12:09:48  [ JavaFX Application Thread:client.model.Client:470 ] - [ INFO ]  your clientID is: 33
2021-07-05 12:09:51  [ Thread-318:server.network.ServerThread:48 ] - [ INFO ]  protocol to client: 
{"messageType":"HelloClient","messageBody":{"protocol":"Version 1.0"}}
2021-07-05 12:09:51  [ Thread-317:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-317
2021-07-05 12:09:51  [ Thread-317:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"HelloClient","messageBody":{"protocol":"Version 1.0"}}Thread-317
2021-07-05 12:09:51  [ JavaFX Application Thread:client.model.Client:461 ] - [ INFO ]  protocol from Server: 
{"messageType":"HelloServer","messageBody":{"group":"CC","protocol":"Version 1.0","isAI":false}}
2021-07-05 12:09:51  [ Thread-318:server.network.ServerThread:89 ] - [ INFO ]  welcome info printed
2021-07-05 12:09:51  [ Thread-317:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-317
2021-07-05 12:09:51  [ Thread-317:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"Welcome","messageBody":{"clientID":100}}Thread-317
2021-07-05 12:09:51  [ JavaFX Application Thread:client.model.Client:465 ] - [ INFO ]  {"messageType":"Welcome","messageBody":{"clientID":100}}JavaFX Application Thread
2021-07-05 12:09:51  [ JavaFX Application Thread:client.model.Client:469 ] - [ INFO ]  100
2021-07-05 12:09:51  [ JavaFX Application Thread:client.model.Client:470 ] - [ INFO ]  your clientID is: 100
2021-07-05 12:09:56  [ JavaFX Application Thread:client.model.Client:925 ] - [ INFO ]  {"messageType":"PlayerValues","messageBody":{"name":"a","figure":1}}
2021-07-05 12:09:56  [ Thread-4:server.network.ServerThread:99 ] - [ INFO ]  excuteOrder by server {"messageType":"PlayerValues","messageBody":{"name":"a","figure":1}}
2021-07-05 12:09:56  [ Thread-4:protocol.ExecuteOrder:48 ] - [ INFO ]  check player figures
2021-07-05 12:09:56  [ Thread-4:protocol.ExecuteOrder:56 ] - [ INFO ]  addPlayer
2021-07-05 12:09:56  [ Thread-4:server.network.Server:202 ] - [ INFO ]  server added player
2021-07-05 12:09:56  [ Thread-6:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 12:09:56  [ Thread-317:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-317
2021-07-05 12:09:56  [ Thread-317:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"PlayerAdded","messageBody":{"clientID":33,"name":"a","figure":1}}Thread-317
2021-07-05 12:09:56  [ Thread-6:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"PlayerAdded","messageBody":{"clientID":33,"name":"a","figure":1}}Thread-6
2021-07-05 12:09:56  [ JavaFX Application Thread:client.model.Client:481 ] - [ INFO ]  {"messageType":"PlayerAdded","messageBody":{"clientID":33,"name":"a","figure":1}}JavaFX Application Thread
2021-07-05 12:09:56  [ JavaFX Application Thread:client.model.Client:491 ] - [ INFO ]  null: null
2021-07-05 12:09:56  [ JavaFX Application Thread:client.model.Client:481 ] - [ INFO ]  {"messageType":"PlayerAdded","messageBody":{"clientID":33,"name":"a","figure":1}}JavaFX Application Thread
2021-07-05 12:09:56  [ JavaFX Application Thread:client.model.Client:491 ] - [ INFO ]  null: null
2021-07-05 12:09:56  [ JavaFX Application Thread:client.model.Client:498 ] - [ INFO ]  flag launchen window
2021-07-05 12:09:59  [ JavaFX Application Thread:client.model.Client:925 ] - [ INFO ]  {"messageType":"PlayerValues","messageBody":{"name":"b","figure":2}}
2021-07-05 12:09:59  [ Thread-318:server.network.ServerThread:99 ] - [ INFO ]  excuteOrder by server {"messageType":"PlayerValues","messageBody":{"name":"b","figure":2}}
2021-07-05 12:09:59  [ Thread-318:protocol.ExecuteOrder:48 ] - [ INFO ]  check player figures
2021-07-05 12:09:59  [ Thread-318:protocol.ExecuteOrder:56 ] - [ INFO ]  addPlayer
2021-07-05 12:09:59  [ Thread-318:server.network.Server:202 ] - [ INFO ]  server added player
2021-07-05 12:09:59  [ Thread-6:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 12:09:59  [ Thread-317:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-317
2021-07-05 12:09:59  [ Thread-318:server.network.Server:219 ] - [ INFO ]  server added player
2021-07-05 12:09:59  [ Thread-317:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"PlayerAdded","messageBody":{"clientID":100,"name":"b","figure":2}}Thread-317
2021-07-05 12:09:59  [ Thread-6:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"PlayerAdded","messageBody":{"clientID":100,"name":"b","figure":2}}Thread-6
2021-07-05 12:09:59  [ Thread-317:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-317
2021-07-05 12:09:59  [ Thread-318:server.network.Server:219 ] - [ INFO ]  server added player
2021-07-05 12:09:59  [ Thread-317:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"PlayerAdded","messageBody":{"clientID":33,"name":"a","figure":1}}Thread-317
2021-07-05 12:09:59  [ JavaFX Application Thread:client.model.Client:481 ] - [ INFO ]  {"messageType":"PlayerAdded","messageBody":{"clientID":100,"name":"b","figure":2}}JavaFX Application Thread
2021-07-05 12:09:59  [ Thread-317:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-317
2021-07-05 12:09:59  [ Thread-317:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"PlayerAdded","messageBody":{"clientID":100,"name":"b","figure":2}}Thread-317
2021-07-05 12:09:59  [ JavaFX Application Thread:client.model.Client:491 ] - [ INFO ]  null: null
2021-07-05 12:09:59  [ JavaFX Application Thread:client.model.Client:498 ] - [ INFO ]  flag launchen window
2021-07-05 12:10:00  [ JavaFX Application Thread:client.model.Client:481 ] - [ INFO ]  {"messageType":"PlayerAdded","messageBody":{"clientID":100,"name":"b","figure":2}}JavaFX Application Thread
2021-07-05 12:10:00  [ JavaFX Application Thread:client.model.Client:491 ] - [ INFO ]  null: null
2021-07-05 12:10:00  [ JavaFX Application Thread:client.model.Client:481 ] - [ INFO ]  {"messageType":"PlayerAdded","messageBody":{"clientID":33,"name":"a","figure":1}}JavaFX Application Thread
2021-07-05 12:10:00  [ JavaFX Application Thread:client.model.Client:481 ] - [ INFO ]  {"messageType":"PlayerAdded","messageBody":{"clientID":100,"name":"b","figure":2}}JavaFX Application Thread
2021-07-05 12:10:03  [ JavaFX Application Thread:client.model.Client:938 ] - [ INFO ]  {"messageType":"SetStatus","messageBody":{"ready":true}}
2021-07-05 12:10:03  [ Thread-318:server.network.ServerThread:99 ] - [ INFO ]  excuteOrder by server {"messageType":"SetStatus","messageBody":{"ready":true}}
2021-07-05 12:10:03  [ Thread-318:protocol.ExecuteOrder:87 ] - [ INFO ]  set Status in ExecuteOrder
2021-07-05 12:10:03  [ Thread-318:server.network.Server:232 ] - [ INFO ]  server inform player status
2021-07-05 12:10:03  [ Thread-6:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 12:10:03  [ Thread-317:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-317
2021-07-05 12:10:03  [ Thread-6:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"PlayerStatus","messageBody":{"clientID":100,"ready":true}}Thread-6
2021-07-05 12:10:03  [ Thread-317:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"PlayerStatus","messageBody":{"clientID":100,"ready":true}}Thread-317
2021-07-05 12:10:03  [ JavaFX Application Thread:client.model.Client:513 ] - [ INFO ]  {"messageType":"PlayerStatus","messageBody":{"clientID":100,"ready":true}}
2021-07-05 12:10:03  [ Thread-318:server.network.Server:264 ] - [ INFO ]  server informs first ready player to select a map
2021-07-05 12:10:03  [ Thread-317:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-317
2021-07-05 12:10:03  [ Thread-318:protocol.ExecuteOrder:462 ] - [ INFO ]  number of ready clients: 1
2021-07-05 12:10:03  [ Thread-317:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"SelectMap","messageBody":{"availableMaps":["Dizzy Highway","Lost Bearings","Death Trap","Extra Crispy","Twister"]}}Thread-317
2021-07-05 12:10:03  [ JavaFX Application Thread:client.model.Client:513 ] - [ INFO ]  {"messageType":"PlayerStatus","messageBody":{"clientID":100,"ready":true}}
2021-07-05 12:10:03  [ JavaFX Application Thread:client.model.Client:521 ] - [ INFO ]  {"messageType":"SelectMap","messageBody":{"availableMaps":["Dizzy Highway","Lost Bearings","Death Trap","Extra Crispy","Twister"]}}
2021-07-05 12:10:03  [ Thread-2208:server.network.Server:188 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-05 12:10:03  [ Thread-317:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-317
2021-07-05 12:10:03  [ Thread-317:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-317
2021-07-05 12:10:03  [ Thread-318:server.network.ServerThread:99 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 12:10:03  [ JavaFX Application Thread:client.model.Client:478 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-05 12:10:03  [ Thread-318:protocol.ExecuteOrder:82 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-05 12:10:03  [ Thread-318:protocol.ExecuteOrder:84 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-05 12:10:05  [ JavaFX Application Thread:client.model.Client:938 ] - [ INFO ]  {"messageType":"SetStatus","messageBody":{"ready":true}}
2021-07-05 12:10:05  [ Thread-4:server.network.ServerThread:99 ] - [ INFO ]  excuteOrder by server {"messageType":"SetStatus","messageBody":{"ready":true}}
2021-07-05 12:10:05  [ Thread-4:protocol.ExecuteOrder:87 ] - [ INFO ]  set Status in ExecuteOrder
2021-07-05 12:10:05  [ Thread-4:server.network.Server:232 ] - [ INFO ]  server inform player status
2021-07-05 12:10:05  [ Thread-6:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 12:10:05  [ Thread-317:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-317
2021-07-05 12:10:05  [ Thread-4:server.network.Server:264 ] - [ INFO ]  server informs first ready player to select a map
2021-07-05 12:10:05  [ Thread-4:protocol.ExecuteOrder:462 ] - [ INFO ]  number of ready clients: 2
2021-07-05 12:10:05  [ Thread-6:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"PlayerStatus","messageBody":{"clientID":33,"ready":true}}Thread-6
2021-07-05 12:10:05  [ JavaFX Application Thread:client.model.Client:513 ] - [ INFO ]  {"messageType":"PlayerStatus","messageBody":{"clientID":33,"ready":true}}
2021-07-05 12:10:05  [ Thread-317:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"PlayerStatus","messageBody":{"clientID":33,"ready":true}}Thread-317
2021-07-05 12:10:05  [ Thread-317:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-317
2021-07-05 12:10:05  [ Thread-2510:server.network.Server:188 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 12:10:05  [ Thread-6:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 12:10:05  [ Thread-317:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"SelectMap","messageBody":{"availableMaps":["Dizzy Highway","Lost Bearings","Death Trap","Extra Crispy","Twister"]}}Thread-317
2021-07-05 12:10:05  [ JavaFX Application Thread:client.model.Client:513 ] - [ INFO ]  {"messageType":"PlayerStatus","messageBody":{"clientID":33,"ready":true}}
2021-07-05 12:10:05  [ Thread-6:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 12:10:05  [ JavaFX Application Thread:client.model.Client:521 ] - [ INFO ]  {"messageType":"SelectMap","messageBody":{"availableMaps":["Dizzy Highway","Lost Bearings","Death Trap","Extra Crispy","Twister"]}}
2021-07-05 12:10:05  [ JavaFX Application Thread:client.model.Client:478 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 12:10:05  [ Thread-4:server.network.ServerThread:99 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 12:10:05  [ Thread-4:protocol.ExecuteOrder:82 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 12:10:05  [ Thread-4:protocol.ExecuteOrder:84 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 12:10:08  [ Thread-2207:server.network.Connected:55 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 12:10:10  [ Thread-2509:server.network.Connected:55 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 12:10:10  [ JavaFX Application Thread:client.model.Client:979 ] - [ INFO ]  {"messageType":"MapSelected","messageBody":{"map":"Dizzy Highway"}}
2021-07-05 12:10:10  [ Thread-318:server.network.ServerThread:99 ] - [ INFO ]  excuteOrder by server {"messageType":"MapSelected","messageBody":{"map":"Dizzy Highway"}}
2021-07-05 12:10:10  [ Thread-318:protocol.ExecuteOrder:121 ] - [ INFO ]  set Map in ExecuteOrder
2021-07-05 12:10:10  [ Thread-318:server.network.Server:638 ] - [ INFO ]  server informs which map selected
2021-07-05 12:10:10  [ Thread-6:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 12:10:10  [ Thread-317:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-317
2021-07-05 12:10:10  [ Thread-6:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"MapSelected","messageBody":{"map":"Dizzy Highway"}}Thread-6
2021-07-05 12:10:10  [ Thread-317:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"MapSelected","messageBody":{"map":"Dizzy Highway"}}Thread-317
2021-07-05 12:10:10  [ Thread-318:server.game.Game:228 ] - [ INFO ]  Game sets map.
2021-07-05 12:10:10  [ Thread-318:server.maps.Board:19 ] - [ INFO ]  Board sets map of Dizzy Highway.
2021-07-05 12:10:11  [ Thread-318:protocol.ExecuteOrder:462 ] - [ INFO ]  number of ready clients: 2
2021-07-05 12:10:11  [ Thread-318:protocol.ExecuteOrder:464 ] - [ INFO ]  number enough, to play
2021-07-05 12:10:11  [ Thread-318:server.network.Server:278 ] - [ INFO ]  server sends map
2021-07-05 12:10:11  [ Thread-317:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-317
2021-07-05 12:10:11  [ Thread-6:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 12:10:11  [ Thread-318:server.network.Server:305 ] - [ INFO ]  server sends phase info
2021-07-05 12:10:11  [ Thread-318:server.network.Server:315 ] - [ INFO ]  server informs current player id
2021-07-05 12:10:11  [ Thread-6:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"GameStarted","messageBody":{"gameMap":[[[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Antenna","isOnBoard":"Start A","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["top"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"ConveyorBelt","isOnBoard":"Start A","speed":1,"orientations":["right","left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"Start A","speed":1,"orientations":["right","left"],"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}]],[[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom","top","right"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom","left","top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right","left","top"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left","top","right"],"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["top"],"registers":null,"count":0}],[{"type":"Laser","isOnBoard":"5B","speed":0,"orientations":["top"],"registers":null,"count":1},{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0},{"type":"RestartPoint","isOnBoard":"DizzyHighway","speed":0,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"Laser","isOnBoard":"5B","speed":0,"orientations":["left"],"registers":null,"count":1},{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Laser","isOnBoard":"5B","speed":0,"orientations":["right"],"registers":null,"count":1},{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["left"],"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Laser","isOnBoard":"5B","speed":0,"orientations":["bottom"],"registers":null,"count":1},{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["top"],"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right","bottom","left"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left","right","bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top","right","bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top","bottom","left"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}]],[[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0},{"type":"CheckPoint","isOnBoard":"DizzyHighway","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]]]}}Thread-6
2021-07-05 12:10:11  [ Thread-317:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"GameStarted","messageBody":{"gameMap":[[[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Antenna","isOnBoard":"Start A","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["top"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"ConveyorBelt","isOnBoard":"Start A","speed":1,"orientations":["right","left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"Start A","speed":1,"orientations":["right","left"],"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}]],[[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom","top","right"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom","left","top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right","left","top"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left","top","right"],"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["top"],"registers":null,"count":0}],[{"type":"Laser","isOnBoard":"5B","speed":0,"orientations":["top"],"registers":null,"count":1},{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0},{"type":"RestartPoint","isOnBoard":"DizzyHighway","speed":0,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"Laser","isOnBoard":"5B","speed":0,"orientations":["left"],"registers":null,"count":1},{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Laser","isOnBoard":"5B","speed":0,"orientations":["right"],"registers":null,"count":1},{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["left"],"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Laser","isOnBoard":"5B","speed":0,"orientations":["bottom"],"registers":null,"count":1},{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["top"],"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right","bottom","left"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left","right","bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top","right","bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top","bottom","left"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}]],[[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0},{"type":"CheckPoint","isOnBoard":"DizzyHighway","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]]]}}Thread-317
2021-07-05 12:10:11  [ Thread-6:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 12:10:11  [ Thread-317:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-317
2021-07-05 12:10:11  [ Thread-317:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"ActivePhase","messageBody":{"phase":0}}Thread-317
2021-07-05 12:10:11  [ Thread-6:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"ActivePhase","messageBody":{"phase":0}}Thread-6
2021-07-05 12:10:11  [ Thread-317:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-317
2021-07-05 12:10:11  [ Thread-6:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 12:10:11  [ Thread-317:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-317
2021-07-05 12:10:11  [ Thread-6:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-6
2021-07-05 12:10:13  [ Thread-2208:server.network.AliveCheck:50 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-05 12:10:13  [ Thread-2207:server.network.Connected:55 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 12:10:13  [ Thread-2208:server.network.AliveCheck:51 ] - [ INFO ]  client 100 flag connect = false
2021-07-05 12:10:13  [ Thread-2208:server.network.Server:188 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-05 12:10:13  [ Thread-317:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-317
2021-07-05 12:10:13  [ Thread-317:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-317
2021-07-05 12:10:13  [ JavaFX Application Thread:client.model.Client:478 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-05 12:10:13  [ Thread-318:server.network.ServerThread:99 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 12:10:13  [ Thread-318:protocol.ExecuteOrder:82 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-05 12:10:13  [ Thread-318:protocol.ExecuteOrder:84 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-05 12:10:13  [ JavaFX Application Thread:client.model.Client:1045 ] - [ INFO ]  {"messageType":"SetStartingPoint","messageBody":{"x":1,"y":4}}
2021-07-05 12:10:13  [ Thread-4:server.network.ServerThread:99 ] - [ INFO ]  excuteOrder by server {"messageType":"SetStartingPoint","messageBody":{"x":1,"y":4}}
2021-07-05 12:10:13  [ Thread-4:server.network.Server:328 ] - [ INFO ]  server informs set starting point
2021-07-05 12:10:13  [ Thread-6:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 12:10:13  [ Thread-317:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-317
2021-07-05 12:10:13  [ Thread-4:server.network.Server:315 ] - [ INFO ]  server informs current player id
2021-07-05 12:10:13  [ Thread-6:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"StartingPointTaken","messageBody":{"x":1,"y":4,"clientID":33}}Thread-6
2021-07-05 12:10:13  [ Thread-6:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 12:10:13  [ Thread-317:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"StartingPointTaken","messageBody":{"x":1,"y":4,"clientID":33}}Thread-317
2021-07-05 12:10:13  [ Thread-317:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-317
2021-07-05 12:10:13  [ Thread-6:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":100}}Thread-6
2021-07-05 12:10:13  [ Thread-317:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":100}}Thread-317
2021-07-05 12:10:13  [ JavaFX Application Thread:client.model.Client:635 ] - [ INFO ]  1
2021-07-05 12:10:13  [ JavaFX Application Thread:client.model.Client:635 ] - [ INFO ]  1
2021-07-05 12:10:14  [ JavaFX Application Thread:client.model.Client:1045 ] - [ INFO ]  {"messageType":"SetStartingPoint","messageBody":{"x":0,"y":6}}
2021-07-05 12:10:14  [ Thread-318:server.network.ServerThread:99 ] - [ INFO ]  excuteOrder by server {"messageType":"SetStartingPoint","messageBody":{"x":0,"y":6}}
2021-07-05 12:10:14  [ Thread-318:server.network.Server:328 ] - [ INFO ]  server informs set starting point
2021-07-05 12:10:14  [ Thread-6:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 12:10:14  [ Thread-317:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-317
2021-07-05 12:10:14  [ Thread-318:server.network.Server:305 ] - [ INFO ]  server sends phase info
2021-07-05 12:10:14  [ Thread-317:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"StartingPointTaken","messageBody":{"x":0,"y":6,"clientID":100}}Thread-317
2021-07-05 12:10:14  [ Thread-6:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"StartingPointTaken","messageBody":{"x":0,"y":6,"clientID":100}}Thread-6
2021-07-05 12:10:14  [ Thread-318:server.network.Server:654 ] - [ INFO ]  server informs Refill upgrade shop.
2021-07-05 12:10:14  [ Thread-317:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-317
2021-07-05 12:10:14  [ Thread-6:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 12:10:14  [ Thread-318:server.network.Server:315 ] - [ INFO ]  server informs current player id
2021-07-05 12:10:14  [ Thread-317:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"ActivePhase","messageBody":{"phase":1}}Thread-317
2021-07-05 12:10:14  [ Thread-6:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"ActivePhase","messageBody":{"phase":1}}Thread-6
2021-07-05 12:10:14  [ Thread-317:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-317
2021-07-05 12:10:14  [ JavaFX Application Thread:client.model.Client:635 ] - [ INFO ]  0
2021-07-05 12:10:14  [ Thread-6:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 12:10:14  [ Thread-317:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"RefillShop","messageBody":{"cards":["MemorySwap","MemorySwap","AdminPrivilege","AdminPrivilege"]}}Thread-317
2021-07-05 12:10:14  [ Thread-317:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-317
2021-07-05 12:10:14  [ Thread-6:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"RefillShop","messageBody":{"cards":["MemorySwap","MemorySwap","AdminPrivilege","AdminPrivilege"]}}Thread-6
2021-07-05 12:10:14  [ Thread-6:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 12:10:14  [ JavaFX Application Thread:client.model.Client:635 ] - [ INFO ]  0
2021-07-05 12:10:14  [ Thread-317:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-317
2021-07-05 12:10:14  [ Thread-6:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-6
2021-07-05 12:10:15  [ Thread-2510:server.network.AliveCheck:50 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 12:10:15  [ Thread-2510:server.network.AliveCheck:51 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 12:10:15  [ Thread-2510:server.network.Server:188 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 12:10:15  [ Thread-6:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 12:10:15  [ Thread-6:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 12:10:15  [ Thread-2509:server.network.Connected:55 ] - [ INFO ]  33 in while loop print flagconnect: true
2021-07-05 12:10:15  [ Thread-2509:server.network.Connected:58 ] - [ INFO ]  33 in first if print flagconnect: true
2021-07-05 12:10:15  [ JavaFX Application Thread:client.model.Client:478 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 12:10:15  [ Thread-4:server.network.ServerThread:99 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 12:10:15  [ Thread-4:protocol.ExecuteOrder:82 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 12:10:15  [ Thread-4:protocol.ExecuteOrder:84 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 12:10:18  [ Thread-2207:server.network.Connected:55 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 12:10:22  [ Thread-2509:server.network.Connected:55 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 12:10:23  [ Thread-2208:server.network.AliveCheck:50 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-05 12:10:23  [ Thread-2208:server.network.AliveCheck:51 ] - [ INFO ]  client 100 flag connect = false
2021-07-05 12:10:23  [ Thread-2208:server.network.Server:188 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-05 12:10:23  [ Thread-317:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-317
2021-07-05 12:10:23  [ Thread-317:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-317
2021-07-05 12:10:23  [ JavaFX Application Thread:client.model.Client:478 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-05 12:10:23  [ Thread-318:server.network.ServerThread:99 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 12:10:23  [ Thread-2207:server.network.Connected:55 ] - [ INFO ]  100 in while loop print flagconnect: true
2021-07-05 12:10:23  [ Thread-2207:server.network.Connected:58 ] - [ INFO ]  100 in first if print flagconnect: true
2021-07-05 12:10:23  [ Thread-318:protocol.ExecuteOrder:82 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-05 12:10:23  [ Thread-318:protocol.ExecuteOrder:84 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-05 12:10:25  [ Thread-2510:server.network.AliveCheck:50 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 12:10:25  [ Thread-2510:server.network.AliveCheck:51 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 12:10:25  [ Thread-2510:server.network.Server:188 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 12:10:27  [ Thread-2509:server.network.Connected:55 ] - [ INFO ]  33 in while loop print flagconnect: true
2021-07-05 12:10:27  [ Thread-2509:server.network.Connected:58 ] - [ INFO ]  33 in first if print flagconnect: true
2021-07-05 12:10:29  [ Thread-2509:server.network.Connected:67 ] - [ INFO ]  clientNr. 33 in second if print flagconnect
2021-07-05 12:10:29  [ Thread-2509:server.network.Connected:68 ] - [ INFO ]  clientNr. 33 in connected flag is: true
2021-07-05 12:10:29  [ Thread-2509:server.network.Server:315 ] - [ INFO ]  server informs current player id
2021-07-05 12:10:29  [ Thread-2509:server.network.Server:614 ] - [ INFO ]  server informs connection update
2021-07-05 12:10:29  [ Thread-2509:server.network.Connected:74 ] - [ INFO ]  client 33 disconnected.
2021-07-05 12:10:30  [ Thread-2207:server.network.Connected:55 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 12:10:39  [ Thread-4:server.network.ServerThread:48 ] - [ INFO ]  protocol to client: 
{"messageType":"HelloClient","messageBody":{"protocol":"Version 1.0"}}
2021-07-05 12:10:39  [ Thread-6:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 12:10:39  [ Thread-6:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"HelloClient","messageBody":{"protocol":"Version 1.0"}}Thread-6
2021-07-05 12:10:39  [ JavaFX Application Thread:client.model.Client:461 ] - [ INFO ]  protocol from Server: 
{"messageType":"HelloServer","messageBody":{"group":"CC","protocol":"Version 1.0","isAI":false}}
2021-07-05 12:10:39  [ Thread-4:server.network.ServerThread:89 ] - [ INFO ]  welcome info printed
2021-07-05 12:10:39  [ Thread-6:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 12:10:40  [ Thread-6:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"Welcome","messageBody":{"clientID":33}}Thread-6
2021-07-05 12:10:40  [ JavaFX Application Thread:client.model.Client:465 ] - [ INFO ]  {"messageType":"Welcome","messageBody":{"clientID":33}}JavaFX Application Thread
2021-07-05 12:10:40  [ JavaFX Application Thread:client.model.Client:469 ] - [ INFO ]  33
2021-07-05 12:10:40  [ JavaFX Application Thread:client.model.Client:470 ] - [ INFO ]  your clientID is: 33
2021-07-05 12:10:43  [ Thread-327:server.network.ServerThread:48 ] - [ INFO ]  protocol to client: 
{"messageType":"HelloClient","messageBody":{"protocol":"Version 1.0"}}
2021-07-05 12:10:43  [ Thread-328:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-328
2021-07-05 12:10:43  [ Thread-328:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"HelloClient","messageBody":{"protocol":"Version 1.0"}}Thread-328
2021-07-05 12:10:43  [ JavaFX Application Thread:client.model.Client:461 ] - [ INFO ]  protocol from Server: 
{"messageType":"HelloServer","messageBody":{"group":"CC","protocol":"Version 1.0","isAI":false}}
2021-07-05 12:10:43  [ Thread-327:server.network.ServerThread:89 ] - [ INFO ]  welcome info printed
2021-07-05 12:10:43  [ Thread-328:client.model.Client:419 ] - [ INFO ]  by executeOrder Thread-328
2021-07-05 12:10:43  [ Thread-328:client.model.Client:392 ] - [ INFO ]  json from server: {"messageType":"Welcome","messageBody":{"clientID":100}}Thread-328
2021-07-05 12:10:43  [ JavaFX Application Thread:client.model.Client:465 ] - [ INFO ]  {"messageType":"Welcome","messageBody":{"clientID":100}}JavaFX Application Thread
2021-07-05 12:10:43  [ JavaFX Application Thread:client.model.Client:469 ] - [ INFO ]  100
2021-07-05 12:10:43  [ JavaFX Application Thread:client.model.Client:470 ] - [ INFO ]  your clientID is: 100
2021-07-05 14:59:43  [ Thread-4:server.network.ServerThread:58 ] - [ INFO ]  protocol to client: 
{"messageType":"HelloClient","messageBody":{"protocol":"Version 1.0"}}
2021-07-05 14:59:43  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 14:59:43  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"HelloClient","messageBody":{"protocol":"Version 1.0"}}Thread-6
2021-07-05 14:59:44  [ JavaFX Application Thread:client.model.Client:711 ] - [ INFO ]  protocol from Server: 
{"messageType":"HelloServer","messageBody":{"group":"CC","protocol":"Version 1.0","isAI":false}}
2021-07-05 14:59:44  [ Thread-4:server.network.ServerThread:99 ] - [ INFO ]  welcome info printed
2021-07-05 14:59:44  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 14:59:44  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Welcome","messageBody":{"clientID":33}}Thread-6
2021-07-05 14:59:44  [ JavaFX Application Thread:client.model.Client:715 ] - [ INFO ]  {"messageType":"Welcome","messageBody":{"clientID":33}}JavaFX Application Thread
2021-07-05 14:59:44  [ JavaFX Application Thread:client.model.Client:719 ] - [ INFO ]  33
2021-07-05 14:59:44  [ JavaFX Application Thread:client.model.Client:720 ] - [ INFO ]  your clientID is: 33
2021-07-05 14:59:47  [ Thread-312:server.network.ServerThread:58 ] - [ INFO ]  protocol to client: 
{"messageType":"HelloClient","messageBody":{"protocol":"Version 1.0"}}
2021-07-05 14:59:47  [ Thread-311:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-311
2021-07-05 14:59:47  [ Thread-311:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"HelloClient","messageBody":{"protocol":"Version 1.0"}}Thread-311
2021-07-05 14:59:47  [ JavaFX Application Thread:client.model.Client:711 ] - [ INFO ]  protocol from Server: 
{"messageType":"HelloServer","messageBody":{"group":"CC","protocol":"Version 1.0","isAI":false}}
2021-07-05 14:59:47  [ Thread-312:server.network.ServerThread:99 ] - [ INFO ]  welcome info printed
2021-07-05 14:59:47  [ Thread-311:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-311
2021-07-05 14:59:47  [ Thread-311:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Welcome","messageBody":{"clientID":100}}Thread-311
2021-07-05 14:59:47  [ JavaFX Application Thread:client.model.Client:715 ] - [ INFO ]  {"messageType":"Welcome","messageBody":{"clientID":100}}JavaFX Application Thread
2021-07-05 14:59:47  [ JavaFX Application Thread:client.model.Client:719 ] - [ INFO ]  100
2021-07-05 14:59:47  [ JavaFX Application Thread:client.model.Client:720 ] - [ INFO ]  your clientID is: 100
2021-07-05 14:59:50  [ JavaFX Application Thread:client.model.Client:1183 ] - [ INFO ]  {"messageType":"PlayerValues","messageBody":{"name":"a","figure":2}}
2021-07-05 14:59:50  [ Thread-312:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"PlayerValues","messageBody":{"name":"a","figure":2}}
2021-07-05 14:59:50  [ Thread-312:protocol.ExecuteOrder:66 ] - [ INFO ]  check player figures
2021-07-05 14:59:50  [ Thread-312:protocol.ExecuteOrder:74 ] - [ INFO ]  addPlayer
2021-07-05 14:59:50  [ Thread-312:server.network.Server:243 ] - [ INFO ]  server added player
2021-07-05 14:59:50  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 14:59:50  [ Thread-311:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-311
2021-07-05 14:59:50  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"PlayerAdded","messageBody":{"clientID":100,"name":"a","figure":2}}Thread-6
2021-07-05 14:59:50  [ Thread-311:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"PlayerAdded","messageBody":{"clientID":100,"name":"a","figure":2}}Thread-311
2021-07-05 14:59:50  [ JavaFX Application Thread:client.model.Client:731 ] - [ INFO ]  {"messageType":"PlayerAdded","messageBody":{"clientID":100,"name":"a","figure":2}}JavaFX Application Thread
2021-07-05 14:59:50  [ JavaFX Application Thread:client.model.Client:741 ] - [ INFO ]  null: null
2021-07-05 14:59:50  [ JavaFX Application Thread:client.model.Client:731 ] - [ INFO ]  {"messageType":"PlayerAdded","messageBody":{"clientID":100,"name":"a","figure":2}}JavaFX Application Thread
2021-07-05 14:59:50  [ JavaFX Application Thread:client.model.Client:741 ] - [ INFO ]  null: null
2021-07-05 14:59:50  [ JavaFX Application Thread:client.model.Client:748 ] - [ INFO ]  flag launchen window
2021-07-05 14:59:53  [ JavaFX Application Thread:client.model.Client:1183 ] - [ INFO ]  {"messageType":"PlayerValues","messageBody":{"name":"d","figure":1}}
2021-07-05 14:59:53  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"PlayerValues","messageBody":{"name":"d","figure":1}}
2021-07-05 14:59:53  [ Thread-4:protocol.ExecuteOrder:66 ] - [ INFO ]  check player figures
2021-07-05 14:59:53  [ Thread-4:protocol.ExecuteOrder:74 ] - [ INFO ]  addPlayer
2021-07-05 14:59:53  [ Thread-4:server.network.Server:243 ] - [ INFO ]  server added player
2021-07-05 14:59:53  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 14:59:53  [ Thread-311:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-311
2021-07-05 14:59:53  [ Thread-4:server.network.Server:261 ] - [ INFO ]  server added player
2021-07-05 14:59:53  [ Thread-311:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"PlayerAdded","messageBody":{"clientID":33,"name":"d","figure":1}}Thread-311
2021-07-05 14:59:53  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"PlayerAdded","messageBody":{"clientID":33,"name":"d","figure":1}}Thread-6
2021-07-05 14:59:53  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 14:59:53  [ Thread-4:server.network.Server:261 ] - [ INFO ]  server added player
2021-07-05 14:59:53  [ JavaFX Application Thread:client.model.Client:731 ] - [ INFO ]  {"messageType":"PlayerAdded","messageBody":{"clientID":33,"name":"d","figure":1}}JavaFX Application Thread
2021-07-05 14:59:53  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"PlayerAdded","messageBody":{"clientID":33,"name":"d","figure":1}}Thread-6
2021-07-05 14:59:53  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 14:59:53  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"PlayerAdded","messageBody":{"clientID":100,"name":"a","figure":2}}Thread-6
2021-07-05 14:59:53  [ JavaFX Application Thread:client.model.Client:741 ] - [ INFO ]  null: null
2021-07-05 14:59:53  [ JavaFX Application Thread:client.model.Client:731 ] - [ INFO ]  {"messageType":"PlayerAdded","messageBody":{"clientID":33,"name":"d","figure":1}}JavaFX Application Thread
2021-07-05 14:59:53  [ JavaFX Application Thread:client.model.Client:741 ] - [ INFO ]  null: null
2021-07-05 14:59:53  [ JavaFX Application Thread:client.model.Client:748 ] - [ INFO ]  flag launchen window
2021-07-05 14:59:54  [ JavaFX Application Thread:client.model.Client:731 ] - [ INFO ]  {"messageType":"PlayerAdded","messageBody":{"clientID":33,"name":"d","figure":1}}JavaFX Application Thread
2021-07-05 14:59:54  [ JavaFX Application Thread:client.model.Client:731 ] - [ INFO ]  {"messageType":"PlayerAdded","messageBody":{"clientID":100,"name":"a","figure":2}}JavaFX Application Thread
2021-07-05 14:59:59  [ JavaFX Application Thread:client.model.Client:1196 ] - [ INFO ]  {"messageType":"SetStatus","messageBody":{"ready":true}}
2021-07-05 14:59:59  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"SetStatus","messageBody":{"ready":true}}
2021-07-05 14:59:59  [ Thread-4:protocol.ExecuteOrder:105 ] - [ INFO ]  set Status in ExecuteOrder
2021-07-05 14:59:59  [ Thread-4:server.network.Server:275 ] - [ INFO ]  server inform player status
2021-07-05 14:59:59  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 14:59:59  [ Thread-311:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-311
2021-07-05 14:59:59  [ Thread-311:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"PlayerStatus","messageBody":{"clientID":33,"ready":true}}Thread-311
2021-07-05 14:59:59  [ JavaFX Application Thread:client.model.Client:763 ] - [ INFO ]  {"messageType":"PlayerStatus","messageBody":{"clientID":33,"ready":true}}
2021-07-05 14:59:59  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"PlayerStatus","messageBody":{"clientID":33,"ready":true}}Thread-6
2021-07-05 14:59:59  [ Thread-4:server.network.Server:309 ] - [ INFO ]  server informs first ready player to select a map
2021-07-05 14:59:59  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 14:59:59  [ Thread-4:protocol.ExecuteOrder:486 ] - [ INFO ]  number of ready clients: 1
2021-07-05 14:59:59  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"SelectMap","messageBody":{"availableMaps":["Dizzy Highway","Lost Bearings","Death Trap","Extra Crispy","Twister"]}}Thread-6
2021-07-05 14:59:59  [ JavaFX Application Thread:client.model.Client:763 ] - [ INFO ]  {"messageType":"PlayerStatus","messageBody":{"clientID":33,"ready":true}}
2021-07-05 14:59:59  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 14:59:59  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 14:59:59  [ JavaFX Application Thread:client.model.Client:771 ] - [ INFO ]  {"messageType":"SelectMap","messageBody":{"availableMaps":["Dizzy Highway","Lost Bearings","Death Trap","Extra Crispy","Twister"]}}
2021-07-05 14:59:59  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 14:59:59  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 14:59:59  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 14:59:59  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 14:59:59  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:00:02  [ JavaFX Application Thread:client.model.Client:1237 ] - [ INFO ]  {"messageType":"MapSelected","messageBody":{"map":"Dizzy Highway"}}
2021-07-05 15:00:02  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"MapSelected","messageBody":{"map":"Dizzy Highway"}}
2021-07-05 15:00:02  [ Thread-4:protocol.ExecuteOrder:139 ] - [ INFO ]  set Map in ExecuteOrder
2021-07-05 15:00:02  [ Thread-4:server.network.Server:724 ] - [ INFO ]  server informs which map selected
2021-07-05 15:00:02  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:00:02  [ Thread-311:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-311
2021-07-05 15:00:02  [ Thread-311:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"MapSelected","messageBody":{"map":"Dizzy Highway"}}Thread-311
2021-07-05 15:00:02  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"MapSelected","messageBody":{"map":"Dizzy Highway"}}Thread-6
2021-07-05 15:00:02  [ Thread-4:server.game.Game:233 ] - [ INFO ]  Game sets map.
2021-07-05 15:00:02  [ Thread-4:server.maps.Board:18 ] - [ INFO ]  Board sets map of Dizzy Highway.
2021-07-05 15:00:02  [ Thread-4:protocol.ExecuteOrder:486 ] - [ INFO ]  number of ready clients: 1
2021-07-05 15:00:04  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:00:07  [ JavaFX Application Thread:client.model.Client:1196 ] - [ INFO ]  {"messageType":"SetStatus","messageBody":{"ready":true}}
2021-07-05 15:00:07  [ Thread-312:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"SetStatus","messageBody":{"ready":true}}
2021-07-05 15:00:07  [ Thread-312:protocol.ExecuteOrder:105 ] - [ INFO ]  set Status in ExecuteOrder
2021-07-05 15:00:07  [ Thread-312:server.network.Server:275 ] - [ INFO ]  server inform player status
2021-07-05 15:00:07  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:00:07  [ Thread-311:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-311
2021-07-05 15:00:07  [ Thread-312:server.network.Server:309 ] - [ INFO ]  server informs first ready player to select a map
2021-07-05 15:00:07  [ JavaFX Application Thread:client.model.Client:763 ] - [ INFO ]  {"messageType":"PlayerStatus","messageBody":{"clientID":100,"ready":true}}
2021-07-05 15:00:07  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"PlayerStatus","messageBody":{"clientID":100,"ready":true}}Thread-6
2021-07-05 15:00:07  [ Thread-311:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"PlayerStatus","messageBody":{"clientID":100,"ready":true}}Thread-311
2021-07-05 15:00:07  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:00:07  [ Thread-312:protocol.ExecuteOrder:486 ] - [ INFO ]  number of ready clients: 2
2021-07-05 15:00:07  [ Thread-312:protocol.ExecuteOrder:488 ] - [ INFO ]  number enough, to play
2021-07-05 15:00:07  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"SelectMap","messageBody":{"availableMaps":["Dizzy Highway","Lost Bearings","Death Trap","Extra Crispy","Twister"]}}Thread-6
2021-07-05 15:00:07  [ JavaFX Application Thread:client.model.Client:763 ] - [ INFO ]  {"messageType":"PlayerStatus","messageBody":{"clientID":100,"ready":true}}
2021-07-05 15:00:07  [ JavaFX Application Thread:client.model.Client:771 ] - [ INFO ]  {"messageType":"SelectMap","messageBody":{"availableMaps":["Dizzy Highway","Lost Bearings","Death Trap","Extra Crispy","Twister"]}}
2021-07-05 15:00:07  [ Thread-312:server.network.Server:324 ] - [ INFO ]  server sends map
2021-07-05 15:00:07  [ Thread-312:server.network.Server:355 ] - [ INFO ]  server sends phase info
2021-07-05 15:00:07  [ Thread-311:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-311
2021-07-05 15:00:07  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:00:07  [ Thread-312:server.network.Server:368 ] - [ INFO ]  server informs current player id
2021-07-05 15:00:07  [ Thread-2716:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-05 15:00:07  [ Thread-311:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"GameStarted","messageBody":{"gameMap":[[[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Antenna","isOnBoard":"Start A","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["top"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"ConveyorBelt","isOnBoard":"Start A","speed":1,"orientations":["right","left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"Start A","speed":1,"orientations":["right","left"],"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}]],[[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom","top","right"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom","left","top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right","left","top"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left","top","right"],"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["top"],"registers":null,"count":0}],[{"type":"Laser","isOnBoard":"5B","speed":0,"orientations":["top"],"registers":null,"count":1},{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0},{"type":"RestartPoint","isOnBoard":"DizzyHighway","speed":0,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"Laser","isOnBoard":"5B","speed":0,"orientations":["left"],"registers":null,"count":1},{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Laser","isOnBoard":"5B","speed":0,"orientations":["right"],"registers":null,"count":1},{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["left"],"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Laser","isOnBoard":"5B","speed":0,"orientations":["bottom"],"registers":null,"count":1},{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["top"],"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right","bottom","left"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left","right","bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top","right","bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top","bottom","left"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}]],[[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0},{"type":"CheckPoint","isOnBoard":"DizzyHighway","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]]]}}Thread-311
2021-07-05 15:00:07  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"GameStarted","messageBody":{"gameMap":[[[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Antenna","isOnBoard":"Start A","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["top"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"ConveyorBelt","isOnBoard":"Start A","speed":1,"orientations":["right","left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"Start A","speed":1,"orientations":["right","left"],"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}]],[[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom","top","right"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom","left","top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right","left","top"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left","top","right"],"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["top"],"registers":null,"count":0}],[{"type":"Laser","isOnBoard":"5B","speed":0,"orientations":["top"],"registers":null,"count":1},{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0},{"type":"RestartPoint","isOnBoard":"DizzyHighway","speed":0,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"Laser","isOnBoard":"5B","speed":0,"orientations":["left"],"registers":null,"count":1},{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Laser","isOnBoard":"5B","speed":0,"orientations":["right"],"registers":null,"count":1},{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["left"],"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Laser","isOnBoard":"5B","speed":0,"orientations":["bottom"],"registers":null,"count":1},{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["top"],"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right","bottom","left"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left","right","bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top","right","bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top","bottom","left"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}]],[[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0},{"type":"CheckPoint","isOnBoard":"DizzyHighway","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]]]}}Thread-6
2021-07-05 15:00:07  [ Thread-311:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-311
2021-07-05 15:00:07  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:00:07  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"ActivePhase","messageBody":{"phase":0}}Thread-6
2021-07-05 15:00:07  [ Thread-311:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"ActivePhase","messageBody":{"phase":0}}Thread-311
2021-07-05 15:00:07  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:00:07  [ Thread-311:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-311
2021-07-05 15:00:07  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-6
2021-07-05 15:00:07  [ Thread-311:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-311
2021-07-05 15:00:07  [ Thread-311:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-311
2021-07-05 15:00:07  [ Thread-311:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-311
2021-07-05 15:00:07  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-05 15:00:07  [ Thread-312:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:00:07  [ Thread-312:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-05 15:00:07  [ Thread-312:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-05 15:00:09  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:00:09  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:00:09  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:00:09  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:00:09  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:00:09  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:00:09  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:00:09  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:00:09  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:00:09  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:00:10  [ JavaFX Application Thread:client.model.Client:1303 ] - [ INFO ]  {"messageType":"SetStartingPoint","messageBody":{"x":1,"y":5}}
2021-07-05 15:00:10  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"SetStartingPoint","messageBody":{"x":1,"y":5}}
2021-07-05 15:00:10  [ Thread-4:server.network.Server:383 ] - [ INFO ]  server informs set starting point
2021-07-05 15:00:10  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:00:10  [ Thread-311:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-311
2021-07-05 15:00:10  [ Thread-4:server.network.Server:368 ] - [ INFO ]  server informs current player id
2021-07-05 15:00:10  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"StartingPointTaken","messageBody":{"x":1,"y":5,"clientID":33}}Thread-6
2021-07-05 15:00:10  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:00:10  [ Thread-311:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"StartingPointTaken","messageBody":{"x":1,"y":5,"clientID":33}}Thread-311
2021-07-05 15:00:10  [ Thread-311:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-311
2021-07-05 15:00:10  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":100}}Thread-6
2021-07-05 15:00:10  [ Thread-311:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":100}}Thread-311
2021-07-05 15:00:10  [ JavaFX Application Thread:client.model.Client:888 ] - [ INFO ]  1
2021-07-05 15:00:10  [ JavaFX Application Thread:client.model.Client:888 ] - [ INFO ]  1
2021-07-05 15:00:12  [ JavaFX Application Thread:client.model.Client:1303 ] - [ INFO ]  {"messageType":"SetStartingPoint","messageBody":{"x":0,"y":6}}
2021-07-05 15:00:12  [ Thread-312:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"SetStartingPoint","messageBody":{"x":0,"y":6}}
2021-07-05 15:00:12  [ Thread-312:server.network.Server:383 ] - [ INFO ]  server informs set starting point
2021-07-05 15:00:12  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:00:12  [ Thread-311:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-311
2021-07-05 15:00:12  [ Thread-312:server.network.Server:355 ] - [ INFO ]  server sends phase info
2021-07-05 15:00:12  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"StartingPointTaken","messageBody":{"x":0,"y":6,"clientID":100}}Thread-6
2021-07-05 15:00:12  [ Thread-311:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"StartingPointTaken","messageBody":{"x":0,"y":6,"clientID":100}}Thread-311
2021-07-05 15:00:12  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:00:12  [ Thread-311:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-311
2021-07-05 15:00:12  [ Thread-312:server.network.Server:742 ] - [ INFO ]  server informs Refill upgrade shop.
2021-07-05 15:00:12  [ Thread-311:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"ActivePhase","messageBody":{"phase":1}}Thread-311
2021-07-05 15:00:12  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"ActivePhase","messageBody":{"phase":1}}Thread-6
2021-07-05 15:00:12  [ Thread-311:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-311
2021-07-05 15:00:12  [ JavaFX Application Thread:client.model.Client:888 ] - [ INFO ]  0
2021-07-05 15:00:12  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:00:12  [ Thread-312:server.network.Server:368 ] - [ INFO ]  server informs current player id
2021-07-05 15:00:12  [ Thread-311:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"RefillShop","messageBody":{"cards":["AdminPrivilege","AdminPrivilege","MemorySwap","RealLaser"]}}Thread-311
2021-07-05 15:00:12  [ Thread-311:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-311
2021-07-05 15:00:12  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"RefillShop","messageBody":{"cards":["AdminPrivilege","AdminPrivilege","MemorySwap","RealLaser"]}}Thread-6
2021-07-05 15:00:12  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:00:12  [ JavaFX Application Thread:client.model.Client:888 ] - [ INFO ]  0
2021-07-05 15:00:12  [ Thread-311:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":100}}Thread-311
2021-07-05 15:00:12  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":100}}Thread-6
2021-07-05 15:00:12  [ Thread-2715:server.network.Connected:68 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 15:00:14  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:00:17  [ Thread-2716:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-05 15:00:17  [ Thread-2716:server.network.AliveCheck:62 ] - [ INFO ]  client 100 flag connect = false
2021-07-05 15:00:17  [ Thread-2716:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-05 15:00:17  [ Thread-311:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-311
2021-07-05 15:00:17  [ Thread-2715:server.network.Connected:68 ] - [ INFO ]  100 in while loop print flagconnect: true
2021-07-05 15:00:17  [ Thread-311:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-311
2021-07-05 15:00:17  [ Thread-2715:server.network.Connected:71 ] - [ INFO ]  100 in first if print flagconnect: true
2021-07-05 15:00:17  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-05 15:00:17  [ Thread-312:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:00:17  [ Thread-312:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-05 15:00:17  [ Thread-312:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-05 15:00:19  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:00:19  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:00:19  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:00:19  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:00:19  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:00:19  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:00:19  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:00:19  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:00:19  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:00:19  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:00:19  [ JavaFX Application Thread:client.model.Client:1466 ] - [ INFO ]  {"messageType":"BuyUpgrade","messageBody":{"card":"AdminPrivilege","isBuying":true}}
2021-07-05 15:00:19  [ Thread-312:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"BuyUpgrade","messageBody":{"card":"AdminPrivilege","isBuying":true}}
2021-07-05 15:00:19  [ Thread-312:server.network.Server:756 ] - [ INFO ]  server informs who bought which upgrade.
2021-07-05 15:00:19  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:00:19  [ Thread-311:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-311
2021-07-05 15:00:19  [ Thread-312:server.network.Server:368 ] - [ INFO ]  server informs current player id
2021-07-05 15:00:19  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"UpgradeBought","messageBody":{"clientID":100,"card":"AdminPrivilege"}}Thread-6
2021-07-05 15:00:19  [ Thread-311:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"UpgradeBought","messageBody":{"clientID":100,"card":"AdminPrivilege"}}Thread-311
2021-07-05 15:00:19  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:00:19  [ Thread-311:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-311
2021-07-05 15:00:19  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-6
2021-07-05 15:00:19  [ Thread-311:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-311
2021-07-05 15:00:24  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:00:24  [ Thread-2715:server.network.Connected:68 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 15:00:27  [ Thread-2716:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-05 15:00:27  [ Thread-2716:server.network.AliveCheck:62 ] - [ INFO ]  client 100 flag connect = false
2021-07-05 15:00:27  [ Thread-2716:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-05 15:00:27  [ Thread-311:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-311
2021-07-05 15:00:27  [ Thread-311:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-311
2021-07-05 15:00:27  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-05 15:00:27  [ Thread-312:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:00:27  [ Thread-312:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-05 15:00:27  [ Thread-312:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-05 15:00:28  [ JavaFX Application Thread:client.model.Client:1466 ] - [ INFO ]  {"messageType":"BuyUpgrade","messageBody":{"card":"MemorySwap","isBuying":true}}
2021-07-05 15:00:28  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"BuyUpgrade","messageBody":{"card":"MemorySwap","isBuying":true}}
2021-07-05 15:00:28  [ Thread-4:server.network.Server:756 ] - [ INFO ]  server informs who bought which upgrade.
2021-07-05 15:00:28  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:00:28  [ Thread-311:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-311
2021-07-05 15:00:28  [ Thread-4:server.network.Server:355 ] - [ INFO ]  server sends phase info
2021-07-05 15:00:28  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"UpgradeBought","messageBody":{"clientID":33,"card":"MemorySwap"}}Thread-6
2021-07-05 15:00:28  [ Thread-311:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"UpgradeBought","messageBody":{"clientID":33,"card":"MemorySwap"}}Thread-311
2021-07-05 15:00:28  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:00:28  [ Thread-311:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-311
2021-07-05 15:00:28  [ Thread-311:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"ActivePhase","messageBody":{"phase":2}}Thread-311
2021-07-05 15:00:28  [ Thread-311:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-311
2021-07-05 15:00:28  [ Thread-311:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"NotYourCards","messageBody":{"clientID":33,"cardsInHand":9}}Thread-311
2021-07-05 15:00:28  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"ActivePhase","messageBody":{"phase":2}}Thread-6
2021-07-05 15:00:28  [ Thread-4:server.network.Server:397 ] - [ INFO ]  server informs your cards.
2021-07-05 15:00:28  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:00:28  [ Thread-4:server.network.Server:397 ] - [ INFO ]  server informs your cards.
2021-07-05 15:00:28  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"NotYourCards","messageBody":{"clientID":100,"cardsInHand":9}}Thread-6
2021-07-05 15:00:28  [ Thread-311:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-311
2021-07-05 15:00:28  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:00:28  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"YourCards","messageBody":{"cardsInHand":["TurnLeft","MoveI","MoveI","TurnLeft","TurnRight","TurnLeft","MoveII","MoveII","TurnRight"]}}Thread-6
2021-07-05 15:00:28  [ Thread-311:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"YourCards","messageBody":{"cardsInHand":["MoveI","MoveI","MoveII","Again","Again","MoveI","TurnRight","MoveIII","TurnLeft"]}}Thread-311
2021-07-05 15:00:28  [ JavaFX Application Thread:client.model.Client:927 ] - [ INFO ]  33have got 9 cards
2021-07-05 15:00:28  [ JavaFX Application Thread:client.model.Client:927 ] - [ INFO ]  100have got 9 cards
2021-07-05 15:00:28  [ JavaFX Application Thread:client.model.Client:891 ] - [ INFO ]  clients your cards
2021-07-05 15:00:28  [ JavaFX Application Thread:client.model.Client:891 ] - [ INFO ]  clients your cards
2021-07-05 15:00:29  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:00:29  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:00:29  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:00:29  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:00:29  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:00:29  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:00:29  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:00:29  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:00:29  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:00:29  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:00:29  [ Thread-2715:server.network.Connected:68 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 15:00:34  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:00:34  [ Thread-2715:server.network.Connected:68 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 15:00:37  [ Thread-2716:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-05 15:00:37  [ Thread-2716:server.network.AliveCheck:62 ] - [ INFO ]  client 100 flag connect = false
2021-07-05 15:00:37  [ Thread-2716:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-05 15:00:37  [ Thread-311:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-311
2021-07-05 15:00:37  [ Thread-311:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-311
2021-07-05 15:00:37  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-05 15:00:37  [ Thread-312:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:00:37  [ Thread-312:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-05 15:00:37  [ Thread-312:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-05 15:00:39  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:00:39  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:00:39  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:00:39  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:00:39  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:00:39  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:00:39  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:00:39  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:00:39  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:00:39  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:00:39  [ Thread-2715:server.network.Connected:68 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 15:00:44  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:00:44  [ Thread-2715:server.network.Connected:68 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 15:00:47  [ Thread-2716:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-05 15:00:47  [ Thread-2716:server.network.AliveCheck:62 ] - [ INFO ]  client 100 flag connect = false
2021-07-05 15:00:47  [ Thread-2716:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-05 15:00:47  [ Thread-311:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-311
2021-07-05 15:00:47  [ Thread-311:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-311
2021-07-05 15:00:47  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-05 15:00:47  [ Thread-312:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:00:47  [ Thread-312:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-05 15:00:47  [ Thread-312:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-05 15:00:49  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:00:49  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:00:49  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:00:49  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:00:49  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:00:49  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:00:49  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:00:49  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:00:49  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:00:49  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:00:49  [ Thread-2715:server.network.Connected:68 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 15:00:54  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:00:54  [ Thread-2715:server.network.Connected:68 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 15:00:57  [ Thread-2716:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-05 15:00:57  [ Thread-2716:server.network.AliveCheck:62 ] - [ INFO ]  client 100 flag connect = false
2021-07-05 15:00:57  [ Thread-2716:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-05 15:00:57  [ Thread-311:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-311
2021-07-05 15:00:57  [ Thread-311:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-311
2021-07-05 15:00:57  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-05 15:00:57  [ Thread-312:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:00:57  [ Thread-312:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-05 15:00:57  [ Thread-312:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-05 15:00:59  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:00:59  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:00:59  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:00:59  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:00:59  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:00:59  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:00:59  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:00:59  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:00:59  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:00:59  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:00:59  [ Thread-2715:server.network.Connected:68 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 15:01:04  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:01:04  [ Thread-2715:server.network.Connected:68 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 15:01:07  [ Thread-2716:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-05 15:01:07  [ Thread-2716:server.network.AliveCheck:62 ] - [ INFO ]  client 100 flag connect = false
2021-07-05 15:01:07  [ Thread-2716:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-05 15:01:07  [ Thread-311:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-311
2021-07-05 15:01:07  [ Thread-311:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-311
2021-07-05 15:01:07  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-05 15:01:07  [ Thread-312:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:01:07  [ Thread-312:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-05 15:01:07  [ Thread-312:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-05 15:01:09  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:01:09  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:01:09  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:01:09  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:01:09  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:01:09  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:01:09  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:01:09  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:01:09  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:01:09  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:01:09  [ Thread-2715:server.network.Connected:68 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 15:01:14  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:01:14  [ Thread-2715:server.network.Connected:68 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 15:01:17  [ Thread-2716:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-05 15:01:17  [ Thread-2716:server.network.AliveCheck:62 ] - [ INFO ]  client 100 flag connect = false
2021-07-05 15:01:17  [ Thread-2716:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-05 15:01:17  [ Thread-311:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-311
2021-07-05 15:01:17  [ Thread-311:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-311
2021-07-05 15:01:17  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-05 15:01:17  [ Thread-312:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:01:17  [ Thread-312:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-05 15:01:17  [ Thread-312:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-05 15:01:19  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:01:19  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:01:19  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:01:19  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:01:19  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:01:19  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:01:19  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:01:19  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:01:19  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:01:19  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:01:19  [ Thread-2715:server.network.Connected:68 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 15:01:24  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:01:24  [ Thread-2715:server.network.Connected:68 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 15:01:27  [ Thread-2716:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-05 15:01:27  [ Thread-2716:server.network.AliveCheck:62 ] - [ INFO ]  client 100 flag connect = false
2021-07-05 15:01:27  [ Thread-2716:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-05 15:01:27  [ Thread-311:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-311
2021-07-05 15:01:27  [ Thread-311:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-311
2021-07-05 15:01:27  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-05 15:01:27  [ Thread-312:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:01:27  [ Thread-312:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-05 15:01:27  [ Thread-312:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-05 15:01:29  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:01:29  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:01:29  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:01:29  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:01:29  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:01:29  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:01:29  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:01:29  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:01:29  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:01:29  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:01:29  [ Thread-2715:server.network.Connected:68 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 15:01:34  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:01:34  [ Thread-2715:server.network.Connected:68 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 15:01:37  [ Thread-2716:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-05 15:01:37  [ Thread-2716:server.network.AliveCheck:62 ] - [ INFO ]  client 100 flag connect = false
2021-07-05 15:01:37  [ Thread-2716:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-05 15:01:37  [ Thread-311:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-311
2021-07-05 15:01:37  [ Thread-311:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-311
2021-07-05 15:01:37  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-05 15:01:37  [ Thread-312:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:01:37  [ Thread-312:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-05 15:01:37  [ Thread-312:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-05 15:01:39  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:01:39  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:01:39  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:01:39  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:01:39  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:01:39  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:01:39  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:01:39  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:01:39  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:01:39  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:01:39  [ Thread-2715:server.network.Connected:68 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 15:01:44  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:01:44  [ Thread-2715:server.network.Connected:68 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 15:01:47  [ Thread-2716:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-05 15:01:47  [ Thread-2716:server.network.AliveCheck:62 ] - [ INFO ]  client 100 flag connect = false
2021-07-05 15:01:47  [ Thread-2716:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-05 15:01:47  [ Thread-311:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-311
2021-07-05 15:01:47  [ Thread-311:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-311
2021-07-05 15:01:47  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-05 15:01:47  [ Thread-312:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:01:47  [ Thread-312:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-05 15:01:47  [ Thread-312:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-05 15:01:49  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:01:49  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:01:49  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:01:49  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:01:49  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:01:49  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:01:49  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:01:49  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:01:49  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:01:49  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:01:49  [ Thread-2715:server.network.Connected:68 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 15:01:54  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:01:54  [ Thread-2715:server.network.Connected:68 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 15:01:57  [ Thread-2716:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-05 15:01:57  [ Thread-2716:server.network.AliveCheck:62 ] - [ INFO ]  client 100 flag connect = false
2021-07-05 15:01:57  [ Thread-2716:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-05 15:01:57  [ Thread-311:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-311
2021-07-05 15:01:57  [ Thread-311:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-311
2021-07-05 15:01:57  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-05 15:01:57  [ Thread-312:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:01:57  [ Thread-312:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-05 15:01:57  [ Thread-312:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-05 15:01:59  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:01:59  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:01:59  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:01:59  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:01:59  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:01:59  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:01:59  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:01:59  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:01:59  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:01:59  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:01:59  [ Thread-2715:server.network.Connected:68 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 15:02:04  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:02:04  [ Thread-2715:server.network.Connected:68 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 15:02:07  [ Thread-2716:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-05 15:02:07  [ Thread-2716:server.network.AliveCheck:62 ] - [ INFO ]  client 100 flag connect = false
2021-07-05 15:02:07  [ Thread-2716:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-05 15:02:07  [ Thread-311:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-311
2021-07-05 15:02:07  [ Thread-311:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-311
2021-07-05 15:02:07  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-05 15:02:07  [ Thread-312:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:02:07  [ Thread-312:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-05 15:02:07  [ Thread-312:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-05 15:02:09  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:02:09  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:02:09  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:02:09  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:02:09  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:02:09  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:02:09  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:02:09  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:02:09  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:02:09  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:02:09  [ Thread-2715:server.network.Connected:68 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 15:02:14  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:02:14  [ Thread-2715:server.network.Connected:68 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 15:02:17  [ Thread-2716:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-05 15:02:17  [ Thread-2716:server.network.AliveCheck:62 ] - [ INFO ]  client 100 flag connect = false
2021-07-05 15:02:17  [ Thread-2716:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-05 15:02:17  [ Thread-311:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-311
2021-07-05 15:02:17  [ Thread-311:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-311
2021-07-05 15:02:17  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-05 15:02:17  [ Thread-312:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:02:17  [ Thread-312:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-05 15:02:17  [ Thread-312:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-05 15:02:19  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:02:19  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:02:19  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:02:19  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:02:19  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:02:19  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:02:19  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:02:19  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:02:19  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:02:19  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:02:19  [ Thread-2715:server.network.Connected:68 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 15:02:24  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:02:24  [ Thread-2715:server.network.Connected:68 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 15:02:27  [ Thread-2716:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-05 15:02:27  [ Thread-2716:server.network.AliveCheck:62 ] - [ INFO ]  client 100 flag connect = false
2021-07-05 15:02:27  [ Thread-2716:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-05 15:02:27  [ Thread-311:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-311
2021-07-05 15:02:27  [ Thread-311:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-311
2021-07-05 15:02:27  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-05 15:02:27  [ Thread-312:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:02:27  [ Thread-312:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-05 15:02:27  [ Thread-312:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-05 15:02:29  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:02:29  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:02:29  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:02:29  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:02:29  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:02:29  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:02:29  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:02:29  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:02:29  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:02:29  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:02:29  [ Thread-2715:server.network.Connected:68 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 15:02:34  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:02:34  [ Thread-2715:server.network.Connected:68 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 15:02:37  [ Thread-2716:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-05 15:02:37  [ Thread-2716:server.network.AliveCheck:62 ] - [ INFO ]  client 100 flag connect = false
2021-07-05 15:02:37  [ Thread-2716:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-05 15:02:37  [ Thread-311:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-311
2021-07-05 15:02:37  [ Thread-311:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-311
2021-07-05 15:02:37  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-05 15:02:37  [ Thread-312:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:02:37  [ Thread-312:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-05 15:02:37  [ Thread-312:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-05 15:02:39  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:02:39  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:02:39  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:02:39  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:02:39  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:02:39  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:02:39  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:02:39  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:02:39  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:02:39  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:02:39  [ Thread-2715:server.network.Connected:68 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 15:02:44  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:02:44  [ Thread-2715:server.network.Connected:68 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 15:02:47  [ Thread-2716:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-05 15:02:47  [ Thread-2716:server.network.AliveCheck:62 ] - [ INFO ]  client 100 flag connect = false
2021-07-05 15:02:47  [ Thread-2716:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-05 15:02:47  [ Thread-311:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-311
2021-07-05 15:02:47  [ Thread-311:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-311
2021-07-05 15:02:47  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-05 15:02:47  [ Thread-312:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:02:47  [ Thread-312:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-05 15:02:47  [ Thread-312:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-05 15:02:49  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:02:49  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:02:49  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:02:49  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:02:49  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:02:49  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:02:49  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:02:49  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:02:49  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:02:49  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:02:49  [ Thread-2715:server.network.Connected:68 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 15:02:54  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:02:54  [ Thread-2715:server.network.Connected:68 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 15:02:57  [ Thread-2716:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-05 15:02:57  [ Thread-2716:server.network.AliveCheck:62 ] - [ INFO ]  client 100 flag connect = false
2021-07-05 15:02:57  [ Thread-2716:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-05 15:02:57  [ Thread-311:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-311
2021-07-05 15:02:57  [ Thread-311:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-311
2021-07-05 15:02:57  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-05 15:02:57  [ Thread-312:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:02:57  [ Thread-312:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-05 15:02:57  [ Thread-312:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-05 15:02:59  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:02:59  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:02:59  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:02:59  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:02:59  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:02:59  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:02:59  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:02:59  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:02:59  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:02:59  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:02:59  [ Thread-2715:server.network.Connected:68 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 15:03:04  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:03:04  [ Thread-2715:server.network.Connected:68 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 15:03:07  [ Thread-2716:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-05 15:03:07  [ Thread-2716:server.network.AliveCheck:62 ] - [ INFO ]  client 100 flag connect = false
2021-07-05 15:03:07  [ Thread-2716:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-05 15:03:07  [ Thread-311:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-311
2021-07-05 15:03:07  [ Thread-311:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-311
2021-07-05 15:03:07  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-05 15:03:07  [ Thread-312:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:03:07  [ Thread-312:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-05 15:03:07  [ Thread-312:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-05 15:03:09  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:03:09  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:03:09  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:03:09  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:03:09  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:03:09  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:03:09  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:03:09  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:03:09  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:03:09  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:03:09  [ Thread-2715:server.network.Connected:68 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 15:03:14  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:03:14  [ Thread-2715:server.network.Connected:68 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 15:03:17  [ Thread-2716:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-05 15:03:17  [ Thread-2716:server.network.AliveCheck:62 ] - [ INFO ]  client 100 flag connect = false
2021-07-05 15:03:17  [ Thread-2716:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-05 15:03:17  [ Thread-311:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-311
2021-07-05 15:03:17  [ Thread-311:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-311
2021-07-05 15:03:17  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-05 15:03:17  [ Thread-312:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:03:17  [ Thread-312:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-05 15:03:17  [ Thread-312:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-05 15:03:19  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:03:19  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:03:19  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:03:19  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:03:19  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:03:19  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:03:19  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:03:19  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:03:19  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:03:19  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:03:19  [ Thread-2715:server.network.Connected:68 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 15:03:24  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:03:24  [ Thread-2715:server.network.Connected:68 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 15:03:27  [ Thread-2716:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-05 15:03:27  [ Thread-2716:server.network.AliveCheck:62 ] - [ INFO ]  client 100 flag connect = false
2021-07-05 15:03:27  [ Thread-2716:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-05 15:03:27  [ Thread-311:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-311
2021-07-05 15:03:27  [ Thread-311:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-311
2021-07-05 15:03:27  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-05 15:03:27  [ Thread-312:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:03:27  [ Thread-312:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-05 15:03:27  [ Thread-312:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-05 15:03:29  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:03:29  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:03:29  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:03:29  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:03:29  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:03:29  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:03:29  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:03:29  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:03:29  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:03:29  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:03:29  [ Thread-2715:server.network.Connected:68 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 15:03:34  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:03:34  [ Thread-2715:server.network.Connected:68 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 15:03:37  [ Thread-2716:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-05 15:03:37  [ Thread-2716:server.network.AliveCheck:62 ] - [ INFO ]  client 100 flag connect = false
2021-07-05 15:03:37  [ Thread-2716:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-05 15:03:37  [ Thread-311:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-311
2021-07-05 15:03:37  [ Thread-311:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-311
2021-07-05 15:03:37  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-05 15:03:37  [ Thread-312:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:03:37  [ Thread-312:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-05 15:03:37  [ Thread-312:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-05 15:03:39  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:03:39  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:03:39  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:03:39  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:03:39  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:03:39  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:03:39  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:03:39  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:03:39  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:03:39  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:03:39  [ Thread-2715:server.network.Connected:68 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 15:03:44  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:03:44  [ Thread-2715:server.network.Connected:68 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 15:03:47  [ Thread-2716:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-05 15:03:47  [ Thread-2716:server.network.AliveCheck:62 ] - [ INFO ]  client 100 flag connect = false
2021-07-05 15:03:47  [ Thread-2716:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-05 15:03:47  [ Thread-311:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-311
2021-07-05 15:03:47  [ Thread-311:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-311
2021-07-05 15:03:47  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-05 15:03:47  [ Thread-312:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:03:47  [ Thread-312:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-05 15:03:47  [ Thread-312:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-05 15:03:49  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:03:49  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:03:49  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:03:49  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:03:49  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:03:49  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:03:49  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:03:49  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:03:49  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:03:49  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:03:49  [ Thread-2715:server.network.Connected:68 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 15:03:54  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:03:54  [ Thread-2715:server.network.Connected:68 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 15:03:57  [ Thread-2716:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-05 15:03:57  [ Thread-2716:server.network.AliveCheck:62 ] - [ INFO ]  client 100 flag connect = false
2021-07-05 15:03:57  [ Thread-2716:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-05 15:03:57  [ Thread-311:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-311
2021-07-05 15:03:57  [ Thread-311:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-311
2021-07-05 15:03:57  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-05 15:03:57  [ Thread-312:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:03:57  [ Thread-312:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-05 15:03:57  [ Thread-312:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-05 15:03:59  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:03:59  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:03:59  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:03:59  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:03:59  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:03:59  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:03:59  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:03:59  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:03:59  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:03:59  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:03:59  [ Thread-2715:server.network.Connected:68 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 15:04:04  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:04:04  [ Thread-2715:server.network.Connected:68 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 15:04:07  [ Thread-2716:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-05 15:04:07  [ Thread-2716:server.network.AliveCheck:62 ] - [ INFO ]  client 100 flag connect = false
2021-07-05 15:04:07  [ Thread-2716:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-05 15:04:07  [ Thread-311:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-311
2021-07-05 15:04:07  [ Thread-311:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-311
2021-07-05 15:04:07  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-05 15:04:07  [ Thread-312:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:04:07  [ Thread-312:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-05 15:04:07  [ Thread-312:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-05 15:04:09  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:04:09  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:04:09  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:04:09  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:04:09  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:04:09  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:04:09  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:04:09  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:04:09  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:04:09  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:04:09  [ Thread-2715:server.network.Connected:68 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 15:04:14  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:04:14  [ Thread-2715:server.network.Connected:68 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 15:04:17  [ Thread-2716:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-05 15:04:17  [ Thread-2716:server.network.AliveCheck:62 ] - [ INFO ]  client 100 flag connect = false
2021-07-05 15:04:17  [ Thread-2716:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-05 15:04:17  [ Thread-311:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-311
2021-07-05 15:04:17  [ Thread-311:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-311
2021-07-05 15:04:17  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-05 15:04:17  [ Thread-312:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:04:17  [ Thread-312:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-05 15:04:17  [ Thread-312:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-05 15:04:19  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:04:19  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:04:19  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:04:19  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:04:19  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:04:19  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:04:19  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:04:19  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:04:19  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:04:19  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:04:19  [ Thread-2715:server.network.Connected:68 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 15:04:24  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:04:24  [ Thread-2715:server.network.Connected:68 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 15:04:27  [ Thread-2716:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-05 15:04:27  [ Thread-2716:server.network.AliveCheck:62 ] - [ INFO ]  client 100 flag connect = false
2021-07-05 15:04:27  [ Thread-2716:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-05 15:04:27  [ Thread-311:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-311
2021-07-05 15:04:27  [ Thread-311:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-311
2021-07-05 15:04:27  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-05 15:04:27  [ Thread-312:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:04:27  [ Thread-312:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-05 15:04:27  [ Thread-312:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-05 15:04:29  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:04:29  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:04:29  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:04:29  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:04:29  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:04:29  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:04:29  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:04:29  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:04:29  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:04:29  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:04:29  [ Thread-2715:server.network.Connected:68 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 15:04:34  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:04:34  [ Thread-2715:server.network.Connected:68 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 15:04:37  [ Thread-2716:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-05 15:04:37  [ Thread-2716:server.network.AliveCheck:62 ] - [ INFO ]  client 100 flag connect = false
2021-07-05 15:04:37  [ Thread-2716:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-05 15:04:37  [ Thread-311:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-311
2021-07-05 15:04:37  [ Thread-311:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-311
2021-07-05 15:04:37  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-05 15:04:37  [ Thread-312:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:04:37  [ Thread-312:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-05 15:04:37  [ Thread-312:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-05 15:04:39  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:04:39  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:04:39  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:04:39  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:04:39  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:04:39  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:04:39  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:04:39  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:04:39  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:04:39  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:04:39  [ Thread-2715:server.network.Connected:68 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 15:04:44  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:04:44  [ Thread-2715:server.network.Connected:68 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 15:04:47  [ Thread-2716:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-05 15:04:47  [ Thread-2716:server.network.AliveCheck:62 ] - [ INFO ]  client 100 flag connect = false
2021-07-05 15:04:47  [ Thread-2716:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-05 15:04:47  [ Thread-311:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-311
2021-07-05 15:04:47  [ Thread-311:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-311
2021-07-05 15:04:47  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-05 15:04:47  [ Thread-312:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:04:47  [ Thread-312:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-05 15:04:47  [ Thread-312:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-05 15:04:49  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:04:49  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:04:49  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:04:49  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:04:49  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:04:49  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:04:49  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:04:49  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:04:49  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:04:49  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:04:49  [ Thread-2715:server.network.Connected:68 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 15:04:54  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:04:54  [ Thread-2715:server.network.Connected:68 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 15:04:57  [ Thread-2716:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-05 15:04:57  [ Thread-2716:server.network.AliveCheck:62 ] - [ INFO ]  client 100 flag connect = false
2021-07-05 15:04:57  [ Thread-2716:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-05 15:04:57  [ Thread-311:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-311
2021-07-05 15:04:57  [ Thread-311:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-311
2021-07-05 15:04:57  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-05 15:04:57  [ Thread-312:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:04:57  [ Thread-312:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-05 15:04:57  [ Thread-312:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-05 15:04:59  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:04:59  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:04:59  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:04:59  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:04:59  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:04:59  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:04:59  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:04:59  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:04:59  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:04:59  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:04:59  [ Thread-2715:server.network.Connected:68 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 15:05:04  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:05:04  [ Thread-2715:server.network.Connected:68 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 15:05:07  [ Thread-2716:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-05 15:05:07  [ Thread-2716:server.network.AliveCheck:62 ] - [ INFO ]  client 100 flag connect = false
2021-07-05 15:05:07  [ Thread-2716:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-05 15:05:07  [ Thread-311:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-311
2021-07-05 15:05:07  [ Thread-311:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-311
2021-07-05 15:05:07  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-05 15:05:07  [ Thread-312:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:05:07  [ Thread-312:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-05 15:05:07  [ Thread-312:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-05 15:05:09  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:05:09  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:05:09  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:05:09  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:05:09  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:05:09  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:05:09  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:05:09  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:05:09  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:05:09  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:05:09  [ Thread-2715:server.network.Connected:68 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 15:05:14  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:05:14  [ Thread-2715:server.network.Connected:68 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 15:05:17  [ JavaFX Application Thread:client.model.Client:1382 ] - [ INFO ]  {"messageType":"SelectedCard","messageBody":{"card":"MoveII","register":1}}
2021-07-05 15:05:17  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"SelectedCard","messageBody":{"card":"MoveII","register":1}}
2021-07-05 15:05:17  [ Thread-4:protocol.ExecuteOrder:232 ] - [ INFO ]  MoveII
2021-07-05 15:05:17  [ Thread-4:server.network.Server:486 ] - [ INFO ]  server informs card selected
2021-07-05 15:05:17  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:05:17  [ Thread-311:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-311
2021-07-05 15:05:17  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":33,"register":1,"filled":true}}Thread-6
2021-07-05 15:05:17  [ Thread-311:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":33,"register":1,"filled":true}}Thread-311
2021-07-05 15:05:17  [ JavaFX Application Thread:client.model.Client:940 ] - [ INFO ]  33 has for register 1true
2021-07-05 15:05:17  [ JavaFX Application Thread:client.model.Client:940 ] - [ INFO ]  33 has for register 1true
2021-07-05 15:05:17  [ Thread-2716:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-05 15:05:17  [ Thread-2716:server.network.AliveCheck:62 ] - [ INFO ]  client 100 flag connect = false
2021-07-05 15:05:17  [ Thread-2716:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-05 15:05:17  [ Thread-311:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-311
2021-07-05 15:05:17  [ Thread-311:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-311
2021-07-05 15:05:17  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-05 15:05:17  [ Thread-312:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:05:17  [ Thread-312:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-05 15:05:17  [ Thread-312:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-05 15:05:19  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:05:19  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:05:19  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:05:19  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:05:19  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:05:19  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:05:19  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:05:19  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:05:19  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:05:19  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:05:19  [ Thread-2715:server.network.Connected:68 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 15:05:21  [ JavaFX Application Thread:client.model.Client:1382 ] - [ INFO ]  {"messageType":"SelectedCard","messageBody":{"card":"MoveII","register":2}}
2021-07-05 15:05:21  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"SelectedCard","messageBody":{"card":"MoveII","register":2}}
2021-07-05 15:05:21  [ Thread-4:protocol.ExecuteOrder:232 ] - [ INFO ]  MoveII
2021-07-05 15:05:21  [ Thread-4:server.network.Server:486 ] - [ INFO ]  server informs card selected
2021-07-05 15:05:21  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:05:21  [ Thread-311:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-311
2021-07-05 15:05:21  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":33,"register":2,"filled":true}}Thread-6
2021-07-05 15:05:21  [ Thread-311:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":33,"register":2,"filled":true}}Thread-311
2021-07-05 15:05:21  [ JavaFX Application Thread:client.model.Client:940 ] - [ INFO ]  33 has for register 2true
2021-07-05 15:05:21  [ JavaFX Application Thread:client.model.Client:940 ] - [ INFO ]  33 has for register 2true
2021-07-05 15:05:24  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:05:24  [ Thread-2715:server.network.Connected:68 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 15:05:25  [ JavaFX Application Thread:client.model.Client:1382 ] - [ INFO ]  {"messageType":"SelectedCard","messageBody":{"card":"MoveI","register":3}}
2021-07-05 15:05:25  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"SelectedCard","messageBody":{"card":"MoveI","register":3}}
2021-07-05 15:05:25  [ Thread-4:protocol.ExecuteOrder:232 ] - [ INFO ]  MoveI
2021-07-05 15:05:25  [ Thread-4:server.network.Server:486 ] - [ INFO ]  server informs card selected
2021-07-05 15:05:25  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:05:25  [ Thread-311:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-311
2021-07-05 15:05:25  [ Thread-311:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":33,"register":3,"filled":true}}Thread-311
2021-07-05 15:05:25  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":33,"register":3,"filled":true}}Thread-6
2021-07-05 15:05:25  [ JavaFX Application Thread:client.model.Client:940 ] - [ INFO ]  33 has for register 3true
2021-07-05 15:05:25  [ JavaFX Application Thread:client.model.Client:940 ] - [ INFO ]  33 has for register 3true
2021-07-05 15:05:27  [ JavaFX Application Thread:client.model.Client:1382 ] - [ INFO ]  {"messageType":"SelectedCard","messageBody":{"card":"MoveI","register":4}}
2021-07-05 15:05:27  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"SelectedCard","messageBody":{"card":"MoveI","register":4}}
2021-07-05 15:05:27  [ Thread-4:protocol.ExecuteOrder:232 ] - [ INFO ]  MoveI
2021-07-05 15:05:27  [ Thread-4:server.network.Server:486 ] - [ INFO ]  server informs card selected
2021-07-05 15:05:27  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:05:27  [ Thread-311:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-311
2021-07-05 15:05:27  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":33,"register":4,"filled":true}}Thread-6
2021-07-05 15:05:27  [ Thread-311:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":33,"register":4,"filled":true}}Thread-311
2021-07-05 15:05:27  [ JavaFX Application Thread:client.model.Client:940 ] - [ INFO ]  33 has for register 4true
2021-07-05 15:05:27  [ JavaFX Application Thread:client.model.Client:940 ] - [ INFO ]  33 has for register 4true
2021-07-05 15:05:27  [ Thread-2716:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-05 15:05:27  [ Thread-2716:server.network.AliveCheck:62 ] - [ INFO ]  client 100 flag connect = false
2021-07-05 15:05:27  [ Thread-2716:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-05 15:05:27  [ Thread-311:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-311
2021-07-05 15:05:27  [ Thread-311:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-311
2021-07-05 15:05:27  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-05 15:05:27  [ Thread-312:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:05:27  [ Thread-312:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-05 15:05:27  [ Thread-312:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-05 15:05:29  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:05:29  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:05:29  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:05:29  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:05:29  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:05:29  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:05:29  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:05:29  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:05:29  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:05:29  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:05:29  [ Thread-2715:server.network.Connected:68 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 15:05:31  [ JavaFX Application Thread:client.model.Client:1382 ] - [ INFO ]  {"messageType":"SelectedCard","messageBody":{"card":"TurnLeft","register":5}}
2021-07-05 15:05:31  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"SelectedCard","messageBody":{"card":"TurnLeft","register":5}}
2021-07-05 15:05:31  [ Thread-4:protocol.ExecuteOrder:232 ] - [ INFO ]  TurnLeft
2021-07-05 15:05:31  [ Thread-4:server.network.Server:486 ] - [ INFO ]  server informs card selected
2021-07-05 15:05:31  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:05:31  [ Thread-311:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-311
2021-07-05 15:05:31  [ Thread-311:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":33,"register":5,"filled":true}}Thread-311
2021-07-05 15:05:31  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":33,"register":5,"filled":true}}Thread-6
2021-07-05 15:05:31  [ JavaFX Application Thread:client.model.Client:940 ] - [ INFO ]  33 has for register 5true
2021-07-05 15:05:31  [ JavaFX Application Thread:client.model.Client:940 ] - [ INFO ]  33 has for register 5true
2021-07-05 15:05:34  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:05:34  [ Thread-2715:server.network.Connected:68 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 15:05:37  [ Thread-2716:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-05 15:05:37  [ Thread-2716:server.network.AliveCheck:62 ] - [ INFO ]  client 100 flag connect = false
2021-07-05 15:05:37  [ Thread-2716:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-05 15:05:37  [ Thread-311:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-311
2021-07-05 15:05:37  [ Thread-311:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-311
2021-07-05 15:05:37  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-05 15:05:37  [ Thread-312:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:05:37  [ Thread-312:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-05 15:05:37  [ Thread-312:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-05 15:05:39  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:05:39  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:05:39  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:05:39  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:05:39  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:05:39  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:05:39  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:05:39  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:05:39  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:05:39  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:05:39  [ Thread-2715:server.network.Connected:68 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 15:05:44  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:05:44  [ Thread-2715:server.network.Connected:68 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 15:05:47  [ Thread-2716:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-05 15:05:47  [ Thread-2716:server.network.AliveCheck:62 ] - [ INFO ]  client 100 flag connect = false
2021-07-05 15:05:47  [ Thread-2716:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-05 15:05:47  [ Thread-311:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-311
2021-07-05 15:05:47  [ Thread-311:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-311
2021-07-05 15:05:47  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-05 15:05:47  [ Thread-312:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:05:47  [ Thread-312:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-05 15:05:47  [ Thread-312:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-05 15:05:49  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:05:49  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:05:49  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:05:49  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:05:49  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:05:49  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:05:49  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:05:49  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:05:49  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:05:49  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:05:49  [ Thread-2715:server.network.Connected:68 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 15:05:54  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:05:54  [ Thread-2715:server.network.Connected:68 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 15:05:57  [ Thread-2716:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-05 15:05:57  [ Thread-2716:server.network.AliveCheck:62 ] - [ INFO ]  client 100 flag connect = false
2021-07-05 15:05:57  [ Thread-2716:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-05 15:05:57  [ Thread-311:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-311
2021-07-05 15:05:57  [ Thread-311:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-311
2021-07-05 15:05:57  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-05 15:05:57  [ Thread-312:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:05:57  [ Thread-312:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-05 15:05:57  [ Thread-312:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-05 15:05:59  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:05:59  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:05:59  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:05:59  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:05:59  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:05:59  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:05:59  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:05:59  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:05:59  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:05:59  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:05:59  [ Thread-2715:server.network.Connected:68 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 15:06:04  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:06:04  [ Thread-2715:server.network.Connected:68 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 15:06:07  [ Thread-2716:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-05 15:06:07  [ Thread-2716:server.network.AliveCheck:62 ] - [ INFO ]  client 100 flag connect = false
2021-07-05 15:06:07  [ Thread-2716:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-05 15:06:07  [ Thread-311:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-311
2021-07-05 15:06:07  [ Thread-311:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-311
2021-07-05 15:06:07  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-05 15:06:07  [ Thread-312:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:06:07  [ Thread-312:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-05 15:06:07  [ Thread-312:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-05 15:06:09  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:06:09  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:06:09  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:06:09  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:06:09  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:06:09  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:06:09  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:06:09  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:06:09  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:06:09  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:06:09  [ Thread-2715:server.network.Connected:68 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 15:06:12  [ JavaFX Application Thread:client.model.Client:1404 ] - [ INFO ]  {"messageType":"SelectionFinished","messageBody":{"clientID":33}}
2021-07-05 15:06:12  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"SelectionFinished","messageBody":{"clientID":33}}
2021-07-05 15:06:12  [ Thread-4:server.game.Game:392 ] - [ INFO ]  game starts timer
2021-07-05 15:06:12  [ Thread-4:server.network.Server:498 ] - [ INFO ]  server starts timer
2021-07-05 15:06:12  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:06:12  [ Thread-311:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-311
2021-07-05 15:06:12  [ Thread-311:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"TimerStarted","messageBody":null}Thread-311
2021-07-05 15:06:12  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"TimerStarted","messageBody":null}Thread-6
2021-07-05 15:06:12  [ JavaFX Application Thread:client.model.Client:944 ] - [ INFO ]  timer is on
2021-07-05 15:06:12  [ JavaFX Application Thread:client.model.Client:944 ] - [ INFO ]  timer is on
2021-07-05 15:06:14  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:06:14  [ Thread-2715:server.network.Connected:68 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 15:06:17  [ Thread-2716:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-05 15:06:17  [ Thread-2716:server.network.AliveCheck:62 ] - [ INFO ]  client 100 flag connect = false
2021-07-05 15:06:17  [ Thread-2716:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-05 15:06:17  [ Thread-311:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-311
2021-07-05 15:06:17  [ Thread-311:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-311
2021-07-05 15:06:17  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-05 15:06:17  [ Thread-312:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:06:17  [ Thread-312:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-05 15:06:17  [ Thread-312:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-05 15:06:19  [ JavaFX Application Thread:client.model.Client:1382 ] - [ INFO ]  {"messageType":"SelectedCard","messageBody":{"card":"TurnRight","register":1}}
2021-07-05 15:06:19  [ Thread-312:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"SelectedCard","messageBody":{"card":"TurnRight","register":1}}
2021-07-05 15:06:19  [ Thread-312:protocol.ExecuteOrder:232 ] - [ INFO ]  TurnRight
2021-07-05 15:06:19  [ Thread-312:server.network.Server:486 ] - [ INFO ]  server informs card selected
2021-07-05 15:06:19  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:06:19  [ Thread-311:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-311
2021-07-05 15:06:19  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":100,"register":1,"filled":true}}Thread-6
2021-07-05 15:06:19  [ Thread-311:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":100,"register":1,"filled":true}}Thread-311
2021-07-05 15:06:19  [ JavaFX Application Thread:client.model.Client:940 ] - [ INFO ]  100 has for register 1true
2021-07-05 15:06:19  [ JavaFX Application Thread:client.model.Client:940 ] - [ INFO ]  100 has for register 1true
2021-07-05 15:06:19  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:06:19  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:06:19  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:06:19  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:06:19  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:06:19  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:06:19  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:06:19  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:06:19  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:06:19  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:06:19  [ Thread-2715:server.network.Connected:68 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 15:06:23  [ JavaFX Application Thread:client.model.Client:1382 ] - [ INFO ]  {"messageType":"SelectedCard","messageBody":{"card":"MoveI","register":2}}
2021-07-05 15:06:23  [ Thread-312:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"SelectedCard","messageBody":{"card":"MoveI","register":2}}
2021-07-05 15:06:23  [ Thread-312:protocol.ExecuteOrder:232 ] - [ INFO ]  MoveI
2021-07-05 15:06:23  [ Thread-312:server.network.Server:486 ] - [ INFO ]  server informs card selected
2021-07-05 15:06:23  [ Thread-311:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-311
2021-07-05 15:06:23  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:06:23  [ Thread-311:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":100,"register":2,"filled":true}}Thread-311
2021-07-05 15:06:23  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":100,"register":2,"filled":true}}Thread-6
2021-07-05 15:06:23  [ JavaFX Application Thread:client.model.Client:940 ] - [ INFO ]  100 has for register 2true
2021-07-05 15:06:23  [ JavaFX Application Thread:client.model.Client:940 ] - [ INFO ]  100 has for register 2true
2021-07-05 15:06:24  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:06:24  [ Thread-2715:server.network.Connected:68 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 15:06:25  [ JavaFX Application Thread:client.model.Client:1382 ] - [ INFO ]  {"messageType":"SelectedCard","messageBody":{"card":"TurnLeft","register":3}}
2021-07-05 15:06:25  [ Thread-312:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"SelectedCard","messageBody":{"card":"TurnLeft","register":3}}
2021-07-05 15:06:25  [ Thread-312:protocol.ExecuteOrder:232 ] - [ INFO ]  TurnLeft
2021-07-05 15:06:25  [ Thread-312:server.network.Server:486 ] - [ INFO ]  server informs card selected
2021-07-05 15:06:25  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:06:25  [ Thread-311:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-311
2021-07-05 15:06:25  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":100,"register":3,"filled":true}}Thread-6
2021-07-05 15:06:25  [ Thread-311:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":100,"register":3,"filled":true}}Thread-311
2021-07-05 15:06:25  [ JavaFX Application Thread:client.model.Client:940 ] - [ INFO ]  100 has for register 3true
2021-07-05 15:06:25  [ JavaFX Application Thread:client.model.Client:940 ] - [ INFO ]  100 has for register 3true
2021-07-05 15:06:27  [ Thread-2716:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-05 15:06:27  [ Thread-2716:server.network.AliveCheck:62 ] - [ INFO ]  client 100 flag connect = false
2021-07-05 15:06:27  [ Thread-2716:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-05 15:06:27  [ Thread-311:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-311
2021-07-05 15:06:27  [ Thread-311:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-311
2021-07-05 15:06:27  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-05 15:06:27  [ Thread-312:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:06:27  [ Thread-312:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-05 15:06:27  [ Thread-312:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-05 15:06:29  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:06:29  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:06:29  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:06:29  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:06:29  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:06:29  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:06:29  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:06:29  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:06:29  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:06:29  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:06:29  [ Thread-2715:server.network.Connected:68 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 15:06:31  [ JavaFX Application Thread:client.model.Client:1389 ] - [ INFO ]  {"messageType":"SelectedCard","messageBody":{"card":null,"register":3}}
2021-07-05 15:06:31  [ Thread-312:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"SelectedCard","messageBody":{"card":null,"register":3}}
2021-07-05 15:06:31  [ Thread-312:server.network.Server:486 ] - [ INFO ]  server informs card selected
2021-07-05 15:06:31  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:06:31  [ Thread-311:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-311
2021-07-05 15:06:31  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":100,"register":3,"filled":false}}Thread-6
2021-07-05 15:06:31  [ Thread-311:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":100,"register":3,"filled":false}}Thread-311
2021-07-05 15:06:31  [ JavaFX Application Thread:client.model.Client:940 ] - [ INFO ]  100 has for register 3false
2021-07-05 15:06:31  [ JavaFX Application Thread:client.model.Client:940 ] - [ INFO ]  100 has for register 3false
2021-07-05 15:06:33  [ JavaFX Application Thread:client.model.Client:1389 ] - [ INFO ]  {"messageType":"SelectedCard","messageBody":{"card":null,"register":2}}
2021-07-05 15:06:33  [ Thread-312:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"SelectedCard","messageBody":{"card":null,"register":2}}
2021-07-05 15:06:33  [ Thread-312:server.network.Server:486 ] - [ INFO ]  server informs card selected
2021-07-05 15:06:33  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:06:33  [ Thread-311:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-311
2021-07-05 15:06:33  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":100,"register":2,"filled":false}}Thread-6
2021-07-05 15:06:33  [ Thread-311:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":100,"register":2,"filled":false}}Thread-311
2021-07-05 15:06:33  [ JavaFX Application Thread:client.model.Client:940 ] - [ INFO ]  100 has for register 2false
2021-07-05 15:06:33  [ JavaFX Application Thread:client.model.Client:940 ] - [ INFO ]  100 has for register 2false
2021-07-05 15:06:34  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:06:34  [ Thread-2715:server.network.Connected:68 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 15:06:35  [ JavaFX Application Thread:client.model.Client:1382 ] - [ INFO ]  {"messageType":"SelectedCard","messageBody":{"card":"MoveII","register":2}}
2021-07-05 15:06:35  [ Thread-312:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"SelectedCard","messageBody":{"card":"MoveII","register":2}}
2021-07-05 15:06:35  [ Thread-312:protocol.ExecuteOrder:232 ] - [ INFO ]  MoveII
2021-07-05 15:06:35  [ Thread-312:server.network.Server:486 ] - [ INFO ]  server informs card selected
2021-07-05 15:06:35  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:06:35  [ Thread-311:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-311
2021-07-05 15:06:35  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":100,"register":2,"filled":true}}Thread-6
2021-07-05 15:06:35  [ Thread-311:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":100,"register":2,"filled":true}}Thread-311
2021-07-05 15:06:35  [ JavaFX Application Thread:client.model.Client:940 ] - [ INFO ]  100 has for register 2true
2021-07-05 15:06:35  [ JavaFX Application Thread:client.model.Client:940 ] - [ INFO ]  100 has for register 2true
2021-07-05 15:06:37  [ Thread-2716:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-05 15:06:37  [ Thread-2716:server.network.AliveCheck:62 ] - [ INFO ]  client 100 flag connect = false
2021-07-05 15:06:37  [ Thread-2716:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-05 15:06:37  [ Thread-311:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-311
2021-07-05 15:06:37  [ Thread-311:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-311
2021-07-05 15:06:37  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-05 15:06:37  [ Thread-312:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:06:37  [ Thread-312:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-05 15:06:37  [ Thread-312:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-05 15:06:39  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:06:39  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:06:39  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:06:39  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:06:39  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:06:39  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:06:39  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:06:39  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:06:39  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:06:39  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:06:39  [ Thread-2715:server.network.Connected:68 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 15:06:40  [ JavaFX Application Thread:client.model.Client:1382 ] - [ INFO ]  {"messageType":"SelectedCard","messageBody":{"card":"TurnLeft","register":3}}
2021-07-05 15:06:40  [ Thread-312:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"SelectedCard","messageBody":{"card":"TurnLeft","register":3}}
2021-07-05 15:06:40  [ Thread-312:protocol.ExecuteOrder:232 ] - [ INFO ]  TurnLeft
2021-07-05 15:06:40  [ Thread-312:server.network.Server:486 ] - [ INFO ]  server informs card selected
2021-07-05 15:06:40  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:06:40  [ Thread-311:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-311
2021-07-05 15:06:40  [ Thread-311:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":100,"register":3,"filled":true}}Thread-311
2021-07-05 15:06:40  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":100,"register":3,"filled":true}}Thread-6
2021-07-05 15:06:40  [ JavaFX Application Thread:client.model.Client:940 ] - [ INFO ]  100 has for register 3true
2021-07-05 15:06:40  [ JavaFX Application Thread:client.model.Client:940 ] - [ INFO ]  100 has for register 3true
2021-07-05 15:06:42  [ Thread-3137:server.game.Timer:68 ] - [ INFO ]  Timer info: clientsFinished: [33]
2021-07-05 15:06:42  [ Thread-3137:server.game.Timer:69 ] - [ INFO ]  Timer info: restClients: [100]
2021-07-05 15:06:42  [ Thread-3137:server.game.Timer:72 ] - [ INFO ]  Timer : time out, random cards
2021-07-05 15:06:42  [ Thread-3137:server.network.Server:511 ] - [ INFO ]  server inform who did not finish in time
2021-07-05 15:06:42  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:06:42  [ Thread-311:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-311
2021-07-05 15:06:42  [ Thread-311:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"TimerEnded","messageBody":{"clientIDs":[100]}}Thread-311
2021-07-05 15:06:42  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"TimerEnded","messageBody":{"clientIDs":[100]}}Thread-6
2021-07-05 15:06:42  [ Thread-3137:server.network.Server:537 ] - [ INFO ]  server inform who got which random cards
2021-07-05 15:06:42  [ Thread-311:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-311
2021-07-05 15:06:42  [ Thread-3137:server.network.Server:355 ] - [ INFO ]  server sends phase info
2021-07-05 15:06:42  [ JavaFX Application Thread:client.model.Client:950 ] - [ INFO ]  [100] did not finish.
2021-07-05 15:06:42  [ Thread-311:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"CardsYouGotNow","messageBody":{"cards":["Again","MoveI","TurnRight","MoveIII","TurnLeft"]}}Thread-311
2021-07-05 15:06:42  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:06:42  [ Thread-311:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-311
2021-07-05 15:06:42  [ Thread-311:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"ActivePhase","messageBody":{"phase":3}}Thread-311
2021-07-05 15:06:42  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"ActivePhase","messageBody":{"phase":3}}Thread-6
2021-07-05 15:06:42  [ JavaFX Application Thread:client.model.Client:950 ] - [ INFO ]  [100] did not finish.
2021-07-05 15:06:42  [ Thread-3137:server.network.Server:562 ] - [ INFO ]  Server checked registerPointer 0
2021-07-05 15:06:42  [ Thread-3137:server.network.Server:566 ] - [ INFO ]  server inform cards of current register
2021-07-05 15:06:42  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:06:42  [ Thread-311:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-311
2021-07-05 15:06:42  [ Thread-3137:server.network.Server:368 ] - [ INFO ]  server informs current player id
2021-07-05 15:06:42  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"CurrentCards","messageBody":{"currentRegistersAllClients":[{"clientID":33,"cardName":"MoveII"},{"clientID":100,"cardName":"Again"}]}}Thread-6
2021-07-05 15:06:42  [ Thread-311:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"CurrentCards","messageBody":{"currentRegistersAllClients":[{"clientID":33,"cardName":"MoveII"},{"clientID":100,"cardName":"Again"}]}}Thread-311
2021-07-05 15:06:42  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:06:42  [ Thread-311:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-311
2021-07-05 15:06:42  [ Thread-311:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-311
2021-07-05 15:06:42  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-6
2021-07-05 15:06:42  [ JavaFX Application Thread:client.model.Client:965 ] - [ INFO ]  33 has for current register: MoveII
2021-07-05 15:06:42  [ JavaFX Application Thread:client.model.Client:965 ] - [ INFO ]  100 has for current register: Again
2021-07-05 15:06:42  [ JavaFX Application Thread:client.model.Client:965 ] - [ INFO ]  33 has for current register: MoveII
2021-07-05 15:06:42  [ JavaFX Application Thread:client.model.Client:965 ] - [ INFO ]  100 has for current register: Again
2021-07-05 15:06:44  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:06:44  [ Thread-2715:server.network.Connected:68 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 15:06:47  [ Thread-2716:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-05 15:06:47  [ Thread-2716:server.network.AliveCheck:62 ] - [ INFO ]  client 100 flag connect = false
2021-07-05 15:06:47  [ Thread-2716:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-05 15:06:47  [ Thread-311:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-311
2021-07-05 15:06:47  [ Thread-311:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-311
2021-07-05 15:06:47  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-05 15:06:47  [ Thread-312:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:06:47  [ Thread-312:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-05 15:06:47  [ Thread-312:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-05 15:06:49  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:06:49  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:06:49  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:06:49  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:06:49  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:06:49  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:06:49  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:06:49  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:06:49  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:06:49  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:06:49  [ Thread-2715:server.network.Connected:68 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 15:06:52  [ JavaFX Application Thread:client.model.Client:1404 ] - [ INFO ]  {"messageType":"SelectionFinished","messageBody":{"clientID":100}}
2021-07-05 15:06:52  [ Thread-312:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"SelectionFinished","messageBody":{"clientID":100}}
2021-07-05 15:06:52  [ Thread-312:server.game.Game:400 ] - [ INFO ]  game stops timer
2021-07-05 15:06:52  [ Thread-312:protocol.ExecuteOrder:256 ] - [ INFO ]  executeOrder all clients finished programming in time
2021-07-05 15:06:52  [ Thread-312:server.network.Server:355 ] - [ INFO ]  server sends phase info
2021-07-05 15:06:52  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:06:52  [ Thread-311:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-311
2021-07-05 15:06:52  [ Thread-312:server.network.Server:562 ] - [ INFO ]  Server checked registerPointer 0
2021-07-05 15:06:52  [ Thread-311:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"ActivePhase","messageBody":{"phase":3}}Thread-311
2021-07-05 15:06:52  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"ActivePhase","messageBody":{"phase":3}}Thread-6
2021-07-05 15:06:52  [ Thread-312:server.network.Server:566 ] - [ INFO ]  server inform cards of current register
2021-07-05 15:06:52  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:06:52  [ Thread-311:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-311
2021-07-05 15:06:52  [ Thread-312:server.network.Server:368 ] - [ INFO ]  server informs current player id
2021-07-05 15:06:52  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"CurrentCards","messageBody":{"currentRegistersAllClients":[{"clientID":33,"cardName":"MoveII"},{"clientID":100,"cardName":"Again"}]}}Thread-6
2021-07-05 15:06:52  [ Thread-311:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"CurrentCards","messageBody":{"currentRegistersAllClients":[{"clientID":33,"cardName":"MoveII"},{"clientID":100,"cardName":"Again"}]}}Thread-311
2021-07-05 15:06:52  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:06:52  [ Thread-311:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-311
2021-07-05 15:06:52  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":100}}Thread-6
2021-07-05 15:06:52  [ Thread-311:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":100}}Thread-311
2021-07-05 15:06:52  [ JavaFX Application Thread:client.model.Client:965 ] - [ INFO ]  33 has for current register: MoveII
2021-07-05 15:06:52  [ JavaFX Application Thread:client.model.Client:965 ] - [ INFO ]  100 has for current register: Again
2021-07-05 15:06:52  [ JavaFX Application Thread:client.model.Client:965 ] - [ INFO ]  33 has for current register: MoveII
2021-07-05 15:06:52  [ JavaFX Application Thread:client.model.Client:965 ] - [ INFO ]  100 has for current register: Again
2021-07-05 15:06:53  [ JavaFX Application Thread:client.model.Client:1419 ] - [ INFO ]  {"messageType":"PlayCard","messageBody":{"card":"Again"}}
2021-07-05 15:06:53  [ Thread-312:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"PlayCard","messageBody":{"card":"Again"}}
2021-07-05 15:06:53  [ Thread-312:protocol.ExecuteOrder:272 ] - [ INFO ]  executeOrder playCard
2021-07-05 15:06:53  [ Thread-312:server.network.Server:580 ] - [ INFO ]  server informs who played which card
2021-07-05 15:06:53  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:06:53  [ Thread-311:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-311
2021-07-05 15:06:53  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":100,"card":"Again"}}Thread-6
2021-07-05 15:06:53  [ Thread-311:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":100,"card":"Again"}}Thread-311
2021-07-05 15:06:53  [ JavaFX Application Thread:client.model.Client:972 ] - [ INFO ]  client 100 has played Again
2021-07-05 15:06:53  [ JavaFX Application Thread:client.model.Client:972 ] - [ INFO ]  client 100 has played Again
2021-07-05 15:06:54  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:06:54  [ Thread-2715:server.network.Connected:68 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-05 15:06:56  [ JavaFX Application Thread:client.model.Client:1419 ] - [ INFO ]  {"messageType":"PlayCard","messageBody":{"card":"MoveII"}}
2021-07-05 15:06:56  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"PlayCard","messageBody":{"card":"MoveII"}}
2021-07-05 15:06:56  [ Thread-4:protocol.ExecuteOrder:272 ] - [ INFO ]  executeOrder playCard
2021-07-05 15:06:56  [ Thread-4:server.network.Server:580 ] - [ INFO ]  server informs who played which card
2021-07-05 15:06:56  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:06:56  [ Thread-311:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-311
2021-07-05 15:06:56  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":33,"card":"MoveII"}}Thread-6
2021-07-05 15:06:56  [ Thread-311:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":33,"card":"MoveII"}}Thread-311
2021-07-05 15:06:56  [ JavaFX Application Thread:client.model.Client:972 ] - [ INFO ]  client 33 has played MoveII
2021-07-05 15:06:56  [ JavaFX Application Thread:client.model.Client:972 ] - [ INFO ]  client 33 has played MoveII
2021-07-05 15:06:56  [ Thread-4:server.game.Game:792 ] - [ INFO ]  Game checks wall on board for move
2021-07-05 15:06:56  [ Thread-4:server.game.Game:792 ] - [ INFO ]  Game checks wall on board for move
2021-07-05 15:06:56  [ Thread-4:server.network.Server:624 ] - [ INFO ]  server informs positions
2021-07-05 15:06:56  [ Thread-4:server.network.Server:625 ] - [ INFO ]  {"messageType":"Movement","messageBody":{"clientID":33,"x":2,"y":5}}
2021-07-05 15:06:56  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:06:56  [ Thread-311:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-311
2021-07-05 15:06:56  [ Thread-4:server.game.Game:662 ] - [ INFO ]  Game checks turn over
2021-07-05 15:06:56  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":33,"x":2,"y":5}}Thread-6
2021-07-05 15:06:56  [ Thread-311:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":33,"x":2,"y":5}}Thread-311
2021-07-05 15:06:56  [ Thread-4:server.network.Server:368 ] - [ INFO ]  server informs current player id
2021-07-05 15:06:56  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:06:56  [ Thread-311:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-311
2021-07-05 15:06:56  [ Thread-311:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-311
2021-07-05 15:06:56  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-6
2021-07-05 15:06:57  [ Thread-2716:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-05 15:06:57  [ Thread-2716:server.network.AliveCheck:62 ] - [ INFO ]  client 100 flag connect = false
2021-07-05 15:06:57  [ Thread-2716:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-05 15:06:57  [ Thread-311:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-311
2021-07-05 15:06:57  [ Thread-311:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-311
2021-07-05 15:06:57  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-05 15:06:59  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:06:59  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:06:59  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:06:59  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:06:59  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:06:59  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:06:59  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:06:59  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:06:59  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:06:59  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:06:59  [ JavaFX Application Thread:client.model.Client:1419 ] - [ INFO ]  {"messageType":"PlayCard","messageBody":{"card":"MoveII"}}
2021-07-05 15:06:59  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"PlayCard","messageBody":{"card":"MoveII"}}
2021-07-05 15:06:59  [ Thread-4:protocol.ExecuteOrder:272 ] - [ INFO ]  executeOrder playCard
2021-07-05 15:06:59  [ Thread-4:server.network.Server:580 ] - [ INFO ]  server informs who played which card
2021-07-05 15:06:59  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:06:59  [ Thread-311:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-311
2021-07-05 15:06:59  [ Thread-4:server.game.Game:792 ] - [ INFO ]  Game checks wall on board for move
2021-07-05 15:06:59  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":33,"card":"MoveII"}}Thread-6
2021-07-05 15:06:59  [ Thread-311:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":33,"card":"MoveII"}}Thread-311
2021-07-05 15:06:59  [ Thread-4:server.network.Server:624 ] - [ INFO ]  server informs positions
2021-07-05 15:06:59  [ Thread-4:server.network.Server:625 ] - [ INFO ]  {"messageType":"Movement","messageBody":{"clientID":33,"x":2,"y":5}}
2021-07-05 15:06:59  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:06:59  [ Thread-311:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-311
2021-07-05 15:06:59  [ Thread-4:server.game.Game:662 ] - [ INFO ]  Game checks turn over
2021-07-05 15:06:59  [ JavaFX Application Thread:client.model.Client:972 ] - [ INFO ]  client 33 has played MoveII
2021-07-05 15:06:59  [ Thread-311:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":33,"x":2,"y":5}}Thread-311
2021-07-05 15:06:59  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":33,"x":2,"y":5}}Thread-6
2021-07-05 15:06:59  [ JavaFX Application Thread:client.model.Client:972 ] - [ INFO ]  client 33 has played MoveII
2021-07-05 15:06:59  [ Thread-4:protocol.ExecuteOrder:312 ] - [ INFO ]  ExecuteOrder: turn is over!
2021-07-05 15:06:59  [ Thread-4:server.game.Game:727 ] - [ INFO ]  Game checks round over1
2021-07-05 15:06:59  [ Thread-4:server.network.Server:368 ] - [ INFO ]  server informs current player id
2021-07-05 15:06:59  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:06:59  [ Thread-311:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-311
2021-07-05 15:06:59  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":100}}Thread-6
2021-07-05 15:06:59  [ Thread-311:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":100}}Thread-311
2021-07-05 15:06:59  [ Thread-2715:server.network.Connected:68 ] - [ INFO ]  100 in while loop print flagconnect: true
2021-07-05 15:06:59  [ Thread-2715:server.network.Connected:71 ] - [ INFO ]  100 in first if print flagconnect: true
2021-07-05 15:07:01  [ JavaFX Application Thread:client.model.Client:1419 ] - [ INFO ]  {"messageType":"PlayCard","messageBody":{"card":"MoveI"}}
2021-07-05 15:07:01  [ Thread-2715:server.network.Connected:80 ] - [ INFO ]  clientNr. 100 in second if print flagconnect
2021-07-05 15:07:01  [ Thread-2715:server.network.Connected:81 ] - [ INFO ]  clientNr. 100 in connected flag is: true
2021-07-05 15:07:01  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:07:01  [ Thread-2715:server.network.Server:368 ] - [ INFO ]  server informs current player id
2021-07-05 15:07:01  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Error","messageBody":{"error":"Only you left in game, please quit the game."}}Thread-6
2021-07-05 15:07:01  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:07:01  [ JavaFX Application Thread:client.model.Client:697 ] - [ INFO ]  error printed
2021-07-05 15:07:01  [ Thread-2715:server.network.Server:696 ] - [ INFO ]  server informs connection update
2021-07-05 15:07:01  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-6
2021-07-05 15:07:01  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:07:01  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"ConnectionUpdate","messageBody":{"clientID":100,"action":"remove","connected":false}}Thread-6
2021-07-05 15:07:01  [ Thread-2715:server.network.Connected:87 ] - [ INFO ]  client 100 disconnected.
2021-07-05 15:07:04  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:07:07  [ Thread-2716:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-05 15:07:07  [ Thread-2716:server.network.AliveCheck:62 ] - [ INFO ]  client 100 flag connect = true
2021-07-05 15:07:09  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:07:09  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:07:09  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:07:09  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:07:09  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:07:09  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:07:09  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:07:09  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:07:09  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:07:09  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:07:14  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:07:19  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:07:19  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:07:19  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:07:19  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:07:19  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:07:19  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:07:19  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:07:19  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:07:19  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:07:19  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:07:24  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:07:29  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:07:29  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:07:29  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:07:29  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:07:29  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:07:29  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:07:29  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:07:29  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:07:29  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:07:29  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:07:34  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:07:39  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:07:39  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:07:39  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:07:39  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:07:39  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:07:39  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:07:39  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:07:39  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:07:39  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:07:39  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:07:44  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:07:49  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:07:49  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:07:49  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:07:49  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:07:49  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:07:49  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:07:49  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:07:49  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:07:49  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:07:49  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:07:54  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:07:59  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:07:59  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:07:59  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:07:59  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:07:59  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:07:59  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:07:59  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:07:59  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:07:59  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:07:59  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:08:04  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:08:09  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:08:09  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:08:09  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:08:09  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:08:09  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:08:09  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:08:09  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:08:09  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:08:09  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:08:09  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:08:14  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:08:19  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:08:19  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:08:19  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:08:19  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:08:19  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:08:19  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:08:19  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:08:19  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:08:19  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:08:19  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:08:24  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:08:29  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:08:29  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:08:29  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:08:29  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:08:29  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:08:29  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:08:29  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:08:29  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:08:29  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:08:29  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:08:34  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:08:39  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:08:39  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:08:39  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:08:39  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:08:39  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:08:39  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:08:39  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:08:39  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:08:39  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:08:39  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:08:44  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:08:49  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:08:49  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:08:49  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:08:49  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:08:49  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:08:49  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:08:49  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:08:49  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:08:49  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:08:49  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:08:54  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:08:59  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:08:59  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:08:59  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:08:59  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:08:59  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:08:59  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:08:59  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:08:59  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:08:59  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:08:59  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:09:04  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:09:09  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:09:09  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:09:09  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:09:09  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:09:09  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:09:09  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:09:09  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:09:09  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:09:09  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:09:09  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:09:14  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:09:19  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:09:19  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:09:19  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:09:19  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:09:19  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:09:19  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:09:19  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:09:19  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:09:19  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:09:19  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:09:24  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:09:29  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:09:29  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:09:29  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:09:29  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:09:29  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:09:29  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:09:29  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:09:29  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:09:29  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:09:29  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:09:34  [ JavaFX Application Thread:client.model.Client:1419 ] - [ INFO ]  {"messageType":"PlayCard","messageBody":{"card":"MoveI"}}
2021-07-05 15:09:34  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"PlayCard","messageBody":{"card":"MoveI"}}
2021-07-05 15:09:34  [ Thread-4:protocol.ExecuteOrder:272 ] - [ INFO ]  executeOrder playCard
2021-07-05 15:09:34  [ Thread-4:server.network.Server:580 ] - [ INFO ]  server informs who played which card
2021-07-05 15:09:34  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:09:34  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":33,"card":"MoveI"}}Thread-6
2021-07-05 15:09:34  [ JavaFX Application Thread:client.model.Client:972 ] - [ INFO ]  client 33 has played MoveI
2021-07-05 15:09:34  [ Thread-4:server.game.Game:792 ] - [ INFO ]  Game checks wall on board for move
2021-07-05 15:09:34  [ Thread-4:server.network.Server:624 ] - [ INFO ]  server informs positions
2021-07-05 15:09:34  [ Thread-4:server.network.Server:625 ] - [ INFO ]  {"messageType":"Movement","messageBody":{"clientID":33,"x":2,"y":5}}
2021-07-05 15:09:34  [ Thread-4:server.game.Game:662 ] - [ INFO ]  Game checks turn over
2021-07-05 15:09:34  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:09:34  [ Thread-4:protocol.ExecuteOrder:312 ] - [ INFO ]  ExecuteOrder: turn is over!
2021-07-05 15:09:34  [ Thread-4:server.game.Game:727 ] - [ INFO ]  Game checks round over2
2021-07-05 15:09:34  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":33,"x":2,"y":5}}Thread-6
2021-07-05 15:09:34  [ Thread-4:server.network.Server:368 ] - [ INFO ]  server informs current player id
2021-07-05 15:09:34  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:09:34  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-6
2021-07-05 15:09:34  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:09:36  [ JavaFX Application Thread:client.model.Client:1419 ] - [ INFO ]  {"messageType":"PlayCard","messageBody":{"card":"MoveI"}}
2021-07-05 15:09:36  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"PlayCard","messageBody":{"card":"MoveI"}}
2021-07-05 15:09:36  [ Thread-4:protocol.ExecuteOrder:272 ] - [ INFO ]  executeOrder playCard
2021-07-05 15:09:36  [ Thread-4:server.network.Server:580 ] - [ INFO ]  server informs who played which card
2021-07-05 15:09:36  [ Thread-4:server.game.Game:792 ] - [ INFO ]  Game checks wall on board for move
2021-07-05 15:09:36  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:09:36  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":33,"card":"MoveI"}}Thread-6
2021-07-05 15:09:36  [ Thread-4:server.network.Server:624 ] - [ INFO ]  server informs positions
2021-07-05 15:09:36  [ Thread-4:server.network.Server:625 ] - [ INFO ]  {"messageType":"Movement","messageBody":{"clientID":33,"x":2,"y":5}}
2021-07-05 15:09:36  [ Thread-4:server.game.Game:662 ] - [ INFO ]  Game checks turn over
2021-07-05 15:09:36  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:09:36  [ Thread-4:protocol.ExecuteOrder:312 ] - [ INFO ]  ExecuteOrder: turn is over!
2021-07-05 15:09:36  [ Thread-4:server.game.Game:727 ] - [ INFO ]  Game checks round over3
2021-07-05 15:09:36  [ JavaFX Application Thread:client.model.Client:972 ] - [ INFO ]  client 33 has played MoveI
2021-07-05 15:09:36  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":33,"x":2,"y":5}}Thread-6
2021-07-05 15:09:36  [ Thread-4:server.network.Server:368 ] - [ INFO ]  server informs current player id
2021-07-05 15:09:36  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:09:36  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-6
2021-07-05 15:09:37  [ JavaFX Application Thread:client.model.Client:1419 ] - [ INFO ]  {"messageType":"PlayCard","messageBody":{"card":"TurnLeft"}}
2021-07-05 15:09:37  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"PlayCard","messageBody":{"card":"TurnLeft"}}
2021-07-05 15:09:37  [ Thread-4:protocol.ExecuteOrder:272 ] - [ INFO ]  executeOrder playCard
2021-07-05 15:09:37  [ Thread-4:server.network.Server:580 ] - [ INFO ]  server informs who played which card
2021-07-05 15:09:37  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:09:37  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":33,"card":"TurnLeft"}}Thread-6
2021-07-05 15:09:37  [ JavaFX Application Thread:client.model.Client:972 ] - [ INFO ]  client 33 has played TurnLeft
2021-07-05 15:09:37  [ Thread-4:server.network.Server:639 ] - [ INFO ]  server informs turnDirection
2021-07-05 15:09:37  [ Thread-4:server.game.Game:662 ] - [ INFO ]  Game checks turn over
2021-07-05 15:09:37  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:09:37  [ Thread-4:protocol.ExecuteOrder:312 ] - [ INFO ]  ExecuteOrder: turn is over!
2021-07-05 15:09:37  [ Thread-4:server.game.Game:727 ] - [ INFO ]  Game checks round over4
2021-07-05 15:09:37  [ Thread-4:server.network.Server:368 ] - [ INFO ]  server informs current player id
2021-07-05 15:09:37  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"PlayerTurning","messageBody":{"clientID":33,"rotation":"counterclockwise"}}Thread-6
2021-07-05 15:09:37  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:09:37  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-6
2021-07-05 15:09:39  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:09:39  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:09:39  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:09:39  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:09:39  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:09:39  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:09:39  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:09:39  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:09:39  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:09:39  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:09:44  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:09:49  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:09:49  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:09:49  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:09:49  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:09:49  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:09:49  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:09:49  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:09:49  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:09:49  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:09:49  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:09:54  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:09:59  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:09:59  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:09:59  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:09:59  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:09:59  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:09:59  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:09:59  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:09:59  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:09:59  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:09:59  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:10:04  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:10:09  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:10:09  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:10:09  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:10:09  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:10:09  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:10:09  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:10:09  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:10:09  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:10:09  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:10:09  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:10:14  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:10:19  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:10:19  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:10:19  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:10:19  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:10:19  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:10:19  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:10:19  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:10:19  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:10:19  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:10:19  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:10:24  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:10:29  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:10:29  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:10:29  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:10:29  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:10:29  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:10:29  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:10:29  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:10:29  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:10:29  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:10:29  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:10:34  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:10:39  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:10:39  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:10:39  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:10:39  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:10:39  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:10:39  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:10:39  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:10:39  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:10:39  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:10:39  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:10:44  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:10:49  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:10:49  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:10:49  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:10:49  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:10:49  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:10:49  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:10:49  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:10:49  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:10:49  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:10:49  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:10:54  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:10:59  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:10:59  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:10:59  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:10:59  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:10:59  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:10:59  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:10:59  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:10:59  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:10:59  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:10:59  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:11:04  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:11:09  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:11:09  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:11:09  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:11:09  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:11:09  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:11:09  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:11:09  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:11:09  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:11:09  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:11:09  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:11:14  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:11:19  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:11:19  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:11:19  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:11:19  [ Thread-2189:server.network.Connected:71 ] - [ INFO ]  33 in first if print flagconnect: true
2021-07-05 15:11:19  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:11:19  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:11:19  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:11:19  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:11:19  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:11:19  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:11:19  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:11:26  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:11:29  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:11:29  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:11:29  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:11:29  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:11:29  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:11:29  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:11:29  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:11:29  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:11:29  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:11:31  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:11:32  [ JavaFX Application Thread:client.model.Client:1419 ] - [ INFO ]  {"messageType":"PlayCard","messageBody":{"card":""}}
2021-07-05 15:11:32  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"PlayCard","messageBody":{"card":""}}
2021-07-05 15:11:32  [ Thread-4:protocol.ExecuteOrder:272 ] - [ INFO ]  executeOrder playCard
2021-07-05 15:11:32  [ Thread-4:server.network.Server:580 ] - [ INFO ]  server informs who played which card
2021-07-05 15:11:32  [ Thread-4:server.game.Game:662 ] - [ INFO ]  Game checks turn over
2021-07-05 15:11:32  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:11:32  [ Thread-4:protocol.ExecuteOrder:312 ] - [ INFO ]  ExecuteOrder: turn is over!
2021-07-05 15:11:32  [ Thread-4:server.game.Game:727 ] - [ INFO ]  Game checks round over5
2021-07-05 15:11:32  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":33,"card":""}}Thread-6
2021-07-05 15:11:32  [ Thread-4:protocol.ExecuteOrder:317 ] - [ INFO ]  ExecuteOrder: round is over!
2021-07-05 15:11:32  [ Thread-4:server.network.Server:355 ] - [ INFO ]  server sends phase info
2021-07-05 15:11:32  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:11:32  [ JavaFX Application Thread:client.model.Client:972 ] - [ INFO ]  client 33 has played 
2021-07-05 15:11:32  [ Thread-4:server.network.Server:742 ] - [ INFO ]  server informs Refill upgrade shop.
2021-07-05 15:11:32  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"ActivePhase","messageBody":{"phase":1}}Thread-6
2021-07-05 15:11:32  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:11:32  [ Thread-4:server.network.Server:368 ] - [ INFO ]  server informs current player id
2021-07-05 15:11:32  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"RefillShop","messageBody":{"cards":["SpamBlocker","SpamBlocker","RealLaser","SpamBlocker"]}}Thread-6
2021-07-05 15:11:32  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:11:32  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-6
2021-07-05 15:11:36  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:11:39  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:11:39  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:11:39  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:11:39  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:11:39  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:11:39  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:11:39  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:11:39  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:11:39  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:11:41  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:11:46  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:11:49  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:11:49  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:11:49  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:11:49  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:11:49  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:11:49  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:11:49  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:11:49  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:11:49  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:11:51  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:11:56  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:11:59  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:11:59  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:11:59  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:11:59  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:11:59  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:11:59  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:11:59  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:11:59  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:11:59  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:12:01  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:12:06  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:12:09  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:12:09  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:12:09  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:12:09  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:12:09  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:12:09  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:12:09  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:12:09  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:12:09  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:12:11  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:12:16  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:12:19  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:12:19  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:12:19  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:12:19  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:12:19  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:12:19  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:12:19  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:12:19  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:12:19  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:12:21  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:12:26  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:12:29  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:12:29  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:12:29  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:12:29  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:12:29  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:12:29  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:12:29  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:12:29  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:12:29  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:12:31  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:12:36  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:12:39  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:12:39  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:12:39  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:12:39  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:12:39  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:12:39  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:12:39  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:12:39  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:12:39  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:12:41  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:12:46  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:12:49  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:12:49  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:12:49  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:12:49  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:12:49  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:12:49  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:12:49  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:12:49  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:12:49  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:12:51  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:12:56  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:12:59  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:12:59  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:12:59  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:12:59  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:12:59  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:12:59  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:12:59  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:12:59  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:12:59  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:13:01  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:13:06  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:13:09  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:13:09  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:13:09  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:13:09  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:13:09  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:13:09  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:13:09  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:13:09  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:13:09  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:13:11  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:13:16  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:13:19  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:13:19  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:13:19  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:13:19  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:13:19  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:13:19  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:13:19  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:13:19  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:13:19  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:13:21  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:13:26  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:13:29  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:13:29  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:13:29  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:13:29  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:13:29  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:13:29  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:13:29  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:13:29  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:13:29  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:13:31  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:13:36  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:13:39  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:13:39  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:13:39  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:13:39  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:13:39  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:13:39  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:13:39  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:13:39  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:13:39  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:13:41  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:13:46  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:13:49  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:13:49  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:13:49  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:13:49  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:13:49  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:13:49  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:13:49  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:13:49  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:13:49  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:13:51  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:13:56  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:13:59  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:13:59  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:13:59  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:13:59  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:13:59  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:13:59  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:13:59  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:13:59  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:13:59  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:14:01  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:14:06  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:14:09  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:14:09  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:14:09  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:14:09  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:14:09  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:14:09  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:14:09  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:14:09  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:14:09  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:14:11  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:14:16  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:14:19  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:14:19  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:14:19  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:14:19  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:14:19  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:14:19  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:14:19  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:14:19  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:14:19  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:14:21  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:14:26  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:14:29  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:14:29  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:14:29  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:14:29  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:14:29  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:14:29  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:14:29  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:14:29  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:14:29  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:14:31  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:14:36  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:14:39  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:14:39  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:14:39  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:14:39  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:14:39  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:14:39  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:14:39  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:14:39  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:14:39  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:14:41  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:14:46  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:14:49  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:14:49  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:14:49  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:14:49  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:14:49  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:14:49  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:14:49  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:14:49  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:14:49  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:14:51  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:14:56  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:14:59  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:14:59  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:14:59  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:14:59  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:14:59  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:14:59  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:14:59  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:14:59  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:14:59  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:15:01  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:15:06  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:15:09  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:15:09  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:15:09  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:15:09  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:15:09  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:15:09  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:15:09  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:15:09  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:15:09  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:15:11  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:15:16  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:15:19  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:15:19  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:15:19  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:15:19  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:15:19  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:15:19  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:15:19  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:15:19  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:15:19  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:15:21  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:15:26  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:15:29  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:15:29  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:15:29  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:15:29  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:15:29  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:15:29  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:15:29  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:15:29  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:15:29  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:15:31  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:15:36  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:15:39  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:15:39  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:15:39  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:15:39  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:15:39  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:15:39  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:15:39  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:15:39  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:15:39  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:15:41  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:15:46  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:15:49  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:15:49  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:15:49  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:15:49  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:15:49  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:15:49  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:15:49  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:15:49  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:15:49  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:15:51  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:15:56  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:15:59  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:15:59  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:15:59  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:15:59  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:15:59  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:15:59  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:15:59  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:15:59  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:15:59  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:16:01  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:16:06  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:16:09  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:16:09  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:16:09  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:16:09  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:16:09  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:16:09  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:16:09  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:16:09  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:16:09  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:16:11  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:16:16  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:16:19  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:16:19  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:16:19  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:16:19  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:16:19  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:16:19  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:16:19  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:16:19  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:16:19  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:16:21  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:16:26  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:16:29  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:16:29  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:16:29  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:16:29  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:16:29  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:16:29  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:16:29  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:16:29  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:16:29  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:16:31  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:16:36  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:16:39  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:16:39  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:16:39  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:16:39  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:16:39  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:16:39  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:16:39  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:16:39  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:16:39  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:16:41  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:16:46  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:16:49  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:16:49  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:16:49  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:16:49  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:16:49  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:16:49  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:16:49  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:16:49  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:16:49  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:16:51  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:16:56  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:16:59  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:16:59  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:16:59  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:16:59  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:16:59  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:16:59  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:16:59  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:16:59  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:16:59  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:17:01  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:17:06  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:17:09  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:17:09  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:17:09  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:17:09  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:17:09  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:17:09  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:17:09  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:17:09  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:17:09  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:17:11  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:17:16  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:17:19  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:17:19  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:17:19  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:17:19  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:17:19  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:17:19  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:17:19  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:17:19  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:17:19  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:17:21  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:17:26  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:17:29  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:17:29  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:17:29  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:17:29  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:17:29  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:17:29  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:17:29  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:17:29  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:17:29  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:17:31  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:17:36  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:17:39  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:17:39  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:17:39  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:17:39  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:17:39  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:17:39  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:17:39  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:17:39  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:17:39  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:17:41  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:17:46  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:17:49  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:17:49  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:17:49  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:17:49  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:17:49  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:17:49  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:17:49  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:17:49  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:17:49  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:17:51  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:17:56  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:17:59  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:17:59  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:17:59  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:17:59  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:17:59  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:17:59  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:17:59  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:17:59  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:17:59  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:18:01  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:18:06  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:18:09  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:18:09  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:18:09  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:18:09  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:18:09  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:18:09  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:18:09  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:18:09  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:18:09  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:18:11  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:18:16  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:18:19  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:18:19  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:18:19  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:18:19  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:18:19  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:18:19  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:18:19  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:18:19  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:18:19  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:18:21  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:18:26  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:18:29  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:18:29  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:18:29  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:18:29  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:18:29  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:18:29  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:18:29  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:18:29  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:18:29  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:18:31  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:18:36  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:18:39  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:18:39  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:18:39  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:18:39  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:18:39  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:18:39  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:18:39  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:18:39  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:18:39  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:18:41  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:18:46  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:18:49  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:18:49  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:18:49  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:18:49  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:18:49  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:18:49  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:18:49  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:18:49  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:18:49  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:18:51  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:18:56  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:18:59  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:18:59  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:18:59  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:18:59  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:18:59  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:18:59  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:18:59  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:18:59  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:18:59  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:19:01  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:19:06  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:19:09  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:19:09  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:19:09  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:19:09  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:19:09  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:19:09  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:19:09  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:19:09  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:19:09  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:19:11  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:19:16  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:19:19  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:19:19  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:19:19  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:19:19  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:19:19  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:19:19  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:19:19  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:19:19  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:19:19  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:19:21  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:19:26  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:19:29  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:19:29  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:19:29  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:19:29  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:19:29  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:19:29  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:19:29  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:19:29  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:19:29  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:19:31  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:19:36  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:19:39  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:19:39  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:19:39  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:19:39  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:19:39  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:19:39  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:19:39  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:19:39  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:19:39  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:19:41  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:19:46  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:19:49  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:19:49  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:19:49  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:19:49  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:19:49  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:19:49  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:19:49  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:19:49  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:19:49  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:19:51  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:19:56  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:19:59  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:19:59  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:19:59  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:19:59  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:19:59  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:19:59  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:19:59  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:19:59  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:19:59  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:20:01  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:20:06  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:20:09  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:20:09  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:20:09  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:20:09  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:20:09  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:20:09  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:20:09  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:20:09  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:20:09  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:20:11  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:20:16  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:20:19  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:20:19  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:20:19  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:20:19  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:20:19  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:20:19  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:20:19  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:20:19  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:20:19  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:20:21  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:20:26  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:20:29  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:20:29  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:20:29  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:20:29  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:20:29  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:20:29  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:20:29  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:20:29  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:20:29  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:20:31  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:20:36  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:20:39  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:20:39  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:20:39  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:20:39  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:20:39  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:20:39  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:20:39  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:20:39  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:20:39  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:20:41  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:20:46  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:20:49  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:20:49  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:20:49  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:20:49  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:20:49  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:20:49  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:20:49  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:20:49  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:20:49  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:20:51  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:20:56  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:20:59  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:20:59  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:20:59  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:20:59  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:20:59  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:20:59  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:20:59  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:20:59  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:20:59  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:21:01  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:21:06  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:21:09  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:21:09  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:21:09  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:21:09  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:21:09  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:21:09  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:21:09  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:21:09  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:21:09  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:21:11  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:21:16  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:21:19  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:21:19  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:21:19  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:21:19  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:21:19  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:21:19  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:21:19  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:21:19  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:21:19  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:21:21  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:21:26  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:21:29  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:21:29  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:21:29  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:21:29  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:21:29  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:21:29  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:21:29  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:21:29  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:21:29  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:21:31  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:21:36  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:21:39  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:21:39  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:21:39  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:21:39  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:21:39  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:21:39  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:21:39  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:21:39  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:21:39  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:21:41  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:21:46  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:21:49  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:21:49  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:21:49  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:21:49  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:21:49  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:21:49  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:21:49  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:21:49  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:21:49  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:21:51  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:21:56  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:21:59  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:21:59  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:21:59  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:21:59  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:21:59  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:21:59  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:21:59  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:21:59  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:21:59  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:22:01  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:22:06  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:22:09  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:22:09  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:22:09  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:22:09  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:22:09  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:22:09  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:22:09  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:22:09  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:22:09  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:22:11  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:22:16  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:22:19  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:22:19  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:22:19  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:22:19  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:22:19  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:22:19  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:22:19  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:22:19  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:22:19  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:22:21  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:22:26  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:22:29  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:22:29  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:22:29  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:22:29  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:22:29  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:22:29  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:22:29  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:22:29  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:22:29  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:22:31  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:22:36  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:22:39  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:22:39  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:22:39  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:22:39  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:22:39  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:22:39  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:22:39  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:22:39  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:22:39  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:22:41  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:22:46  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:22:49  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:22:49  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:22:49  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:22:49  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:22:49  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:22:49  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:22:49  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:22:49  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:22:49  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:22:51  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:22:56  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:22:59  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:22:59  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:22:59  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:22:59  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:22:59  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:22:59  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:22:59  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:22:59  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:22:59  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:23:01  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:23:06  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:23:09  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:23:09  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:23:09  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:23:09  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:23:09  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:23:09  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:23:09  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:23:09  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:23:09  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:23:11  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:23:16  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:23:19  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:23:19  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:23:19  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:23:19  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:23:19  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:23:19  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:23:19  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:23:19  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:23:19  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:23:21  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:23:26  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:23:29  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:23:29  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:23:29  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:23:29  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:23:29  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:23:29  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:23:29  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:23:29  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:23:29  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:23:31  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:23:36  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:23:39  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:23:39  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:23:39  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:23:39  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:23:39  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:23:39  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:23:39  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:23:39  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:23:39  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:23:41  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:23:46  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:23:49  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:23:49  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:23:49  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:23:49  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:23:49  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:23:49  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:23:49  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:23:49  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:23:49  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:23:51  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:23:56  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:23:59  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:23:59  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:23:59  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:23:59  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:23:59  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:23:59  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:23:59  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:23:59  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:23:59  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:24:01  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:24:06  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:24:09  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:24:09  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:24:09  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:24:09  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:24:09  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:24:09  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:24:09  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:24:09  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:24:09  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:24:11  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:24:16  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:24:19  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:24:19  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:24:19  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:24:19  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:24:19  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:24:19  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:24:19  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:24:19  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:24:19  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:24:21  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:24:26  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:24:29  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:24:29  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:24:29  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:24:29  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:24:29  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:24:29  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:24:29  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:24:29  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:24:29  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:24:31  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:24:36  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:24:39  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:24:39  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:24:39  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:24:39  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:24:39  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:24:39  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:24:39  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:24:39  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:24:39  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:24:41  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:24:46  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:24:49  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:24:49  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:24:49  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:24:49  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:24:49  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:24:49  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:24:49  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:24:49  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:24:49  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:24:51  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:24:56  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:24:59  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:24:59  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:24:59  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:24:59  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:24:59  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:24:59  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:24:59  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:24:59  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:24:59  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:25:01  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:25:06  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:25:09  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:25:09  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:25:09  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:25:09  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:25:09  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:25:09  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:25:09  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:25:09  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:25:09  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:25:11  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:25:16  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:25:19  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:25:19  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:25:19  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:25:19  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:25:19  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:25:19  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:25:19  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:25:19  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:25:19  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:25:21  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:25:26  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:25:29  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:25:29  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:25:29  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:25:29  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:25:29  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:25:29  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:25:29  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:25:29  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:25:29  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:25:31  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:25:36  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:25:39  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:25:39  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:25:39  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:25:39  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:25:39  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:25:39  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:25:39  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:25:39  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:25:39  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:25:41  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:25:46  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:25:49  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:25:49  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:25:49  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:25:49  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:25:49  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:25:49  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:25:49  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:25:49  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:25:49  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:25:51  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:25:56  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:25:59  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:25:59  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:25:59  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:25:59  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:25:59  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:25:59  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:25:59  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:25:59  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:25:59  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:26:01  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:26:06  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:26:09  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:26:09  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:26:09  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:26:09  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:26:09  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:26:09  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:26:09  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:26:09  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:26:09  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:26:11  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:26:16  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:26:19  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:26:19  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:26:19  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:26:19  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:26:19  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:26:19  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:26:19  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:26:19  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:26:19  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:26:21  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:26:26  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:26:29  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:26:29  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:26:29  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:26:29  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:26:29  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:26:29  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:26:29  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:26:29  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:26:29  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:26:31  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:26:36  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:26:39  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:26:39  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:26:39  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:26:39  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:26:39  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:26:39  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:26:39  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:26:39  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:26:39  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:26:41  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:26:46  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:26:49  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:26:49  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:26:49  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:26:49  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:26:49  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:26:49  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:26:49  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:26:49  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:26:49  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:26:51  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:26:56  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:26:59  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:26:59  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:26:59  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:26:59  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:26:59  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:26:59  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:26:59  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:26:59  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:26:59  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:27:01  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:27:06  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:27:09  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:27:09  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:27:09  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:27:09  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:27:09  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:27:09  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:27:09  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:27:09  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:27:09  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:27:11  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:27:16  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:27:19  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:27:19  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:27:19  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:27:19  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:27:19  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:27:19  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:27:19  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:27:19  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:27:19  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:27:21  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:27:26  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:27:29  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:27:29  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:27:29  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:27:29  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:27:29  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:27:29  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:27:29  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:27:29  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:27:29  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:27:31  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:27:36  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:27:39  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:27:39  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:27:39  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:27:39  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:27:39  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:27:39  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:27:39  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:27:39  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:27:39  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:27:41  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:27:46  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:27:49  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:27:49  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:27:49  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:27:49  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:27:49  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:27:49  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:27:49  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:27:49  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:27:49  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:27:51  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:27:56  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:27:59  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:27:59  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:27:59  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:27:59  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:27:59  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:27:59  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:27:59  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:27:59  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:27:59  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:28:01  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:28:06  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:28:09  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:28:09  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:28:09  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:28:09  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:28:09  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:28:09  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:28:09  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:28:09  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:28:09  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:28:11  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:28:16  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:28:19  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:28:19  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:28:19  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:28:19  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:28:19  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:28:19  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:28:19  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:28:19  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:28:19  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:28:21  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:28:26  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:28:29  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:28:29  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:28:29  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:28:29  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:28:29  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:28:29  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:28:29  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:28:29  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:28:29  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:28:31  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:28:36  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:28:39  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:28:39  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:28:39  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:28:39  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:28:39  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:28:39  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:28:39  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:28:39  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:28:39  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:28:41  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:28:46  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:28:49  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:28:49  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:28:49  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:28:49  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:28:49  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:28:49  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:28:49  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:28:49  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:28:49  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:28:51  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:28:56  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:28:59  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:28:59  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:28:59  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:28:59  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:28:59  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:28:59  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:28:59  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:28:59  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:28:59  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:29:01  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:29:06  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:29:09  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:29:09  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:29:09  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:29:09  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:29:09  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:29:09  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:29:09  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:29:09  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:29:09  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:29:11  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:29:16  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:29:19  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:29:19  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:29:19  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:29:19  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:29:19  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:29:19  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:29:19  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:29:19  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:29:19  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:29:21  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:29:26  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:29:29  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:29:29  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:29:29  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:29:29  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:29:29  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:29:29  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:29:29  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:29:29  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:29:29  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:29:31  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:29:36  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:29:39  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:29:39  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:29:39  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:29:39  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:29:39  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:29:39  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:29:39  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:29:39  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:29:39  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:29:41  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:29:46  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:29:49  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:29:49  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:29:49  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:29:49  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:29:49  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:29:49  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:29:49  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:29:49  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:29:49  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:29:51  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:29:56  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:29:59  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:29:59  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:29:59  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:29:59  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:29:59  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:29:59  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:29:59  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:29:59  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:29:59  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:30:01  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:30:06  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:30:09  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:30:09  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:30:09  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:30:09  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:30:09  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:30:09  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:30:09  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:30:09  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:30:09  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:30:11  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:30:16  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:30:19  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:30:19  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:30:19  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:30:19  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:30:19  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:30:19  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:30:19  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:30:19  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:30:19  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:30:21  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:30:26  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:30:29  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:30:29  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:30:29  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:30:29  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:30:29  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:30:29  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:30:29  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:30:29  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:30:29  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:30:31  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:30:36  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:30:39  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:30:39  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:30:39  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:30:39  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:30:39  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:30:39  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:30:39  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:30:39  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:30:39  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:30:41  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:30:46  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:30:49  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:30:49  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:30:49  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:30:49  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:30:49  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:30:49  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:30:49  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:30:49  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:30:49  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:30:51  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:30:56  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:30:59  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:30:59  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:30:59  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:30:59  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:30:59  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:30:59  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:30:59  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:30:59  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:30:59  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:31:01  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:31:06  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:31:09  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:31:09  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:31:09  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:31:09  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:31:09  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:31:09  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:31:09  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:31:09  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:31:09  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:31:11  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:31:16  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:31:19  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:31:19  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:31:19  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:31:19  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:31:19  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:31:19  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:31:19  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:31:19  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:31:19  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:31:21  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:31:26  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:31:29  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:31:29  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:31:29  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:31:29  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:31:29  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:31:29  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:31:29  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:31:29  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:31:29  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:31:31  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:31:36  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:31:39  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:31:39  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:31:39  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:31:39  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:31:39  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:31:39  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:31:39  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:31:39  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:31:39  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:31:41  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:31:46  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:31:49  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:31:49  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:31:49  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:31:49  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:31:49  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:31:49  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:31:49  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:31:49  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:31:49  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:31:51  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:31:56  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:31:59  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:31:59  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:31:59  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:31:59  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:31:59  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:31:59  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:31:59  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:31:59  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:31:59  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:32:01  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:32:06  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:32:09  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:32:09  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:32:09  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:32:09  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:32:09  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:32:09  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:32:09  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:32:09  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:32:09  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:32:11  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:32:16  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:32:19  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:32:19  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:32:19  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:32:19  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:32:19  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:32:19  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:32:19  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:32:19  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:32:19  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:32:21  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:32:26  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:32:29  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:32:29  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:32:29  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:32:29  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:32:29  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:32:29  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:32:29  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:32:29  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:32:29  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:32:31  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:32:36  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:32:39  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:32:39  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:32:39  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:32:39  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:32:39  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:32:39  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:32:39  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:32:39  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:32:39  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:32:41  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:32:46  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:32:49  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:32:49  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:32:49  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:32:49  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:32:49  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:32:49  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:32:49  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:32:49  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:32:49  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:32:51  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:32:56  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:32:59  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:32:59  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:32:59  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:32:59  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:32:59  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:32:59  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:32:59  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:32:59  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:32:59  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:33:01  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:33:06  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:33:09  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:33:09  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:33:09  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:33:09  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:33:09  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:33:09  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:33:09  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:33:09  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:33:09  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:33:11  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:33:16  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:33:19  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:33:19  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:33:19  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:33:19  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:33:19  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:33:19  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:33:19  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:33:19  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:33:19  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:33:21  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:33:26  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:33:29  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:33:29  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:33:29  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:33:29  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:33:29  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:33:29  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:33:29  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:33:29  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:33:29  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:33:31  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:33:36  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:33:39  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:33:39  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:33:39  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:33:39  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:33:39  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:33:39  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:33:39  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:33:39  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:33:39  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:33:41  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:33:46  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:33:49  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:33:49  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:33:49  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:33:49  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:33:49  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:33:49  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:33:49  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:33:49  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:33:49  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:33:51  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:33:56  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:33:59  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:33:59  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:33:59  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:33:59  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:33:59  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:33:59  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:33:59  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:33:59  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:33:59  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:34:01  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:34:06  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:34:09  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:34:09  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:34:09  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:34:09  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:34:09  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:34:09  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:34:09  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:34:09  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:34:09  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:34:11  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:34:16  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:34:19  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:34:19  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:34:19  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:34:19  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:34:19  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:34:19  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:34:19  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:34:19  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:34:19  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:34:21  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:34:26  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:34:29  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:34:29  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:34:29  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:34:29  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:34:29  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:34:29  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:34:29  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:34:29  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:34:29  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:34:31  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:34:36  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:34:39  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:34:39  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:34:39  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:34:39  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:34:39  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:34:39  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:34:39  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:34:39  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:34:39  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:34:41  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:34:46  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:34:49  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:34:49  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:34:49  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:34:49  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:34:49  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:34:49  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:34:49  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:34:49  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:34:49  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:34:51  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:34:56  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:34:59  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:34:59  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:34:59  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:34:59  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:34:59  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:34:59  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:34:59  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:34:59  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:34:59  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:35:01  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:35:06  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:35:09  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:35:09  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:35:09  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:35:09  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:35:09  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:35:09  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:35:09  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:35:09  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:35:09  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:35:11  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:35:16  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:35:19  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:35:19  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:35:19  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:35:19  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:35:19  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:35:19  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:35:19  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:35:19  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:35:19  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:35:21  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:35:26  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:35:29  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:35:29  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:35:29  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:35:29  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:35:29  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:35:29  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:35:29  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:35:29  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:35:29  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:35:31  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:35:36  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:35:39  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:35:39  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:35:39  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:35:39  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:35:39  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:35:39  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:35:39  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:35:39  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:35:39  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:35:41  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:35:46  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:35:49  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:35:49  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:35:49  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:35:49  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:35:49  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:35:49  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:35:49  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:35:49  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:35:49  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:35:51  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:35:56  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:35:59  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:35:59  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:35:59  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:35:59  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:35:59  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:35:59  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:35:59  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:35:59  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:35:59  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:36:01  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:36:06  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:36:09  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:36:09  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:36:09  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:36:09  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:36:09  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:36:09  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:36:09  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:36:09  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:36:09  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:36:11  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:36:16  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:36:19  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:36:19  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:36:19  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:36:19  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:36:19  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:36:19  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:36:19  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:36:19  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:36:19  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:36:21  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:36:26  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:36:29  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:36:29  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:36:29  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:36:29  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:36:29  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:36:29  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:36:29  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:36:29  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:36:29  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:36:31  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:36:36  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:36:39  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:36:39  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:36:39  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:36:39  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:36:39  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:36:39  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:36:39  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:36:39  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:36:39  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:36:41  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:36:46  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:36:49  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:36:49  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:36:49  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:36:49  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:36:49  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:36:49  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:36:49  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:36:49  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:36:49  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:36:51  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:36:56  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:36:59  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:36:59  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:36:59  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:36:59  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:36:59  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:36:59  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:36:59  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:36:59  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:36:59  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:37:01  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:37:06  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:37:09  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:37:09  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:37:09  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:37:09  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:37:09  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:37:09  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:37:09  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:37:09  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:37:09  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:37:11  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:37:16  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:37:19  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:37:19  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:37:19  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:37:19  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:37:19  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:37:19  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:37:19  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:37:19  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:37:19  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:37:21  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:37:26  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:37:29  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:37:29  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:37:29  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:37:29  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:37:29  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:37:29  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:37:29  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:37:29  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:37:29  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:37:31  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:37:36  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:37:39  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:37:39  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:37:39  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:37:39  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:37:39  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:37:39  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:37:39  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:37:39  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:37:39  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:37:41  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:37:46  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:37:49  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:37:49  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:37:49  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:37:49  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:37:49  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:37:49  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:37:49  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:37:49  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:37:49  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:37:51  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:37:56  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:37:59  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:37:59  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:37:59  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:37:59  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:37:59  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:37:59  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:37:59  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:37:59  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:37:59  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:38:01  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:38:06  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:38:09  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:38:09  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:38:09  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:38:09  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:38:09  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:38:09  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:38:09  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:38:09  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:38:09  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:38:11  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:38:16  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:38:19  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:38:19  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:38:19  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:38:19  [ Thread-6:client.model.Client:669 ] - [ INFO ]  by executeOrder Thread-6
2021-07-05 15:38:19  [ Thread-6:client.model.Client:641 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-6
2021-07-05 15:38:19  [ JavaFX Application Thread:client.model.Client:728 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-05 15:38:19  [ Thread-4:server.network.ServerThread:109 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-05 15:38:19  [ Thread-4:protocol.ExecuteOrder:100 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-05 15:38:19  [ Thread-4:protocol.ExecuteOrder:102 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-05 15:38:21  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:38:26  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-05 15:38:29  [ Thread-2190:server.network.AliveCheck:61 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-05 15:38:29  [ Thread-2190:server.network.AliveCheck:62 ] - [ INFO ]  client 33 flag connect = false
2021-07-05 15:38:29  [ Thread-2190:server.network.Server:228 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-05 15:38:31  [ Thread-2189:server.network.Connected:68 ] - [ INFO ]  33 in while loop print flagconnect: true
2021-07-05 15:38:31  [ Thread-2189:server.network.Connected:71 ] - [ INFO ]  33 in first if print flagconnect: true
